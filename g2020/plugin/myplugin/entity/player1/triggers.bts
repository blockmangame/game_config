ENTITY_ENTER
{
    If(IsPlayer(entity = $obj1))
    {
        $obj1.isReadyReward = false
        $obj1.role = @adult
        $obj1.scaleBuff = nil
        $obj1.boundingBuff = nil

        $obj1.requestFamilyPlayer = nil
        $obj1.inviteFamilyPlayer = nil

        CallTrigger(event = "ADD_MONEY", object = $obj1)
        CallTrigger(event = "SHOW_SELECT_ROLE", object = $obj1)    
		
		CallTrigger(event = "SET_DRESS_ARCHIVE", object = $obj1)
        CallTrigger(event = "INIT_PLAYER_DRESS", object = $obj1)


        CallTrigger(event = "CHANGE_DANCE_SKILL", obj1 = $obj1, newSkill = $obj1.danceUseItem)

        -- test data
        --SetSkin(entity = $obj1, skinName = "custom_wing", skinValue = 25)
        --SetSkin(entity = $obj1, skinName = "custom_scarf", skinValue = 3)
        --SetSkin(entity = $obj1, skinName = "clothes_tops", skinValue = 20)
        --SetSkin(entity = $obj1, skinName = "custom_shoes", skinValue = 40)
        --SetSkin(entity = $obj1, skinName = "clothes_pants", skinValue = 35)
        --SetSkin(entity = $obj1, skinName = "custom_hair", skinValue = 5)
        --SetSkin(entity = $obj1, skinName = "custom_face", skinValue = 5)
        --SetSkin(entity = $obj1, skinName = "custom_glasses", skinValue = 3)
        --SetSkin(entity = $obj1, skinName = "custom_hat", skinValue = 5)
    }
------------------------------------------------------------------------------------------------------------------------------ 分割线
    ------------------------------------------ 当前选择存档 $curSelectHouse
    $curSelectHouse = {}
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    If(not $houseVars or ArraySize(array = $houseVars) == 0){ -- 第一次进入游戏的玩家
        Test("----------------------- first in")
        $houseVars = Table([
                "myplugin/house_default",
                "myplugin/house_color_buff_1",
                [   
                    [{x = 1648,y=13,z=-574},180,"myplugin/test_dec_entity1","ddss1","true"],
                    [{x = 1650,y=13,z=-574},180,"myplugin/test_dec_entity2","dds2s","true"]
                ],
                [],
                "enable",
                "Sakura NeNe",
                "houseType",
                "1s"
            ],[
                "myplugin/house_default",
                "myplugin/house_color_buff_1",
                [
                    [{x = 1648,y=13,z=-574},180,"myplugin/test_dec_entity1","dds3s","true"],
                    [{x = 1650,y=13,z=-574},180,"myplugin/test_dec_entity2","dd4ss","true"],
                    [{x = 1652,y=13,z=-574},180,"myplugin/test_dec_entity1","dd5ss","true"],
                    [{x = 1654,y=13,z=-574},180,"myplugin/test_dec_entity2","d6dss","true"]
                ],
                [],
                "disable",
                "Sakura NeNe2",
                "houseType",
                "2s"
            ])
        SetObjectVar(obj = $obj1, key = "houseVars", value = $houseVars)
    }
    Foreach(array = $houseVars, key = "house"){
        If(ArrayGet(array = $house, index = 5) == "enable"){
            $curSelectHouse = $house
            Break()
        }
    }
    ------------------------------------------ 获得当前地图上的空出的区域，创建房子 * 
    -- 区域 <region------owner> 房子 <house-------owner> 玩家，可通过区域获取区域上的房子，通过房子获得所属玩家。 反向同理
    $regions = GetAllRegion(map = GetEntityMap(entity = $obj1))
    Foreach(array = $regions, key = "region"){
        If(not GetRegionOwner(region = $region) and GetRegionConfig(region = $region, key = "isHouseRegion")){
            CallTrigger(object = $obj1, event = "CREATE_HOUSE_OUTSIDE", region = $region, 
                houseCfg = ArrayGet(array = $curSelectHouse, index = 1),
                houseColor = ArrayGet(array = $curSelectHouse, index = 2))
            Break()
        }
    }
    ------------------------------------------ 玩家进入游戏就进入自己房间
    $house = GetObjectVar(obj = $obj1, key = "house")
    $houseInsideMap = GetObjectVar(obj = $house, key = "houseInsideMap")
    SetObjectVar(obj = $obj1, key = "returnDoor", value = GetObjectVar(obj = $house, key = "door"))
    SetEntityPosition(map = $houseInsideMap, entity = $obj1, 
        pos = GetMapInitPos(map = $houseInsideMap) or GetEntityPosition(entity = $obj1))

    CallTrigger(object = $obj1, event = "SHOW_TITLE_BAR") 
------------------------------------------------------------------------------------------------------------------------------ 分割线
}

------------------------------------------------------------------------------------------------------------------------------ 分割线
TEST_DATA{ -- 保存进数据库的数据伪代码
    Table(
        houseVars = [ -- all house 当前entity的所有房子
            [ --   arr[1] = houseCfg, arr[2] = houseSelectColor, 
                -- arr[3] = houseInsideFurnishing, arr[4] = houseInsideRegionColors, arr[5] = enable 当前选中房子标识/ disable 未选中
                -- arr[6] = curHouseName, arr[7] = curHouseType, arr[8] = ID
                "myplugin/xxx...", -- houseCfg 
                "myplugin/xxx...", -- houseSelectColor，是buff来着 -- 外部颜色不影响内部
                [ -- houseInsideFurnishing , 房子内部物品摆放
                    -- pos是相对坐标，每个map都有一个initPos，坐标都是这个initPos+pos
                    -- 绝对坐标也行
                    [{x = "xx", y = "xx", z = "xx"},180,"myplugin/xxx...","id","true/false"],
                    [{x = "xx", y = "xx", z = "xx"},180,"myplugin/xxx...","id","true/false"]
                    -- {pos,yaw,cfg,全局唯一id:furnishingId,是否是旧家具，下线后则会将当前玩家全部房子的全部家具设置成true，即是旧家具}
                ],
                [ -- houseInsideRegionColors 房子内部区域颜色
                    ["regionkey", "myplugin/xxx..."], -- regionkey, color 此处的颜色是替换方块
                    ["regionkey2", "myplugin/xxx..."]
                ],
                "enable", -- cur select house 有这个标志就是 当前选择/出生的房子
                "houseName", -- 当前房子的名字
                "houseType", -- 当前房子的类型
                "houseKey" -- 房子唯一ID，当玩家获得该房子时通过时间计算或者其他的生成的唯一ID
            ],
            [
                -- ... 同上，不是当前选择则第五个参数为disable
            ]
        ]
    )
    Table(Demo = [[[],[]],[[],[]]])
}

CREATE_HOUSE_OUTSIDE{
    $house = CreateNpc(pos = GetRegionCenter(region = $region), map = GetEntityMap(entity = $obj1), cfgName = $houseCfg)
    AddEntityBuff(entity = $house, cfg = GetConfigVar(obj = $house, key = "houseCreateBuff"), buffTime = 200)
    -- 改变房子外部颜色，通过加buff
    AddEntityBuff(entity = $house, cfg = $houseColor)

    SetRegionOwner(region = $region, owner = $house)
    SetObjectVar(obj = $house, key = "owner", value = $obj1)

    SetObjectVar(obj = $obj1, key = "house", value = $house)
    SetObjectVar(obj = $house, key = "region", value = $region)
}

REMOVE_HOUSE_OUTSIDE{
    $house = GetObjectVar(obj = $obj1, key = "house")
    $region = GetObjectVar(obj = $house, key = "region")
    SetRegionOwner(region = $region, owner = nil)
    KillEntity(entity = $house)
}

ENTITY_LEAVE{ 
    ------------------------------------------ 玩家退出，清掉房子 邮箱 门，重置区域owner为nil
    CallTrigger(object = $obj1, event = "REMOVE_HOUSE_OUTSIDE")

    ----------------------------------------- 玩家退出，保存身上穿搭
    CallTrigger(object = $obj1, event = "SAVE_PLAYER_DRESS")

    ---------------------------------------玩家退出，删除掉暂存在数据库“dressArchive”字段中的bm装扮信息
    CallTrigger(object = $obj1, event = "REMOVE_BM_DRESS")
}

UPDATE_HOUSE{
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    ForLoop(from = 1, to = ArraySize(array = $houseVars), key = "index"){
        $houseVar = ArrayGet(array = $houseVars, index = $index)
        If(ArrayGet(array = $houseVar, index = 5) ~= "enable" and $houseKey == ArrayGet(array = $houseVar, index = 8)){
            $newHouseVar = $houseVar   
        }
        If(ArrayGet(array = $houseVar, index = 5) == "enable"){
            $curHouseVar = $houseVar
        }
    }
    If(not $newHouseVar){
        ArraySet(array = $curHouseVar, index = 2, value = $curSelectKey)
        CallTrigger(object = $obj1, event = "CHANGE_HOUSE_COLOR", oldHouseColor = $oldSelectKey, houseColor = $curSelectKey)
    }Else{
        ArraySet(array = $curHouseVar, index = 5, value = "disable")
        ArraySet(array = $newHouseVar, index = 5, value = "enable")
        ArraySet(array = $newHouseVar, index = 2, value = $curSelectKey)
        CallTrigger(object = $obj1, event = "CHANGE_HOUSE", 
            newHouse = ArrayGet(array = $newHouseVar, index = 1), houseColor = $curSelectKey)
    }
    ShowGenericListDisplayBox(entity = $obj1, closeWin = true)
}

CHANGE_HOUSE_COLOR{ -- 换色
    $curHouse = GetObjectVar(obj = $obj1, key = "house")
    $oldBuff = GetEntityTypeBuff(entity = $curHouse, key = "fullName", value = $oldHouseColor)
    If($oldBuff){
        RemoveEntityBuff(entity = $curHouse, buff = $oldBuff)
    }
    AddEntityBuff(entity = $curHouse, cfg = $houseColor) -- 通过buff换skin
}

CHANGE_HOUSE{ -- 换房子/存档
    $region = GetObjectVar(obj = GetObjectVar(obj = $obj1, key = "house"), key = "region")
    ------------------------------------------ 改变房子(actor)，直接杀掉原来的，新建新的
    CallTrigger(object = $obj1, event = "REMOVE_HOUSE_OUTSIDE")
    ShowTip(entity = $obj1, tipType = 1, textKey = "house_change")

    CallTrigger(object = $obj1, event = "CREATE_HOUSE_OUTSIDE", region = $region, houseCfg = $newHouse, houseColor = $houseColor)
}



-------------------------------------- ui/btn/event
HOUSE_TAB_EVENT{
    Test("---------HOUSE_TAB_EVENT")
    If(not $key or "0" == $key){
        Test("--------- u need buy")
        $listInfoTb = [
            {image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_1.png", text = "xxxxx", 
                btnShowText = 100, context = {money = 100, houseCfg = "myplugin/house_default"}},
            {image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_2.png", text = "yyyyy", 
                btnShowText = 200, context = {money = 200, houseCfg = "myplugin/house_default"}},
        ]
        $childInfo = {
            uiWin = "genericListDisplayBox3",
            infoTb = {
                listInfo = {
                    infoTb = $listInfoTb
                },
                btnInfo = {
                    btnText = "ui_house_buy_house",
                    btnTrigger = "SURE_BUY_HOUSE"
                }
            }
        }
        ShowGenericListDisplayBox(entity = $obj1, infoTb = $childInfo, isOpenChild = true)
        Return()
    }
    Test("--------- u need show")
    $curSelectHouse = nil
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    Foreach(array = $houseVars, key = "houseVar"){
        If(ArrayGet(array = $houseVar, index = 8) == $key){
            $curSelectHouse = $houseVar
            Break()
        }
    }
    If(not $curSelectHouse){
        Return()
    }
    -- color
    $selectGvInfo = {}
    $worldAllColor = GetWorldVar(key = "allColor")
    $curHouseColor = GetEntityCfg(fullName = ArrayGet(array = $curSelectHouse, index = 1), key = "allColor")
    Foreach(array = $curHouseColor, key = "entity_color"){
        Foreach(array = $worldAllColor, key = "world_color"){
            If(ArrayGet(array = $entity_color, index = 1) == ArrayGet(array = $world_color, index = 1)){
                ArrayAppend(array = $selectGvInfo, value = {
                    rightImg = ArrayGet(array = $world_color, index = 3),
                    leftImg = ArrayGet(array = $entity_color, index = 2),
                    key = ArrayGet(array = $world_color, index = 2),
                    curSelect = ArrayGet(array = $world_color, index = 2) == ArrayGet(array = $curSelectHouse, index = 2)
                        and true or false
                })
            }
        }
    }
    -- btn
    $btnList = [
        {text = "ui_house_sell_house", trigger = "SELL_HOUSE", context = { houseKey = $key} },
        {text = "ui_house_use_house", trigger = "UPDATE_HOUSE", context = { houseKey = $key} }
    ]
    $infoTb = {
        uiWin = "genericListDisplayBox2",
        infoTb = {
            upperLayerKey = $key,
            titleTb = {text = ArrayGet(array = $houseVar, index = 6), trigger = "EDIT_HOUSE_NAME"},
            selectInfo = {
                selectTitleText = "ui_house_choice_color",
                selectButtomText = ArrayGet(array = $houseVar, index = 7),
                selectGvInfo = $selectGvInfo
            },
            btnInfo = {
                btnType = 2,
                btnList = $btnList
            }
        }
    }
    ShowGenericListDisplayBox(entity = $obj1, infoTb = $infoTb, isOpenChild = true)
}

EDIT_HOUSE_NAME{
    Test("EDIT_HOUSE_NAME")
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    Foreach(array = $houseVars, key = "houseVar"){
        If(ArrayGet(array = $houseVar, index = 8) == $upperLayerKey){
            $curSelectHouse = $houseVar
            Break()
        }
    }



}

SURE_BUY_HOUSE{
    Test("SURE_BUY_HOUSE",$houseCfg, $money)
    If(not $houseCfg){
        --此处判断是否购买失败，失败直接返回
        ShowTip(entity = $obj1, tipType = 1, textKey = "ui_buy_failure")
        Return()
    }

    -------------
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    $houseVar = Table([ -- 购买成功后拼接一个新的房子数据放进entity的houseVars中
        $houseCfg,
        GetEntityCfg(fullName = $houseCfg, key = "defaultColor") or "",
        [],
        [],
        "disable",
        "",
        "",
        ""
    ])
    -------------

    ShowTip(entity = $obj1, tipType = 1, textKey = "ui_buy_success")
    ShowGenericListDisplayBox(entity = $obj1, closeWin = true)
}

SELL_HOUSE{
    Test("SELL_HOUSE",$houseKey)
    $curSelectHouse = nil
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    Foreach(array = $houseVars, key = "houseVar"){
        If(ArrayGet(array = $houseVar, index = 8) == $houseKey){
            $curSelectHouse = $houseVar
            Break()
        }
    }
    If(not $curSelectHouse){
        Return()
    }
    -- showImage
    $worldAllColor = GetWorldVar(key = "allColor")
    $curHouseColor = GetEntityCfg(fullName = ArrayGet(array = $curSelectHouse, index = 1), key = "allColor")
    Foreach(array = $curHouseColor, key = "entity_color"){
        Foreach(array = $worldAllColor, key = "world_color"){
            If(ArrayGet(array = $world_color, index = 2) == ArrayGet(array = $curSelectHouse, index = 2) and 
                ArrayGet(array = $world_color, index = 1) == ArrayGet(array = $entity_color, index = 1)){
                $showImage = ArrayGet(array = $entity_color, index = 2)
                Break()
            }
        }
    }
    -- showTextTb
    $showTextTb = {textWeightList = [
        {keyText = "ui_house_sell_house_money", valueText = "123456678"},
        {keyText = "ui_house_sell_house_type", valueText = "yesssssssssssss"}
    ]}
    -- btn
    $btnList = [
        {text = "ui_sure", trigger = "SELL_HOUSE_SURE", context = { houseKey = $houseKey} },
        {text = "ui_cancle", trigger = "HOUSE_TAB_EVENT", context = { key = $houseKey} }
    ]
    $infoTb = {
        uiWin = "genericShowPage",
        infoTb = {
            upperLayerKey = $houseKey,
            titleTb = {text = ArrayGet(array = $curSelectHouse, index = 6)},
            showImage = $showImage,
            showTextTb = $showTextTb,
            btnInfo = {
                btnType = 2,
                btnList = $btnList
            }
        }
    }
    ShowGenericListDisplayBox(entity = $obj1, infoTb = $infoTb, isOpenChild = true)
}

SELL_HOUSE_SURE{
    $curSelectHouse = nil
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    If(ArraySize(array = $houseVars) <= 1){ -- 最后一套房不能出售
        ShowTip(entity = $obj1, tipType = 1, textKey = "ui_house_sell_cant_sell")
        Return()
    }
    ForLoop(from = 1, to = ArraySize(array = $houseVars), key = "index"){
        If(ArrayGet(array = ArrayGet(array = $houseVars, index = $index), index = 8) == $houseKey){
            $curSelectHouse = $houseVar
            ArrayRemove(array = $houseVars, index = $index)
            Break()
        }
    }
    $newHouseVar = ArrayGet(array = $houseVars, index = 1)
    ArraySet(array = $newHouseVar, index = 5, value = "enable")
    CallTrigger(object = $obj1, event = "CHANGE_HOUSE", 
            newHouse = ArrayGet(array = $newHouseVar, index = 1), houseColor = ArrayGet(array = $newHouseVar, index = 2))
    --- 出售成功，给玩家钱
    ShowGenericListDisplayBox(entity = $obj1, closeWin = true)
}

BUY_STORE{ -- TODO UPDATE
    Test("BUY_STORE",$storeMoneyKey,$cfg,"---------购买后直接出现在场景里的逻辑 createNpc..xxx")
    ShowGenericActorShowStore(entity = $obj1, infoTb = {}, closeWin =true)
    
    $map = GetObjectVar(obj = GetObjectVar(obj = $obj1, key = "house"), key = "houseInsideMap")
    CreateNpc(pos = GetEntityPosition(entity = $obj1), map = $map, cfgName = $cfg)



}

SHOW_TITLE_BAR{
    Test("SHOW_TITLE_BAR")
    $editBuff = GetEntityTypeBuff(entity = $obj1, key = "fullName", value = "myplugin/edit_house_buff")
    If($editBuff){
        RemoveEntityBuff(entity = $obj1, buff = $editBuff)
    }
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = [
                {text = "ui_edit", trigger = "EDIT_HOUSE"},
                {text = "ui_lock", trigger = "HOUSE_LOCK"}
            ]
        }
    }
    ShowTitleBarPage(entity = $obj1, infoTb = $infoTb)
}

EDIT_HOUSE{
    Test("EDIT_HOUSE")
    ShowGenericActorShowStore(entity = $obj1, infoTb = {}, closeWin =true)
    $editBuff = GetEntityTypeBuff(entity = $obj1, key = "fullName", value = "myplugin/edit_house_buff")
    If(not $editBuff){
        AddEntityBuff(entity = $obj1, cfg = "myplugin/edit_house_buff")
    }
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = [
                {text = "ui_dec_shop", trigger = "SHOW_DEC_STORE"},
                {text = "ui_cancle", trigger = "SHOW_TITLE_BAR" }
            ]
        }
    }
    ShowTitleBarPage(entity = $obj1, infoTb = $infoTb)
}

HOUSE_LOCK{
    Test("HOUSE_LOCK")
    $house = GetObjectVar(obj = $obj1, key = "house")
    $isLock = GetObjectVar(obj = $house, key = "isLock")
    SetObjectVar(obj = $house, key = "isLock", value = not $isLock) -- 给房门上锁
    ShowTip(entity = $obj1, tipType = 2,textKey = "house_lock", time = 40)
    If($isLock){ -- 上锁状态则重置为未上锁状态
        ShowTip(entity = $obj1, tipType = 2,textKey = "house_unlock", time = 40)
        CallTrigger(object = $obj1, event = "SHOW_TITLE_BAR") 
    }
}

SHOW_DEC_STORE{
    Test("SHOW_DEC_STORE")
    Test(" 买东西测试代码 ， 以及逻辑") -- TODO UPDATE
    ShowGenericActorShowStore(entity = $obj1, infoTb = {})
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    If(not $titleKey){
        $titleKey = "allDec"
    }

    $btnListTb = {}
    ArraySet(array = $btnListTb, index = 1, value = {
        text = "11112d", curSelect = $titleKey == "allDec", trigger = "SHOW_DEC_STORE", context = {titleKey = "allDec"}
    })
    ArraySet(array = $btnListTb, index = 2, value = {
        text = "2223123", curSelect = $titleKey == "allEdit", trigger = "SHOW_DEC_STORE", context = {titleKey = "allEdit"}
    })

    $listInfoTb = {}
    If($titleKey == "allDec"){
        ArraySet(array = $listInfoTb, index = 1, value = {
            text = "111", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_1.png", trigger = "SHOW_DEC_STORE_A", context = {titleKey = "allDec"}
        })
        ArraySet(array = $listInfoTb, index = 2, value = {
            text = "222", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_2.png", trigger = "SHOW_DEC_STORE_B", context = {titleKey = "allDec"}
        })
    }

    If($titleKey == "allEdit"){
        ArraySet(array = $listInfoTb, index = 1, value = {
            text = "333", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_4.png", trigger = "EDIT_FLOOR", context = {titleKey = "allEdit"}
        })
        ArraySet(array = $listInfoTb, index = 2, value = {
            text = "444", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_5.png", trigger = "EDIT_WAR", context = {titleKey = "allEdit"}
        })
    }

    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = $btnListTb
        },
        listInfo = {
            uiType = 3,
            infoTb = $listInfoTb
        },
        eventInfo = {
            closeEventInfo = {trigger = "EDIT_HOUSE"}
        }
    }
    ShowGenericActorShowStore(entity = $obj1, infoTb = $infoTb, updateWin =true)
}

SHOW_DEC_STORE_A{
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    If(not $titleKey){
        $titleKey = "allDec"
    }

    $btnListTb = {}
    ArraySet(array = $btnListTb, index = 1, value = {
        text = "11112d", curSelect = $titleKey == "allDec", trigger = "SHOW_DEC_STORE", context = {titleKey = "allDec"}
    })
    ArraySet(array = $btnListTb, index = 2, value = {
        text = "2223123", curSelect = $titleKey == "allEdit", trigger = "SHOW_DEC_STORE", context = {titleKey = "allEdit"}
    })

    $listInfoTb = {}
    ArraySet(array = $listInfoTb, index = 1, value = {
        text = "111122wwasd", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_5.png", 
        cfg = "myplugin/test_dec_entity1", trigger = "BUY_STORE", context = {storeMoneyKey = 12324, cfg = "myplugin/test_dec_entity1"}
    })
    ArraySet(array = $listInfoTb, index = 2, value = {
        text = "222aaa", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_6.png", 
        cfg = "myplugin/test_dec_entity2", trigger = "BUY_STORE", context = {storeMoneyKey = 12231324, cfg = "myplugin/test_dec_entity2"}
    })

    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = $btnListTb
        },
        listInfo = {
            uiType = 2,
            infoTb = $listInfoTb
        },
        eventInfo = {
            closeEventInfo = {trigger = "EDIT_HOUSE"},
            leftEventInfo = {trigger = "SHOW_DEC_STORE", context = {titleKey = "allDec"}},
            rightEventInfo = {trigger = "SHOW_DEC_STORE_B"}
        }
    }
    ShowGenericActorShowStore(entity = $obj1, infoTb = $infoTb, updateWin =true)
}

SHOW_DEC_STORE_B{  
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    If(not $titleKey){
        $titleKey = "allDec"
    }

    $btnListTb = {}
    ArraySet(array = $btnListTb, index = 1, value = {
        text = "11112d", curSelect = $titleKey == "allDec", trigger = "SHOW_DEC_STORE", context = {titleKey = "allDec"}
    })
    ArraySet(array = $btnListTb, index = 2, value = {
        text = "2223123", curSelect = $titleKey == "allEdit", trigger = "SHOW_DEC_STORE", context = {titleKey = "allEdit"}
    })

    $listInfoTb = {}
    ArraySet(array = $listInfoTb, index = 1, value = {
        text = "111122wwad", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_1.png", 
        cfg = "myplugin/test_dec_entity1", trigger = "BUY_STORE", context = {storeMoneyKey = 12324, cfg = "myplugin/test_dec_entity1"}
    })

    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = $btnListTb
        },
        listInfo = {
            uiType = 2,
            infoTb = $listInfoTb
        },
        eventInfo = {
            closeEventInfo = {trigger = "EDIT_HOUSE"},
            leftEventInfo = {trigger = "SHOW_DEC_STORE", context = {titleKey = "allDec"}},
            rightEventInfo = {trigger = "SHOW_DEC_STORE_A"}
        }
    }
    ShowGenericActorShowStore(entity = $obj1, infoTb = $infoTb, updateWin =true)
}

EDIT_FLOOR{
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    Test("EDIT_FLOOR")
}

EDIT_WAR{
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    Test("EDIT_WAR")
}

------------------------------------------------------------------------------------------------------------------------------ 分割线

ADD_MONEY
{  
    $today = GetYearDayStr(time = GetTime())

    If($today ~= $obj1.rewardDay)
    {
        $obj1.rewardCounts = 1
        $obj1.rewardDay = $today
    }

    $count = $obj1.rewardCounts
    $arraySize = ArraySize(array = @CDReward)
    If($count > $arraySize)
    {
        $count = $arraySize
    }
    $rewardArray = ArrayGet(array = @CDReward, index = $count)
    $cdTime = ArrayGet(array = $rewardArray, index = 1)
    $money = ArrayGet(array = $rewardArray, index = 2)

    If($obj1.isReadyReward)
    {
        AddCurrency(count = $money, coinName = "green_currency", entity = $obj1)
        ShowRewardRollTip(image = "set:jail_break.json image:jail_break_currency", text = Concat(p1 = "+", p2 = $money), entity = $obj1)
        $obj1.rewardCounts = $obj1.rewardCounts + 1
    }
    StartTimer(rep = false, time = $cdTime, object = $obj1, event = "ADD_MONEY")
    ShowRewardCD(player = $obj1, time = $cdTime)
    $obj1.isReadyReward = true
}


FUNC_GENERATE_STATE
{
    $hadState = Concat(p1 = "is", p2 = $state)
    If(GetObjectVar(obj = $obj1, key = $hadState) && ($state ~= "region" || $obj1.regionRTime > 0))
    {
        Return()
    }
    SetObjectVar(obj = $obj1, key = Concat(p1 = $state, p2 = "InteractList"), value = nil)
    SetObjectVar(obj = $obj1, key = $hadState, value = true)
    --CallTrigger(object = $obj1, event = "FUNC_CLOSE_GPS") --TODO 待考虑放在哪里合适
    CallTrigger(object = $obj1, event = "FUNC_STATE_ADD_SKILL", state = $state)
}

FUNC_STATE_ADD_SKILL
{
    $p1 = "myplugin/skill_state_"
    $skill = Concat(p1 = $p1, p2 = $state)
    AddSkill(entity = $obj1, name = $skill)
    
    $state = $state ~= "region" and $state or ArrayGet(
                                                array = GetSkillVar(
                                                    fullName = $skill,
                                                    key = "locations"
                                                ),
                                                index = $obj1.regionIdx
                                            ) 
    
    CallTrigger(object = $obj1, event = "FUNC_STATE_IS_IN_REGION", state = $state)
}

FUNC_STATE_IS_IN_REGION --判断状态生成时是否就已经在区域里面了
{   
    $reg = GetRegionByName(
        map = GetEntityMap(entity = $obj1),
        name = $state 
    )

    If($reg && IfEntityInArea(
                    entity = $obj1,
                    region = {
                        min = GetRegionMin(region = $reg),
                        max = GetRegionMax(region = $reg) + V3(1, 1, 1)
                    }
                )
    )
    {
        CallTrigger(
            opt = "INNER",
            object = $obj1,
            key = GetRegionKey(region = $reg),
            event = "FUNC_REGION_STATE_OPERATION",
            type = GetRegionCfgVar(region = $reg, key = "stateType")
        )
    }
}

INTERACTION_CLAP { --拍手 小孩和小孩
    If($obj2.role == @child && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_clap", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_HUG { --拥抱 小孩和小孩 or 大人和大人
    If($obj2.role == @child && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_hug", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }

    If($obj2.role == @adult && $obj1.role == @adult) {
        CastSkill(skill = "myplugin/action_hug", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_HANDSHAKE { --握手 大人和大人
    If($obj2.role == @adult && $obj1.role == @adult) {
        CastSkill(skill = "myplugin/action_handshake", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_RIDE { --骑乘 小孩和大人
    If($obj2.role == @child && $obj1.role == @adult) {
        CastSkill(skill = "myplugin/action_ride", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_HAND_IN_HAND { --手拉手 小孩和大人
    If($obj2.role == @child && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_handinhand", from = $obj1, packet = {targetID = GetObjectID(object = $obj2)})
    }
}

INTERACTION_FOLLOW { --跟随
    CastSkill(skill = "myplugin/action_follow", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
}


INTERACTION_PICK {
    If($obj2.role == @adult && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_pickup", from = $obj1, packet = {targetID = GetObjectID(object = $obj2)})
    }
}

INTERACTION_BABY_TROLLEY {

}

ENTITY_JUMP {
    CallTrigger(obj1 = $obj1, event = "ENTITY_REMOVE_INTERACTION")
}

ENTITY_DIE {
	CallTrigger(obj1 = $obj1, event = "ENTITY_REMOVE_INTERACTION")
}

ENTITY_REMOVE_INTERACTION {
    If($obj1.interactionObjId){
        $target = GetObject(objID = $obj1.interactionObjId)
        If($target && $target.interactionBuff) {
            RemoveEntityBuff(buff = $target.interactionBuff, entity = $target)
        }
    }

    If($obj1.interactionBuff){
        RemoveEntityBuff(buff = $obj1.interactionBuff, entity = $obj1)
    }
}

FUNC_REGION_STATE_OPERATION 
{
    If($key == GetObjectVar(obj = $obj1, key = "gpsDestination"))
    {
        ShowTip(entity = $obj1, tipType = 3, textKey = "you_came")
        CallTrigger(object = $obj1, event = "FUNC_CLOSE_GPS")
    }

    $skill = Concat(p1 = "myplugin/skill_state_", p2 = $key)
    $duration = GetSkillVar(fullName = $skill, key = "duration")
    --Test($duration, "FUNC_REGION_STATE_OPERATION", $key, $type) --TODO LOG

    If($type == "B" && $obj1.isregion)
    {
        If($opt ~= "INNER")
        {
            $location = ArrayGet(
                array = GetSkillVar(
                    fullName = $skill,
                    key = "locations"
                ),
                index = $obj1.regionIdx
            )
            --Test($location, "ArrayGet locations") --TODO LOG
            If($location ~= $key)
            {
                Return()
            }
        }
        If($opt == "LEAVE")
        {
            ShowProgressFollowObj(entity = $obj1, isOpen = false)
            If($obj1.REGION_TIMER){StopTimer(timer = $obj1.REGION_TIMER)}
            If($obj1.regionSTime){$obj1.regionRTime = $obj1.regionRTime - GetTime() + $obj1.regionSTime}
            Return()
        }

        $obj1.regionRTime = $obj1.regionRTime == 0 and $duration or $obj1.regionRTime
        $obj1.regionSTime = GetTime()

        ShowProgressFollowObj(
            isOpen = true,
            pgName = $key,
            entity = $obj1,
            totalTime = $duration * 20,
            rTime = $obj1.regionRTime * 20,
        )

        $obj1.REGION_TIMER = StartTimer(
            rep = false,
            object = $obj1,
            stateName = "region",
            time = ($obj1.regionRTime * 20) // 1,
            event = "FUNC_STATE_RELEASE_AND_REWARD",
        )
    }
}

FUNC_STATE_ADD_INTERACTLIST
{
    Foreach(array = @Generate_State_List, key = "stateName")
    {
        If(not GetObjectVar(obj = $obj1, key = Concat(p1 = "is", p2 = $stateName)))
        {
            Continue()
        }
        $listName = Concat(p1 = $stateName, p2 = "InteractList")
        $interactList = GetObjectVar(obj = $obj1, key = $listName)
        $targetID = GetObjectVar(obj = $obj1, key = "interactionObjId")
        If(not IsPlayer(entity = GetObject(objID = $targetID)))
        {
            Return()
        }
        If(not $interactList)
        {
            $interactList = []
        }
        If(not ArrayFind(array = $interactList, value = $targetID))
        {
            ArrayAppend(array = $interactList, value = $targetID)
        }
        SetObjectVar(obj = $obj1, key = $listName, value = $interactList)
    }
}

FUNC_STATE_RELEASE_AND_REWARD
{
    $hadState = Concat(p1 = "is", p2 = $stateName)
    If(not GetObjectVar(obj = $obj1, key = $hadState))
    {
        Return()
    }
    SetObjectVar(obj = $obj1, key = $hadState, value = false)

    If($stateName == "region")
    {
        $obj1.regionRTime = 0
    }

    $skillName = Concat(p1 = "myplugin/skill_state_", p2 = $stateName)
    RemoveSkill(entity = $obj1, name = "myplugin/close_gps")
    ShowProgressFollowObj(entity = $obj1, isOpen = false)
    RemoveSkill(entity = $obj1, name = $skillName)
    SetGuidePostion(entity = $obj1)

    $rewardSelf = GetSkillVar(fullName = $skillName, key = "rewardSelf")
    $rewardOther = GetSkillVar(fullName = $skillName, key = "rewardOther")
    $rewardDis = GetSkillVar(fullName = $skillName, key = "rewardDis")

    $listName = Concat(p1 = $stateName, p2 = "InteractList")
    If(not GetObjectVar(obj = $obj1, key = $listName))
    {
        CallTrigger(object = $obj1, event = "FUNC_STATE_REWARD_AND_TIP", rewardCount = $rewardSelf)
        Return()
    }
    Foreach(array = GetObjectVar(obj = $obj1, key = $listName), key = "objID")
    {
        $player = GetObject(objID = $objID)
        If(not IsPlayer(entity = $player) || GetObjectDistance(obj1 = $obj1, obj2 = $player) > $rewardDis)
        {
            Continue()
        }
        CallTrigger(object = $player, event = "FUNC_STATE_REWARD_AND_TIP", rewardCount = $rewardOther)
    }
    CallTrigger(object = $obj1, event = "FUNC_STATE_REWARD_AND_TIP", rewardCount = $rewardOther)
    SetObjectVar(obj = $obj1, key = $listName, value = nil)
}

FUNC_STATE_REWARD_AND_TIP
{
    AddCurrency(coinName = "green_currency", entity = $obj1, count = $rewardCount)
    ShowRewardRollTip(
        entity = $obj1,
        image = "set:jail_break.json image:jail_break_currency",
        text = Concat(p1 = "+", p2 = $rewardCount, p3 = "(照顾加成)"),
    )
}

FUNC_STATE_OPEN_GPS
{
    If(not $rtVal)
    {
        Return()
    }

    --TODO 完善状态的GPS导航
    $map = GetEntityMap(entity = $obj1)
    $mapName = GetEntityName(entity = $map)
    Test($mapName, "FUNC_STATE_OPEN_GPS") --TODO LOG
    
    $regObj = GetCfg(type = "region", fullName = Concat(p1 = "myplugin/region_state_", p2 = $rtVal))
    $type = GetObjectVar(obj = $regObj, key = "siteType")
    $gps = { x = 0, y = 0, z = 0 }
    If($mapName == "map001")
    {
        If($type == "publicArea")
        {
            $region = GetRegionByName(map = $map, name = $rtVal)
            If(not $region)
            {
                Return()
            }
            $tmpReg = {
                min = GetRegionMin(region = $region),
                max = GetRegionMax(region = $region) + V3(1, 1, 1)
            }
            If(IfEntityInArea(entity = $obj1, region = $tmpReg))
            {
                ShowTip(entity = $obj1, tipType = 3, textKey = "you_came")
                CallTrigger(object = $obj1, event = "FUNC_CLOSE_GPS")
                Return()
            }
            $gps = GetRegionCfgVar(region = $region, key = "gps")
        }
        ElseIf($type == "selfHouse")
        {
            $house = GetObjectVar(obj = $obj1, key = "house")
            $gps = ComputeV3(p1 = GetEntityPosition(entity = $house), p2 = GetConfigVar(obj = $house, key = "doorPos"), op = "add")
        }
    }

    ElseIf($mapName == "house_default_inside_map")
    {
        $house = GetObjectVar(obj = $obj1, key = "house")
        $houseInsideMap = GetObjectVar(obj = $house, key = "houseInsideMap")
        $gps = GetConfigVar(obj = $house, key = "insideDoorPos")
        If($map == $houseInsideMap && $type == "selfHouse")
        {
            ShowTip(entity = $obj1, tipType = 3, textKey = "you_came")
            CallTrigger(object = $obj1, event = "FUNC_CLOSE_GPS")
            Return()
        }
    }

    CallTrigger(
        object = $obj1,
        event = "FUNC_OPEN_GPS",
        destination = $rtVal,
        pos = $gps
    )
}
CREATE_FAMILY
{
    If(IsPlayer(entity = $obj1))
    {
        $familyId = GetEntityTeam(entity = $obj1)
        If($familyId and $familyId ~= 0)
        {
            Return()
        }
        SetEntityTeam(entity = $obj1, teamId = @familyIndex)
        @familyIndex = @familyIndex + 1
        ShowTip(entity = $obj1, tipType = 2,textKey = "Create Family Success", time = 40)
    }
}

QUIT_FAMILY
{
    If(IsPlayer(entity = $obj1))
    {
        SetEntityTeam(entity = $obj1, teamId = 0)
        ShowTip(entity = $obj1, tipType = 2,textKey = "Quit Family Success", time = 40)
        CallTrigger(event = "INIT_TEAM_UI", obj1 = $obj1, show = false)
    }
}

REQUEST_JOIN_FAMILY
{
    $targetFamilyID = GetEntityTeam(entity = $obj1)
    If(not $targetFamilyID or $targetFamilyID == 0)
    {
        Return()
    }
    $obj1.requestFamilyPlayer = $obj2
    ShowNotice(
            buttonType = 2,
            content = "I Want Join Family",
            eventYes = "REQUEST_JOIN_FAMILY_YES",
            eventNo = "REQUEST_JOIN_FAMILY_NO",
            entity = $obj1,
            textP1 = "Hahahaha",
            tittleKey = "I Want Join Family"
    )

    ShowBubbleMsg(entity = $obj2, textKey = "I Want Join Family")
}

INVITE_JOIN_FAMILY
{
    $myFamilyID = GetEntityTeam(entity = $obj2)
    If(not $myFamilyID or $myFamilyID == 0)
    {
        Return()
    }

    $playerCount = GetTeamInfo(teamId = $myFamilyID, key = "playerCount")
    If(not $playerCount or $playerCount >= 4)
    {
        Return()
    }

    $obj1.inviteFamilyPlayer = $obj2

    ShowNotice(
            buttonType = 2,
            content = "Do you want Join My Family",
            eventYes = "INVITE_JOIN_FAMILY_YES",
            eventNo = "INVITE_JOIN_FAMILY_NO",
            entity = $obj1,
            textP1 = "Hahahaha",
            tittleKey = "Do you want Join My Family"
    )

    ShowBubbleMsg(entity = $obj2, textKey = "Do you want Join My Family")
}

INIT_TEAM_UI
{
    $title = {
        name = "My Family Hahaha"
    }

    $content = {
        showHeadPic = true,
        showGender = true,
        showScale = true,
        showNickName = true
    }
    
    $buttons = [
        {
            event = "QUIT_FAMILY",
            normalImage = "set:new_gui_task.json image:yellow_btn.png",
            pushedImage = "set:new_gui_task.json image:yellow_btn.png",
            name = "Quit Family"
        }
    ]

    $closeBtn = {
        disableClose = false
    }


    $info = {
        title = $title,
        content = $content,
        buttons = $buttons,
        closeBtn = $closeBtn
    }

    ShowTeam(entity = $obj1, show = $show, info = $info)
}

STORE_ITEM_STATUS_CHANGE {

    $dictItem = NewDictionary($item)
    $storeId = DictionaryGet(dict = $dictItem, key = "storeId")
    $itemIndex = DictionaryGet(dict = $dictItem, key = "index")
    $danceStoreId = GetWorldVar(key = "danceStoreId")
    If($storeId == $danceStoreId && $targetIndex > 0)
    {
        $newDance = {}
        $oldIndex = 0
        $oldValue = 0
        $danceIndex = 1
        Foreach(array = $obj1.danceUseItem, key = "value")
        {
            If($value == $itemIndex)
            {
                $oldIndex = $danceIndex
            }

            If ($danceIndex == $targetIndex)
            {
                $oldValue = $value
                ArraySet(array = $newDance, index = $danceIndex , value = $itemIndex)
            } Else {
                ArraySet(array = $newDance, index = $danceIndex , value = $value)
            }

            $danceIndex = $danceIndex + 1
        }

        If ($oldIndex > 0) {
            ArraySet(array = $newDance, index = $oldIndex , value = $oldValue)
        }

        $newData = {}
        $dataIndex = 1
        Foreach(array = $data, key = "value")
        {
            $dictValue = NewDictionary($value)
            $dictStoreId = DictionaryGet(dict = $dictValue, key = "storeId")
            $dictStoreItemIndex = DictionaryGet(dict = $dictValue, key = "itemIndex")
            If ($dictStoreId == $danceStoreId)
            {
                DictionarySet(dict = $dictValue, key = "status", value = 1)
            }
            ArraySet(array = $newData, index = $dataIndex , value = $dictValue)
            $dataIndex = $dataIndex + 1
        }
        
        Foreach(array = $newDance, key = "value")
        {
            $isChange = false
            Foreach(array = $newData, key = "dictValue")
            {
                $dictStoreId = DictionaryGet(dict = $dictValue, key = "storeId")
                $dictItemIndex = DictionaryGet(dict = $dictValue, key = "itemIndex")
                If($dictItemIndex == $value && $dictStoreId == $danceStoreId)
                {
                    $isChange = true
                    DictionarySet(dict = $dictValue, key = "status", value = 2)
                    Break()
                }
            }
            If ($isChange == false)
            {
                $dictValue = NewDictionary({})
                DictionarySet(dict = $dictValue, key = "status", value = 2)
                DictionarySet(dict = $dictValue, key = "itemIndex", value = $value)
                DictionarySet(dict = $dictValue, key = "storeId", value = $danceStoreId)
            }
        }
        
        $dataIndex = 1
        $dataRestore = {}
        Foreach(array = $newData, key = "dictValue")
        {
            ArraySet(array = $dataRestore, index = $dataIndex , value = DictionaryToTable(dict = $dictValue))
            $dataIndex = $dataIndex + 1
        }

        CallTrigger(event = "CHANGE_DANCE_SKILL", obj1 = $obj1, oldSkill = $obj1.danceUseItem , newSkill = $newDance)
        $obj1.danceUseItem = $newDance
        $data = $dataRestore
        $def = false
    }
}

CHANGE_DANCE_SKILL
{
    $danceStoreId = GetWorldVar(key = "danceStoreId")
    If($oldSkill)
    {
        Foreach(array = $oldSkill, key = "value")
        {
            $skillName = GetStoreItemName(storeId= $danceStoreId , index = $value)
            ForgetSkill(entity = $obj1, name = $skillName)
        }
    }

    If($newSkill)
    {
        UpdateUIData(player = $obj1, ui = "win_dance", data = $newSkill)

        Foreach(array = $newSkill, key = "value")
        {
            $skillName = GetStoreItemName(storeId= $danceStoreId , index = $value)
            LearnSkill(entity = $obj1, name = $skillName)
            EquipSkill(entity = $obj1, name = $skillName)
        }
    }
}

SET_DRESS_ARCHIVE
{
    $dressArchive = GetObjectVar(obj = $obj1, key = "dressArchive")
    If(not $dressArchive)
    {
        Return()
    }

    $bmDressData = {
        vars = {
            custom_face = GetSkin(entity = $obj1, skinName = "custom_face"),
            custom_hair = GetSkin(entity = $obj1, skinName = "custom_hair"),
            clothes_tops = GetSkin(entity = $obj1, skinName = "clothes_tops"),
            clothes_pants = GetSkin(entity = $obj1, skinName = "clothes_pants"),
            custom_shoes = GetSkin(entity = $obj1, skinName = "custom_shoes"),
            custom_glasses = GetSkin(entity = $obj1, skinName = "custom_glasses"),
            custom_scarf = GetSkin(entity = $obj1, skinName = "custom_scarf"),
            custom_wing = GetSkin(entity = $obj1, skinName = "custom_wing"),
            custom_hat = GetSkin(entity = $obj1, skinName = "custom_hat"),
            custom_tail = GetSkin(entity = $obj1, skinName = "custom_tail")
        }
    }

    $bmDressInfo = {
        vars = {
            name = "ui_dress_archive_app_dress",
            data = $bmDressData
        }
    }

    ArrayAppend(array = $dressArchive, value = $bmDressInfo)

    UpdateUIData(player = $obj1, ui = "win_dressArchive", data = $dressArchive)

}

OPERATE_DRESS_ARCHIVE
{
    If($type == 1)
    {
        CallTrigger(event = "ADD_DRESS_ARCHIVE", object = $obj1, name = $name)
    }

    If($type == 2)
    {
        CallTrigger(event = "DELETE_DRESS_ARCHIVE", object = $obj1, index = $index)
    }

    If($type == 3)
    {
        CallTrigger(event = "RENAME_DRESS_ARCHIVE", object = $obj1, name = $name, index = $index)
    }
}

ADD_DRESS_ARCHIVE
{
    $dressArchive = GetObjectVar(obj = $obj1, key = "dressArchive")
    If(not $dressArchive)
    {
        Return()
    }

    If((ArraySize(array = $dressArchive) - 1) <= GetWorldVar(key = "dressArchiveNum"))
    {
        $addDressData = {
            vars = {
                custom_face = GetSkin(entity = $obj1, skinName = "custom_face"),
                custom_hair = GetSkin(entity = $obj1, skinName = "custom_hair"),
                clothes_tops = GetSkin(entity = $obj1, skinName = "clothes_tops"),
                clothes_pants = GetSkin(entity = $obj1, skinName = "clothes_pants"),
                custom_shoes = GetSkin(entity = $obj1, skinName = "custom_shoes"),
                custom_glasses = GetSkin(entity = $obj1, skinName = "custom_glasses"),
                custom_scarf = GetSkin(entity = $obj1, skinName = "custom_scarf"),
                custom_wing = GetSkin(entity = $obj1, skinName = "custom_wing"),
                custom_hat = GetSkin(entity = $obj1, skinName = "custom_hat"),
                custom_tail = GetSkin(entity = $obj1, skinName = "custom_tail")
            }
        }

        $addDressInfo = {
            vars = {
                name = $name,
                data = $addDressData,
                isSelect = false
            }
        }

        ArrayInsert(array = $dressArchive, index = 1, value = $addDressInfo)

        UpdateUIData(player = $obj1, ui = "win_dressArchive", data = $dressArchive)
    }
}

DELETE_DRESS_ARCHIVE
{
    
    $dressArchive = GetObjectVar(obj = $obj1, key = "dressArchive")
    If(not $dressArchive)
    {
        Return()
    }

    If($index <= ArraySize(array = $dressArchive) and $index > 0)
    {
        ArrayRemove(array = $dressArchive, index = $index)
    }
    
    UpdateUIData(player = $obj1, ui = "win_dressArchive", data = $dressArchive)
}

RENAME_DRESS_ARCHIVE
{
    $dressArchive = GetObjectVar(obj = $obj1, key = "dressArchive")
    If(not $dressArchive)
    {
        Return()
    }

    If($index <= ArraySize(array = $dressArchive) and $index > 0)
    {
        $archive = ArrayGet(array = $dressArchive, index = $index)
        If($archive)
        {
            SetObjectVar(obj = $archive, key = "name", value = $name)
        }
    }
    
    UpdateUIData(player = $obj1, ui = "win_dressArchive", data = $dressArchive) 
}

REMOVE_BM_DRESS
{
    $dressArchive = GetObjectVar(obj = $obj1, key = "dressArchive")
    If(not $dressArchive)
    {
        Return()
    }

    ArrayRemove(array = $dressArchive, index = ArraySize(array = $dressArchive))
}

INIT_PLAYER_DRESS
{
    $gameDress = GetObjectVar(obj = $obj1, key = "gameDress")
    If(not $gameDress)
    {
        Return()
    }

    If($gameDress ~= "")
    {
        $dressDict = NewDictionary($gameDress)
        ForeachDictionary(dict = $dressDict, keyName = "skinName", valueName = "skinValue")
        {
            SetSkin(entity = $obj1, skinName = $skinName, skinValue = $skinValue)
        }
    }
}

SAVE_PLAYER_DRESS
{
    $gameDress = GetObjectVar(obj = $obj1, key = "gameDress")
    If(not $gameDress)
    {
        Return()
    }

    $gameDress = {
        custom_face = GetSkin(entity = $obj1, skinName = "custom_face"),
        custom_hair = GetSkin(entity = $obj1, skinName = "custom_hair"),
        clothes_tops = GetSkin(entity = $obj1, skinName = "clothes_tops"),
        clothes_pants = GetSkin(entity = $obj1, skinName = "clothes_pants"),
        custom_shoes = GetSkin(entity = $obj1, skinName = "custom_shoes"),
        custom_glasses = GetSkin(entity = $obj1, skinName = "custom_glasses"),
        custom_scarf = GetSkin(entity = $obj1, skinName = "custom_scarf"),
        custom_wing = GetSkin(entity = $obj1, skinName = "custom_wing"),
        custom_hat = GetSkin(entity = $obj1, skinName = "custom_hat"),
        custom_tail = GetSkin(entity = $obj1, skinName = "custom_tail")
    }
}