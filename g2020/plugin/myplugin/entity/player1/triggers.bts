PLAYER_INTERACTION(debug = false){
    UpdateObjectInteractionUI(cfgKey = "interaction_choices", player = $obj2, target = $obj1, show = true)
}
INTERACTION_FEED(debug = true){
    --TODO
}
ENTITY_ENTER
{
    CallTrigger(event = "INIT_WORK_TASK", object = $obj1) --初始化打工任务
    If(IsPlayer(entity = $obj1))
    {
        $playerName = GetEntityName(entity = $obj1)

        If($obj1.nickName == "defaultNickName")
        {
            $obj1.nickName = $playerName
        }

        If($obj1.nickName ~= $playerName)
        {
            SetEntityName(entity = $obj1, name = $nickName)
        }

        $obj1.isReadyReward = false
        $obj1.role = @adult
        $obj1.scaleBuff = nil
        $obj1.boundingBuff = nil

        $obj1.requestFamilyPlayer = nil
        $obj1.inviteFamilyPlayer = nil

        CallTrigger(event = "ADD_MONEY", object = $obj1)
        CallTrigger(event = "SHOW_SELECT_ROLE", object = $obj1)    
		
		CallTrigger(event = "SET_DRESS_ARCHIVE", object = $obj1)
        CallTrigger(event = "INIT_PLAYER_DRESS", object = $obj1)


        CallTrigger(event = "CHANGE_DANCE_SKILL", obj1 = $obj1, newSkill = $obj1.danceUseItem)

        LoadPlayerAppDress(player = $obj1, event = "HTTP_PURCHASED_DRESS_CALL_BACK")

        -- test data
        --SetSkin(entity = $obj1, skinName = "custom_wing", skinValue = 25)
        --SetSkin(entity = $obj1, skinName = "custom_scarf", skinValue = 3)
        --SetSkin(entity = $obj1, skinName = "clothes_tops", skinValue = 20)
        --SetSkin(entity = $obj1, skinName = "custom_shoes", skinValue = 40)
        --SetSkin(entity = $obj1, skinName = "clothes_pants", skinValue = 35)
        --SetSkin(entity = $obj1, skinName = "custom_hair", skinValue = 5)
        --SetSkin(entity = $obj1, skinName = "custom_face", skinValue = 5)
        --SetSkin(entity = $obj1, skinName = "custom_glasses", skinValue = 3)
        --SetSkin(entity = $obj1, skinName = "custom_hat", skinValue = 5)
        --SetSkin(entity = $obj1, skinName = "custom_tail", skinValue = 5)
    }
------------------------------------------------------------------------------------------------------------------------------ 分割线
    ------------------------------------------ 当前选择存档 $curSelectHouse
    $curSelectHouse = {}
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    If(not $houseVars or ArraySize(array = $houseVars) == 0){ -- 第一次进入游戏的玩家
        Test("----------------------- First Login")
        $houseVars = Table([
                "myplugin/house_default",
                "myplugin/house_color_buff_11",
                [
                    [{x = 1648,y=13,z=-574},0,"myplugin/test_dec_entity1","11111","true"],
                    [{x = 1650,y=13,z=-574},90,"myplugin/test_dec_entity2","222222","false"],
                ],
                [
                    ["house_default_inside_map_area_1",["myplugin/acacia_door_10","myplugin/dark_oak_stairs04","myplugin/cotton_stage_0"]],
                    ["house_default_inside_map_area_2",["myplugin/acacia_door_10","myplugin/dark_oak_stairs04","myplugin/cotton_stage_0"]]
                ],
                "enable",
                "Sakura NeNe",
                "house_type_big_house",
                "1234567"
            ])
        SetObjectVar(obj = $obj1, key = "houseVars", value = $houseVars)
    }
    Foreach(array = $houseVars, key = "house"){
        If(ArrayGet(array = $house, index = 5) == "enable"){
            $curSelectHouse = $house
            Break()
        }
    }
    ------------------------------------------ 获得当前地图上的空出的区域，创建房子 * 
    -- 区域 <region------owner> 房子 <house-------owner> 玩家，可通过区域获取区域上的房子，通过房子获得所属玩家。 反向同理
    $regions = GetAllRegion(map = GetEntityMap(entity = $obj1))
    Foreach(array = $regions, key = "region"){
        If(not GetRegionOwner(region = $region) and GetRegionConfig(region = $region, key = "isHouseRegion")){
            CallTrigger(object = $obj1, event = "CREATE_HOUSE_OUTSIDE", region = $region, 
                houseCfg = ArrayGet(array = $curSelectHouse, index = 1),
                houseColor = ArrayGet(array = $curSelectHouse, index = 2))
            Break()
        }
    }
    ------------------------------------------ 玩家进入游戏就进入自己房间
    $house = GetObjectVar(obj = $obj1, key = "house")
    $houseInsideMap = GetObjectVar(obj = $house, key = "houseInsideMap")
    SetObjectVar(obj = $obj1, key = "returnDoor", value = GetObjectVar(obj = $house, key = "door"))
    SetEntityPosition(map = $houseInsideMap, entity = $obj1, 
        pos = GetMapInitPos(map = $houseInsideMap) or GetEntityPosition(entity = $obj1))

    CallTrigger(object = $obj1, event = "SHOW_TITLE_BAR") 
------------------------------------------------------------------------------------------------------------------------------ 分割线
}

------------------------------------------------------------------------------------------------------------------------------ 分割线
TEST_DATA{ -- 保存进数据库的数据伪代码
    Table(
        houseVars = [ -- all house 当前entity的所有房子
            [ --   arr[1] = houseCfg, arr[2] = houseSelectColor, 
                -- arr[3] = houseInsideFurnishing, arr[4] = houseInsideRegionColors, arr[5] = enable 当前选中房子标识/ disable 未选中
                -- arr[6] = curHouseName, arr[7] = curHouseType, arr[8] = ID
                "myplugin/xxx...", -- houseCfg 
                "myplugin/xxx...", -- houseSelectColor，是buff来着 -- 外部颜色不影响内部
                [ -- houseInsideFurnishing , 房子内部物品摆放
                    -- pos是相对坐标，每个map都有一个initPos，坐标都是这个initPos+pos
                    -- 绝对坐标也行
                    [{x = "xx", y = "xx", z = "xx"},0,"myplugin/xxx...","id","true/false"],
                    [{x = "xx", y = "xx", z = "xx"},0,"myplugin/xxx...","id","true/false"]
                    -- {pos,yaw,cfg,全局唯一id:furnishingId（当前obj的id）,是否是旧家具，下线后则会将当前玩家全部房子的全部家具设置成true，即是旧家具}
                ],
                [ -- houseInsideRegionColors 房子内部区域颜色
                    ["regionkey", ["myplugin/xxx...","myplugin/xxx...","myplugin/xxx..."]], -- 第一个key是对应的region key，通过这个key获取这个区域region/获取到配置
                    ["regionkey", ["myplugin/xxx...","myplugin/xxx...","myplugin/xxx..."]] -- 第二个数组对应的是上面获取到的region的childRegionKey属性中对应
                                                                                        -- 该region的子region使用的方块！
                ],
                "enable", -- cur select house 有这个标志就是 当前选择/出生的房子
                "houseName", -- cur house name 当前房子的名字
                "houseType", -- cur house type 当前房子的类型
                "houseKey" -- cur house id 房子唯一ID，Concat(p1 = GetTime(), p2 = GetGameTime(), p3 = Random(min = 0, max = 999999))
            ],
            [
                -- ... 同上，不是当前选择则第五个参数为disable
            ]
        ]
    )
    Table(Demo = [[[],[]],[[],[]]])
}

CREATE_HOUSE_OUTSIDE{
    $house = CreateNpc(pos = GetRegionCenter(region = $region), map = GetEntityMap(entity = $obj1), cfgName = $houseCfg)

    $yaw = GetRegionConfig(region = $region, key = "regionHouseYaw")
    SetEntityYaw(entity = $house, rotationYaw = $yaw)
    SetBodyYaw(entity = $house, yaw = $yaw)

    AddEntityBuff(entity = $house, cfg = GetConfigVar(obj = $house, key = "houseCreateBuff"), buffTime = 200)
    -- 改变房子外部颜色，通过加buff
    AddEntityBuff(entity = $house, cfg = $houseColor)

    SetRegionOwner(region = $region, owner = $house)
    SetObjectVar(obj = $house, key = "owner", value = $obj1)

    SetObjectVar(obj = $obj1, key = "house", value = $house)
    SetObjectVar(obj = $house, key = "region", value = $region)
}

REMOVE_HOUSE_OUTSIDE{
    $house = GetObjectVar(obj = $obj1, key = "house")
    $region = GetObjectVar(obj = $house, key = "region")
    SetRegionOwner(region = $region, owner = nil)
    KillEntity(entity = $house)
}

ENTITY_LEAVE{ 
    ------------------------------------------ 玩家退出，清掉房子 邮箱 门，重置区域owner为nil
    CallTrigger(object = $obj1, event = "REMOVE_HOUSE_OUTSIDE")
    ------------------------------------------ 更新全部家具为旧家具
    CallTrigger(object = $obj1, event = "UPDATE_FURNITURE_STATUS")
    ----------------------------------------- 玩家退出，保存身上穿搭
    CallTrigger(object = $obj1, event = "SAVE_PLAYER_DRESS")
    ---------------------------------------玩家退出，删除掉暂存在数据库“dressArchive”字段中的bm装扮信息
    CallTrigger(object = $obj1, event = "REMOVE_BM_DRESS")
}

UPDATE_FURNITURE_STATUS{
    Foreach(array = GetObjectVar(obj = $obj1, key = "houseVars") or {}, key = "house"){
        Foreach(array = ArrayGet(array = $house, index = 3), key = "furniture"){
            ArraySet(array = $furniture, index = 5, value = true)
            ArraySet(array = $furniture, index = 4, value = 0)
        }
    }
}

UPDATE_HOUSE{
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    ForLoop(from = 1, to = ArraySize(array = $houseVars), key = "index"){
        $houseVar = ArrayGet(array = $houseVars, index = $index)
        If(ArrayGet(array = $houseVar, index = 5) ~= "enable" and $houseKey == ArrayGet(array = $houseVar, index = 8)){
            $newHouseVar = $houseVar   
        }
        If(ArrayGet(array = $houseVar, index = 5) == "enable"){
            $curHouseVar = $houseVar
        }
    }
    If(not $newHouseVar){
        ArraySet(array = $curHouseVar, index = 2, value = $curSelectKey)
        CallTrigger(object = $obj1, event = "CHANGE_HOUSE_COLOR", oldHouseColor = $oldSelectKey, houseColor = $curSelectKey)
    }Else{
        ArraySet(array = $curHouseVar, index = 5, value = "disable")
        ArraySet(array = $newHouseVar, index = 5, value = "enable")
        ArraySet(array = $newHouseVar, index = 2, value = $curSelectKey)
        CallTrigger(object = $obj1, event = "CHANGE_HOUSE", 
            newHouse = ArrayGet(array = $newHouseVar, index = 1), houseColor = $curSelectKey)
    }
    ShowGenericListDisplayBox(entity = $obj1, closeWin = true)
}

CHANGE_HOUSE_COLOR{ -- 换色
    $curHouse = GetObjectVar(obj = $obj1, key = "house")
    $oldBuff = GetEntityTypeBuff(entity = $curHouse, key = "fullName", value = $oldHouseColor)
    If($oldBuff){
        RemoveEntityBuff(entity = $curHouse, buff = $oldBuff)
    }
    AddEntityBuff(entity = $curHouse, cfg = $houseColor) -- 通过buff换skin

    -- 换色特效
    $effectBuff = GetEntityTypeBuff(entity = $curHouse, key = "fullName", value = GetConfigVar(obj = $house, key = "houseCreateBuff"))
    If($effectBuff){
        RemoveEntityBuff(entity = $curHouse, buff = $effectBuff)
    }
    AddEntityBuff(entity = $curHouse, cfg = GetConfigVar(obj = $curHouse, key = "houseCreateBuff"), buffTime = 200)
}

CHANGE_HOUSE{ -- 换房子/存档
    $region = GetObjectVar(obj = GetObjectVar(obj = $obj1, key = "house"), key = "region")
    ------------------------------------------ 改变房子(actor)，直接杀掉原来的，新建新的
    CallTrigger(object = $obj1, event = "REMOVE_HOUSE_OUTSIDE")
    ShowTip(entity = $obj1, tipType = 1, textKey = "house_change")

    CallTrigger(object = $obj1, event = "CREATE_HOUSE_OUTSIDE", region = $region, houseCfg = $newHouse, houseColor = $houseColor)
}



-------------------------------------- ui/btn/event
HOUSE_TAB_EVENT{
    -- TODO 更新出售的商品列表
    Test("---------HOUSE_TAB_EVENT")
    If(not $key or "0" == $key){
        Test("--------- u need buy")
        $listInfoTb = [
            {image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_1.png", text = "xxxxx", 
                btnShowText = 100, context = {houseCfg = "myplugin/house_default"}},
            {image = "plugin/myplugin/entity/house_default/g1047_chess_11.png", text = "house_type_test_house", 
                btnShowText = 555, context = {houseCfg = "myplugin/house1"}},
        ]
        $childInfo = {
            uiWin = "genericListDisplayBox3",
            infoTb = {
                listInfo = {
                    infoTb = $listInfoTb
                },
                btnInfo = {
                    btnText = "ui_house_buy_house",
                    cfgKey = "uiEvents", 
                    index = 2
                }
            }
        }
        ShowGenericListDisplayBox(entity = $obj1, infoTb = $childInfo, isOpenChild = true)
        Return()
    }
    Test("--------- u need show")
    $curSelectHouse = nil
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    Foreach(array = $houseVars, key = "houseVar"){
        If(ArrayGet(array = $houseVar, index = 8) == $key){
            $curSelectHouse = $houseVar
            Break()
        }
    }
    If(not $curSelectHouse){
        Return()
    }
    -- color
    $selectGvInfo = {}
    $worldAllColor = GetWorldVar(key = "allColor")
    $curHouseColor = GetEntityCfg(fullName = ArrayGet(array = $curSelectHouse, index = 1), key = "allColor")
    Foreach(array = $curHouseColor, key = "entity_color"){
        Foreach(array = $worldAllColor, key = "world_color"){
            If(ArrayGet(array = $entity_color, index = 1) == ArrayGet(array = $world_color, index = 1)){
                ArrayAppend(array = $selectGvInfo, value = {
                    rightImg = ArrayGet(array = $world_color, index = 3),
                    leftImg = ArrayGet(array = $entity_color, index = 2),
                    key = ArrayGet(array = $world_color, index = 2),
                    curSelect = ArrayGet(array = $world_color, index = 2) == ArrayGet(array = $curSelectHouse, index = 2)
                        and true or false
                })
            }
        }
    }
    -- btn
    $btnList = [
        {text = "ui_house_sell_house", cfgKey = "uiEvents", index = 3, context = { houseKey = $key} },
        {text = "ui_house_use_house", cfgKey = "uiEvents", index = 4, curSelect = ArrayGet(array = $curSelectHouse, index = 5) == "enable",context = { houseKey = $key} }
    ]
    $infoTb = {
        uiWin = "genericListDisplayBox2",
        infoTb = {
            upperLayerKey = $key,
            titleTb = {text = ArrayGet(array = $houseVar, index = 6), cfgKey = "uiEvents", index = 5, 
                context = {houseKey = ArrayGet(array = $houseVar, index = 8), houseName = ArrayGet(array = $houseVar, index = 6)}},
            selectInfo = {
                selectTitleText = "ui_house_choice_color",
                selectButtomText = ArrayGet(array = $houseVar, index = 7),
                selectGvInfo = $selectGvInfo
            },
            btnInfo = {
                btnType = 2,
                btnList = $btnList
            }
        }
    }
    ShowGenericListDisplayBox(entity = $obj1, infoTb = $infoTb, isOpenChild = true)
}

EDIT_HOUSE_NAME{
    -- TODO 房子改名
    Test("EDIT_HOUSE_NAME", $houseKey, $titleEditText)
    If(not $titleEditText or not $houseKey){
        Return()
    }
    Foreach(array = GetObjectVar(obj = $obj1, key = "houseVars"), key = "house"){
        If(ArrayGet(array = $house, index = 8) == $houseKey){
            ArraySet(array = $house, index = 6, value = $titleEditText)
            Break()
        }
    }
}

SURE_BUY_HOUSE{
    Test("SURE_BUY_HOUSE", $houseCfg)
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars") or {}
    If(not $houseCfg or ArraySize(array = $houseVars) >= (GetConfigVar(obj = $obj1, key = "maxHouseVarsSize") or 8)){
        -- 买房子 成功则关闭界面，失败则不关闭 -- 达到房子上限也不给买
        ShowTip(entity = $obj1, tipType = 1, textKey = "ui_buy_failure")
        Return()
    }
    ------------- 花钱买房 -- 此处判断是否购买失败，失败直接返回
    $buyMoney = GetEntityCfg(fullName = $houseCfg, key = "buyMoney")
    $coinName = GetEntityCfg(fullName = $houseCfg, key = "coinName")
    If(not PayCurrency(entity = $obj1, coinName = $coinName, count = $buyMoney)){
        ShowTip(entity = $obj1, tipType = 2,textKey = "buy_house_not_enough_money", time = 40)
        Return()
    }
    ------------- 给房子
    ArrayAppend(array = $houseVars, value = [ -- 购买成功后拼接一个新的房子数据放进entity的houseVars中 -- TEST CODE
            $houseCfg,
            GetEntityCfg(fullName = $houseCfg, key = "defaultColor") or "",
            GetEntityCfg(fullName = $houseCfg, key = "houseDefaultFurniture") or [],
            GetEntityCfg(fullName = $houseCfg, key = "houseDefaultInsideMapColorTb") or [],
            "disable",
            GetEntityCfg(fullName = $houseCfg, key = "houseDefaultName") or "",
            GetEntityCfg(fullName = $houseCfg, key = "houseType") or "",
            Concat(p1 = GetTime(), p2 = GetGameTime(), p3 = Random(min = 0, max = 999999))
        ]
    )
    ShowTip(entity = $obj1, tipType = 1, textKey = "ui_buy_success")
    ShowGenericListDisplayBox(entity = $obj1, closeWin = true)
}

SELL_HOUSE{
    Test("SELL_HOUSE",$houseKey)
    $curSelectHouse = nil
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    Foreach(array = $houseVars, key = "houseVar"){
        If(ArrayGet(array = $houseVar, index = 8) == $houseKey){
            $curSelectHouse = $houseVar
            Break()
        }
    }
    If(not $curSelectHouse){
        Return()
    }
    -- showImage
    $worldAllColor = GetWorldVar(key = "allColor")
    $curHouseColor = GetEntityCfg(fullName = ArrayGet(array = $curSelectHouse, index = 1), key = "allColor")
    Foreach(array = $curHouseColor, key = "entity_color"){
        Foreach(array = $worldAllColor, key = "world_color"){
            If(ArrayGet(array = $world_color, index = 2) == ArrayGet(array = $curSelectHouse, index = 2) and 
                ArrayGet(array = $world_color, index = 1) == ArrayGet(array = $entity_color, index = 1)){
                $showImage = ArrayGet(array = $entity_color, index = 2)
                Break()
            }
        }
    }
    $sellHouseMoney = 0
    $sellHouseCfg = ArrayGet(array = $curSelectHouse, index = 1)
    $sellHouseMoney = $sellHouseMoney + GetEntityCfg(fullName = $sellHouseCfg, key = "sellMoney")
    $sellHouseFurnitures = ArrayGet(array = $curSelectHouse, index = 3) or {}
    Foreach(array = $sellHouseFurnitures, key = "furniture"){
        $cfg = ArrayGet(array = $furniture, index = 3)
        $sellMoney = GetEntityCfg(fullName = $cfg, key = "sellMoney")
        If(ArrayGet(array = $furniture, index = 5)){
            $sellMoney = GetEntityCfg(fullName = $cfg, key = "sellByDiscountMoney")
        }
        $sellHouseMoney = $sellHouseMoney + $sellMoney
    }          
    -- showTextTb
    $showTextTb = {textWeightList = [
        {keyText = "ui_house_sell_house_money", valueText = $sellHouseMoney},
        {keyText = "ui_house_sell_house_type", valueText = ArrayGet(array = $curSelectHouse, index = 7)}
    ]}
    -- btn
    $btnList = [
        {text = "ui_sure", cfgKey = "uiEvents", index = 6, context = { houseKey = $houseKey} },
        {text = "ui_cancel", cfgKey = "uiEvents", index = 1, context = { key = $houseKey} }
    ]
    $infoTb = {
        uiWin = "genericShowPage",
        infoTb = {
            upperLayerKey = $houseKey,
            titleTb = {text = ArrayGet(array = $curSelectHouse, index = 6), cfgKey = "uiEvents", index = 5, 
                context = {houseKey = ArrayGet(array = $curSelectHouse, index = 8), houseName = ArrayGet(array = $curSelectHouse, index = 6)}},
            showImage = $showImage,
            showTextTb = $showTextTb,
            btnInfo = {
                btnType = 2,
                btnList = $btnList
            }
        }
    }
    ShowGenericListDisplayBox(entity = $obj1, infoTb = $infoTb, isOpenChild = true)
}

SELL_HOUSE_SURE{
    $curSelectHouse = {}
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    If(ArraySize(array = $houseVars) <= 1){ -- 最后一套房不能出售
        ShowTip(entity = $obj1, tipType = 1, textKey = "ui_house_sell_cant_sell")
        Return()
    }
    ForLoop(from = 1, to = ArraySize(array = $houseVars), key = "index"){
        If(ArrayGet(array = ArrayGet(array = $houseVars, index = $index), index = 8) == $houseKey){
            $curSelectHouse = ArrayGet(array = $houseVars, index = $index) or {}
            ArrayRemove(array = $houseVars, index = $index)
            Break()
        }
    }
    $newHouseVar = ArrayGet(array = $houseVars, index = 1)
    ArraySet(array = $newHouseVar, index = 5, value = "enable")
    CallTrigger(object = $obj1, event = "CHANGE_HOUSE", 
            newHouse = ArrayGet(array = $newHouseVar, index = 1), houseColor = ArrayGet(array = $newHouseVar, index = 2))
    -- 出售成功，给玩家钱
    $sellHouseCfg = ArrayGet(array = $curSelectHouse, index = 1)
    AddCurrency(entity = $obj1, coinName = GetEntityCfg(fullName = $sellHouseCfg, key = "coinName"), 
        count = GetEntityCfg(fullName = $sellHouseCfg, key = "sellMoney"))
    $sellHouseFurnitures = ArrayGet(array = $curSelectHouse, index = 3) or {}
    Foreach(array = $sellHouseFurnitures, key = "furniture"){
        $cfg = ArrayGet(array = $furniture, index = 3)
        $sellMoney = GetEntityCfg(fullName = $cfg, key = "sellMoney")
        If(ArrayGet(array = $furniture, index = 5)){
            $sellMoney = GetEntityCfg(fullName = $cfg, key = "sellByDiscountMoney")
        }
        $coinName = GetEntityCfg(fullName = $cfg, key = "coinName")
        AddCurrency(entity = $obj1, coinName = $coinName, count = $sellMoney)
    }

    ShowGenericListDisplayBox(entity = $obj1, closeWin = true)
}

BUY_STORE{
    Test("BUY_STORE", $cfg)
    If(not $cfg){
        Return()
    }
    $buyMoney = GetEntityCfg(fullName = $cfg, key = "buyMoney")
    $coinName = GetEntityCfg(fullName = $cfg, key = "coinName")
    If(not PayCurrency(entity = $obj1, coinName = $coinName, count = $buyMoney)){
        ShowTip(entity = $obj1, tipType = 2,textKey = "buy_store_not_enough_money", time = 40)
        Return()
    }
    ShowGenericActorShowStore(entity = $obj1, infoTb = {}, closeWin =true)
    
    $map = GetObjectVar(obj = GetObjectVar(obj = $obj1, key = "house"), key = "houseInsideMap")
    $npc = CreateNpc(pos = GetEntityPosition(entity = $obj1), map = $map, cfgName = $cfg)
    SetObjectVar(obj = $npc, key = "house", value = GetObjectVar(obj = $obj1, key = "house"))
    Foreach(array = GetObjectVar(obj = $obj1, key = "houseVars"), key = "house"){
        If(ArrayGet(array = $house, index = 5) == "enable"){
            $curSelectHouse = $house
            Break()
        }
    }
    ArrayAppend(array = ArrayGet(array = $curSelectHouse, index = 3), value = [
        GetEntityPosition(entity = $npc), GetEntityYaw(entity = $npc),$cfg,GetObjectID(object = $npc),false
    ])
}

SAVE_FURNITURE{
    $curSelectHouse = {} -- 退出编辑模式需要保存编辑后的家具状态
    Foreach(array = GetObjectVar(obj = $obj1, key = "houseVars"), key = "house"){
        If(ArrayGet(array = $house, index = 5) == "enable"){
            $curSelectHouse = $house
            Break()
        }
    }
    Foreach(array = ArrayGet(array = $curSelectHouse, index = 3), key = "furniture"){
        $npc = GetObject(objID = ArrayGet(array = $furniture, index = 4))
        If($npc){
            ArraySet(array = $furniture, index = 1, value = GetEntityPosition(entity = $npc))
            ArraySet(array = $furniture, index = 2, value = GetEntityYaw(entity = $npc))
        }
    }
}

SHOW_TITLE_BAR{
    Test("SHOW_TITLE_BAR")
    $editBuff = GetEntityTypeBuff(entity = $obj1, key = "fullName", value = "myplugin/edit_house_buff")
    If($editBuff){
        RemoveEntityBuff(entity = $obj1, buff = $editBuff)
    }
    
    If(GetObjectVar(obj = $obj1, key = "curInteractionUiObjId")){
        UpdateEntityEditContainer(player = $obj1, entityId = GetObjectVar(obj = $obj1, key = "curInteractionUiObjId"), show = false)
        SetObjectVar(obj = $obj2, key = "curInteractionUiObjId", value = nil)
    }

    CallTrigger(object = $obj1, event = "SAVE_FURNITURE")

    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = [
                {text = "ui_edit", cfgKey = "uiEvents", index = 7},
                {text = "ui_lock", cfgKey = "uiEvents", index = 8}
            ]
        }
    }
    ShowTitleBarPage(entity = $obj1, infoTb = $infoTb)
}

EDIT_HOUSE{
    Test("EDIT_HOUSE")
    ShowGenericActorShowStore(entity = $obj1, infoTb = {}, closeWin =true)
    $editBuff = GetEntityTypeBuff(entity = $obj1, key = "fullName", value = "myplugin/edit_house_buff")
    If(not $editBuff){
        AddEntityBuff(entity = $obj1, cfg = "myplugin/edit_house_buff")
    }
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = [
                {text = "ui_dec_shop", cfgKey = "uiEvents", index = 10},
                {text = "ui_cancel", cfgKey = "uiEvents", index = 14 }
            ]
        }
    }
    ShowTitleBarPage(entity = $obj1, infoTb = $infoTb)
}

HOUSE_LOCK{
    Test("HOUSE_LOCK")
    $house = GetObjectVar(obj = $obj1, key = "house")
    $isLock = GetObjectVar(obj = $house, key = "isLock")
    SetObjectVar(obj = $house, key = "isLock", value = not $isLock) -- 给房门上锁
    ShowTip(entity = $obj1, tipType = 2,textKey = "house_lock", time = 40)
    If($isLock){ -- 上锁状态则重置为未上锁状态
        ShowTip(entity = $obj1, tipType = 2,textKey = "house_unlock", time = 40)
        CallTrigger(object = $obj1, event = "SHOW_TITLE_BAR") 
    }
}

SHOW_DEC_STORE{
    -- TODO 更新出售的商品列表
    Test("SHOW_DEC_STORE")
    Test(" 买东西测试代码 ， 以及逻辑")
    ShowGenericActorShowStore(entity = $obj1, infoTb = {})
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    If(not $titleKey){
        $titleKey = "allDec"
    }

    $btnListTb = {}
    ArraySet(array = $btnListTb, index = 1, value = {
        text = "11112d", curSelect = $titleKey == "allDec", cfgKey = "uiEvents", index = 10, context = {titleKey = "allDec"}
    })
    ArraySet(array = $btnListTb, index = 2, value = {
        text = "2223123", curSelect = $titleKey == "allEdit", cfgKey = "uiEvents", index = 10, context = {titleKey = "allEdit"}
    })

    $listInfoTb = {}
    If($titleKey == "allDec"){
        ArraySet(array = $listInfoTb, index = 1, value = {
            text = "111", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_1.png", cfgKey = "uiEvents", index = 11, context = {titleKey = "allDec"}
        })
        ArraySet(array = $listInfoTb, index = 2, value = {
            text = "222", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_2.png", cfgKey = "uiEvents", index = 12, context = {titleKey = "allDec"}
        })
    }

    If($titleKey == "allEdit"){
        ArraySet(array = $listInfoTb, index = 1, value = {
            text = "333", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_4.png", cfgKey = "uiEvents", index = 15, context = {titleKey = "allEdit"}
        })
        ArraySet(array = $listInfoTb, index = 2, value = {
            text = "444", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_5.png", cfgKey = "uiEvents", index = 16, context = {titleKey = "allEdit"}
        })
        ArraySet(array = $listInfoTb, index = 3, value = {
            text = "555", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_3.png", cfgKey = "uiEvents", index = 17, context = {titleKey = "allEdit"}
        })
    }

    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = $btnListTb
        },
        listInfo = {
            uiType = 3,
            infoTb = $listInfoTb
        },
        eventInfo = {
            closeEventInfo = {cfgKey = "uiEvents", index = 7}
        }
    }
    ShowGenericActorShowStore(entity = $obj1, infoTb = $infoTb, updateWin =true)
}

SHOW_DEC_STORE_A{
    -- TODO 更新出售的商品列表
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    If(not $titleKey){
        $titleKey = "allDec"
    }

    $btnListTb = {}
    ArraySet(array = $btnListTb, index = 1, value = {
        text = "11112d", curSelect = $titleKey == "allDec", cfgKey = "uiEvents", index = 10, context = {titleKey = "allDec"}
    })
    ArraySet(array = $btnListTb, index = 2, value = {
        text = "2223123", curSelect = $titleKey == "allEdit", cfgKey = "uiEvents", index = 10, context = {titleKey = "allEdit"}
    })

    $listInfoTb = {}
    ArraySet(array = $listInfoTb, index = 1, value = {
        text = "111122wwasd", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_5.png", 
        cfg = "myplugin/test_dec_entity1", actorScale = 0.5, cfgKey = "uiEvents", index = 13, context = {cfg = "myplugin/test_dec_entity1"}
    })
    ArraySet(array = $listInfoTb, index = 2, value = {
        text = "222aaa", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_6.png", 
        cfg = "myplugin/test_dec_entity2", actorScale = 0.4, cfgKey = "uiEvents", index = 13, context = {cfg = "myplugin/test_dec_entity2"}
    })

    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = $btnListTb
        },
        listInfo = {
            uiType = 2,
            infoTb = $listInfoTb
        },
        eventInfo = {
            closeEventInfo = {cfgKey = "uiEvents", index = 7},
            leftEventInfo = {cfgKey = "uiEvents", index = 10, context = {titleKey = "allDec"}},
            rightEventInfo = {cfgKey = "uiEvents", index = 12}
        }
    }
    ShowGenericActorShowStore(entity = $obj1, infoTb = $infoTb, updateWin =true)
}

SHOW_DEC_STORE_B{  
    -- TODO 更新出售的商品列表
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    If(not $titleKey){
        $titleKey = "allDec"
    }

    $btnListTb = {}
    ArraySet(array = $btnListTb, index = 1, value = {
        text = "11112d", curSelect = $titleKey == "allDec", cfgKey = "uiEvents", index = 10, context = {titleKey = "allDec"}
    })
    ArraySet(array = $btnListTb, index = 2, value = {
        text = "2223123", curSelect = $titleKey == "allEdit", cfgKey = "uiEvents", index = 10, context = {titleKey = "allEdit"}
    })

    $listInfoTb = {}
    ArraySet(array = $listInfoTb, index = 1, value = {
        text = "111122wwad", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_1.png", 
        cfg = "myplugin/test_dec_entity1", actorScale = 0.3, cfgKey = "uiEvents", index = 13, context = {cfg = "myplugin/test_dec_entity1"}
    })

    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = $btnListTb
        },
        listInfo = {
            uiType = 2,
            infoTb = $listInfoTb
        },
        eventInfo = {
            closeEventInfo = {cfgKey = "uiEvents", index = 7},
            leftEventInfo = {cfgKey = "uiEvents", index = 10, context = {titleKey = "allDec"}},
            rightEventInfo = {cfgKey = "uiEvents", index = 11}
        }
    }
    ShowGenericActorShowStore(entity = $obj1, infoTb = $infoTb, updateWin =true)
}

EDIT_FLOOR{
    -- TODO 更新出售的商品列表
    Test("EDIT_FLOOR")
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    If(not $titleKey){
        $titleKey = "allEdit"
    }

    $btnListTb = {}
    ArraySet(array = $btnListTb, index = 1, value = {
        text = "11112d", curSelect = $titleKey == "allDec", cfgKey = "uiEvents", index = 10, context = {titleKey = "allDec"}
    })
    ArraySet(array = $btnListTb, index = 2, value = {
        text = "2223123", curSelect = $titleKey == "allEdit", cfgKey = "uiEvents", index = 10, context = {titleKey = "allEdit"}
    })

    $listInfoTb = {}
    ArraySet(array = $listInfoTb, index = 1, value = {
        text = "asda", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_1.png", 
        cfgKey = "uiEvents", index = 9, actorScale = 0.6, context = {childRegionKey = "floorRegion", colorBlock = "myplugin/wool_1"}
    })
    ArraySet(array = $listInfoTb, index = 2, value = {
        text = "gfdgh", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_2.png", 
        cfgKey = "uiEvents", index = 9, actorScale = 0.7, context = {childRegionKey = "floorRegion", colorBlock = "myplugin/wool_2"}
    })

    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = $btnListTb
        },
        listInfo = {
            uiType = 2,
            infoTb = $listInfoTb
        },
        eventInfo = {
            closeEventInfo = {cfgKey = "uiEvents", index = 7},
            leftEventInfo = {cfgKey = "uiEvents", index = 10, context = {titleKey = $titleKey}},
            rightEventInfo = {cfgKey = "uiEvents", index = 16}
        }
    }
    ShowGenericActorShowStore(entity = $obj1, infoTb = $infoTb, updateWin =true)
}

EDIT_WALL{
    -- TODO 更新出售的商品列表
    Test("EDIT_WALL")
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    If(not $titleKey){
        $titleKey = "allEdit"
    }

    $btnListTb = {}
    ArraySet(array = $btnListTb, index = 1, value = {
        text = "11112d", curSelect = $titleKey == "allDec", cfgKey = "uiEvents", index = 10, context = {titleKey = "allDec"}
    })
    ArraySet(array = $btnListTb, index = 2, value = {
        text = "2223123", curSelect = $titleKey == "allEdit", cfgKey = "uiEvents", index = 10, context = {titleKey = "allEdit"}
    })

    $listInfoTb = {}
    ArraySet(array = $listInfoTb, index = 1, value = {
        text = "fggg", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_3.png", 
        cfgKey = "uiEvents", index = 9, context = {childRegionKey = "wallRegion", colorBlock = "myplugin/wool_3"}
    })

    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = $btnListTb
        },
        listInfo = {
            uiType = 2,
            infoTb = $listInfoTb
        },
        eventInfo = {
            closeEventInfo = {cfgKey = "uiEvents", index = 7},
            leftEventInfo = {cfgKey = "uiEvents", index = 10, context = {titleKey = $titleKey}},
            rightEventInfo = {cfgKey = "uiEvents", index = 17}
        }
    }
    ShowGenericActorShowStore(entity = $obj1, infoTb = $infoTb, updateWin =true)
}

EDIT_CEILING{
    -- TODO 更新出售的商品列表
    Test("EDIT_CEILING")
    ShowTitleBarPage(entity = $obj1, infoTb = {}, closeWin = true)
    If(not $titleKey){
        $titleKey = "allEdit"
    }

    $btnListTb = {}
    ArraySet(array = $btnListTb, index = 1, value = {
        text = "11112d", curSelect = $titleKey == "allDec", cfgKey = "uiEvents", index = 10, context = {titleKey = "allDec"}
    })
    ArraySet(array = $btnListTb, index = 2, value = {
        text = "2223123", curSelect = $titleKey == "allEdit", cfgKey = "uiEvents", index = 10, context = {titleKey = "allEdit"}
    })

    $listInfoTb = {}
    ArraySet(array = $listInfoTb, index = 1, value = {
        text = "hhhh", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_4.png", 
        cfgKey = "uiEvents", index = 9, context = {childRegionKey = "ceilingRegion", colorBlock = "myplugin/wool_4"}
    })
    ArraySet(array = $listInfoTb, index = 2, value = {
        text = "jjjj", image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_5.png", 
        cfgKey = "uiEvents", index = 9, context = {childRegionKey = "ceilingRegion", colorBlock = "myplugin/wool_5"}
    })

    $infoTb = {
        btnInfo = {
            btnType = 2,
            btnList = $btnListTb
        },
        listInfo = {
            uiType = 2,
            infoTb = $listInfoTb
        },
        eventInfo = {
            closeEventInfo = {cfgKey = "uiEvents", index = 7},
            leftEventInfo = {cfgKey = "uiEvents", index = 10, context = {titleKey = $titleKey}},
            rightEventInfo = {cfgKey = "uiEvents", index = 15}
        }
    }
    ShowGenericActorShowStore(entity = $obj1, infoTb = $infoTb, updateWin =true)
}

BUY_HOUSE_REGION_COLOR{
    Test("BUY_HOUSE_REGION_COLOR", $childRegionKey, $colorBlock)
    -- 如果换了墙纸或者地板，原有的不保留，当你没买     如果你原来买了A墙纸，你又换成了B，那么你要再花一遍钱去把A换回来
    If($colorBlock){
        $buyMoney = GetBlockConfigByName(block = $colorBlock, key = "buyMoney")
        $coinName = GetBlockConfigByName(block = $colorBlock, key = "coinName")
        If(not PayCurrency(entity = $obj1, coinName = $coinName, count = $buyMoney)){
            ShowTip(entity = $obj1, tipType = 2,textKey = "buy_house_region_color_not_enough_money", time = 40)
            Return()
        }
    }
    $curInsideRegion = GetObjectVar(obj = $obj1, key = "curInsideRegion")
    If(not $curInsideRegion){
        Return()
    }
    
    $curInsideRegionKey = GetRegionKey(region = $curInsideRegion)
    $curInsideRegionChildReionArr = GetRegionConfig(region = $curInsideRegion, key = "childRegionKey")
    ForLoop(from = 1, to = ArraySize(array = $curInsideRegionChildReionArr), key = "index"){
        If(ArrayGet(array = $curInsideRegionChildReionArr, index = $index) == $childRegionKey){
            $curInsideRegionChildReionIndex = $index
            Break()
        }
    }
    If(not $curInsideRegionChildReionIndex){
        Return()
    }
    $childRegionArr = GetRegionConfig(region = $curInsideRegion, key = $childRegionKey) or {}
    
    Foreach(array = $childRegionArr, key = "cRegion"){
        FillBlocksInRegion(map = GetObjectVar(obj = GetObjectVar(obj = $obj1, key = "house"), key = "houseInsideMap"), region = $cRegion, 
            block = $colorBlock or GetRegionConfig(region = $curInsideRegion, key = "defaultBlock"))
    }
    $curSelectHouse = {}
    Foreach(array = GetObjectVar(obj = $obj1, key = "houseVars"), key = "house"){
        If(ArrayGet(array = $house, index = 5) == "enable"){
            $curSelectHouse = $house
            Break()
        }
    }
    $curSelectHouseRegionColor = ArrayGet(array = $curSelectHouse, index = 4) or {}
    Foreach(array = $curSelectHouseRegionColor, key = "childRegionColorArr"){
        If(ArrayGet(array = $childRegionColorArr, index = 1) == $curInsideRegionKey){
            ArraySet(array = ArrayGet(array = $childRegionColorArr, index = 2), index = $curInsideRegionChildReionIndex, value = $colorBlock)
        }
    }
}
------------------------------------------------------------------------------------------------------------------------------ 分割线

ADD_MONEY
{  
    $today = GetYearDayStr(time = GetTime())

    If($today ~= $obj1.rewardDay)
    {
        $obj1.rewardCounts = 1
        $obj1.rewardDay = $today
    }

    $count = $obj1.rewardCounts
    $arraySize = ArraySize(array = @CDReward)
    If($count > $arraySize)
    {
        $count = $arraySize
    }
    $rewardArray = ArrayGet(array = @CDReward, index = $count)
    $cdTime = ArrayGet(array = $rewardArray, index = 1)
    $money = ArrayGet(array = $rewardArray, index = 2)

    If($obj1.isReadyReward)
    {
        AddCurrency(count = $money, coinName = "green_currency", entity = $obj1)
        ShowRewardRollTip(image = "set:jail_break.json image:jail_break_currency", text = Concat(p1 = "+", p2 = $money), entity = $obj1)
        $obj1.rewardCounts = $obj1.rewardCounts + 1
    }
    StartTimer(rep = false, time = $cdTime, object = $obj1, event = "ADD_MONEY")
    ShowRewardCD(player = $obj1, time = $cdTime)
    $obj1.isReadyReward = true
}

FUNC_STATE_GENERATE --params: stateBase, col, skill
{
    $state = $stateBase
    $subdivided = GetSkillVar(fullName = $skill, key = "subdivided")
    If(ArraySize(array = $subdivided or []) > 0)
    {
        $preState = GetObjectVar(obj = $obj1, key = Concat(p1 = "pre", p2 = $stateBase))
        If($preState)
        {
            RemoveSkill(entity = $obj1, name = Concat(p1 = @skillPath, p2 = $preState))
            CallTrigger(object = $obj1, event = "FUNC_STATE_RESET_DATA", state = $preState)
        }
        $state = ArrayGet(array = $subdivided, index = $col)
        SetObjectVar(obj = $obj1, value = $state, key = Concat(p1 = "pre", p2 = $stateBase))
        SetObjectVar(obj = $obj1, value = $col, key = Concat(p1 = $stateBase, p2 = "Idx"))
    }
    CallTrigger(object = $obj1, event = "FUNC_STATE_ADD", state = $state)
}

FUNC_STATE_ADD --params: state
{
    $stateBase = GetSkillVar(fullName = Concat(p1 = @skillPath, p2 = $state), key = "stateBase") or $state
    SetObjectVar(obj = $obj1, key = Concat(p1 = "had", p2 = $stateBase), value = true)
    SetObjectVar(obj = $obj1, key = Concat(p1 = $stateBase, p2 = "InteractList"), value = nil)

    AddSkill(entity = $obj1, name = Concat(p1 = @skillPath, p2 = $state))
    CallTrigger(object = $obj1, event = "FUNC_STATE_RESET_DATA", state = $state)
    CallTrigger(object = $obj1, event = "FUNC_UPDATE_STATE_SKILL_JACK_AREA")
    CallTrigger(object = $obj1, event = "FUNC_STATE_ACTION", state = $state)
}

FUNC_STATE_ADD_EFFECT --params: state
{
    $effect = GetSkillVar(fullName = Concat(p1 = @skillPath, p2 = $state), key = "effect")
    If(not $effect)
    {
        Return()
    }
    SetObjectVar(
        obj = $obj1,
        key = $effectStr,
        value = AddEntityBuff(
            entity = $obj1,
            cfg = $effect
        )
    )
}

FUNC_STATE_START_AFFECT --params: state
{
    $skill = Concat(p1 = @skillPath, p2 = $state)
    $timeSpan = GetSkillVar(fullName = $skill, key = "affectTimeSpanSec")
    If(not $timeSpan || $timeSpan <= 0)
    {
        Return()
    }

    SetObjectVar(
        obj = $obj1,
        key = $timerStr,
        value = StartTimer(
            rep = true,
            object = $obj1,
            state = $state,
            event = "FUNC_STATE_AFFECT_OTHER",
            time = ($timeSpan * 20) // 1
        )
    )
}

FUNC_STATE_AFFECT_OTHER --params: state
{
    $skill = Concat(p1 = @skillPath, p2 = $state)
    $stateBase = GetSkillVar(fullName = $skill, key = "stateBase") or $state

    $entities = GetNearbyEntities(
        entity = $obj1,
        distance = GetSkillVar(
            fullName = $skill,
            key = "affectDis"
        )
    )
    Foreach(array = $entities or [], key = "entity")
    {
        If(not IsPlayer(entity = $entity) || $entity == $obj1 || GetObjectVar(obj = $entity, key = Concat(p1 = "had", p2 = $stateBase)))
        {
            Continue()
        }
        CallTrigger(
            object = $entity,
            event = "FUNC_STATE_ADD",
            state = $state
        )
    }
}

FUNC_STATE_IS_IN_REGION_BEGIN --params: state
{   
    -- 判断状态生成时是否就已经在区域里面了
    If("region" ~= GetSkillVar(fullName = Concat(p1 = @skillPath, p2 = $state), key = "releaseType"))
    {
        Return()
    }

    $reg = GetRegionByName(
        map = GetEntityMap(entity = $obj1),
        name = $state 
    )

    If($reg && IfEntityInArea(
                    entity = $obj1,
                    region = {
                        min = GetRegionMin(region = $reg),
                        max = GetRegionMax(region = $reg) + V3(1, 1, 1)
                    }
                )
    )
    {
        CallTrigger(
            opt = "INNER",
            object = $obj1,
            state = $state,
            event = "FUNC_REGION_STATE_OPERATION",
        )
    }
}

FUNC_REGION_STATE_OPERATION --parmas: opt, state
{
    If($state == GetObjectVar(obj = $obj1, key = "gpsDestination"))
    {
        ShowTip(entity = $obj1, tipType = 3, textKey = "you_came")
        CallTrigger(object = $obj1, event = "FUNC_CLOSE_GPS")
    }

    If($opt ~= "INNER")
    {
        $skill = Concat(p1 = @skillPath, p2 = $state)
        $stateBase = GetSkillVar(fullName = $skill, key = "stateBase") or $state
        If("region" ~= GetSkillVar(fullName = $skill, key = "releaseType"))
        {
            Return()
        }
        ElseIf(GetObjectVar(obj = $obj1, key = Concat(p1 = "had", p2 = $stateBase)))
        {
            $subdivided = GetSkillVar(fullName = $skill, key = "subdivided")
            If(ArraySize(array = $subdivided or []) > 0)
            {
                $kind = ArrayGet(
                    array = $subdivided,
                    index = GetObjectVar(
                        obj = $obj1,
                        key = Concat(p1 = $stateBase, p2 = "Idx")
                    )
                )
                If($kind ~= $state)
                {
                    Return()
                }
            }
        }
    }

    CallTrigger(
        object = $obj1,
        state = $state,
        event = $opt ~= "LEAVE" and "FUNC_STATE_START_PROGRESS" or "FUNC_STATE_SUSPEND_PROGRESS"
    )
}

FUNC_STATE_SUSPEND_PROGRESS --params: state
{
    $skill = Concat(p1 = @skillPath, p2 = $state)
    $stateBase = GetSkillVar(fullName = $skill, key = "stateBase") or $state
    $duration = GetSkillVar(fullName = $skill, key = "duration")

    If(not $duration || $duration <= 0 || not GetObjectVar(obj = $obj1, key = Concat(p1 = "had", p2 = $stateBase)))
    {
        Return()
    }
    
    CallTrigger(
        object = $obj1,
        pgName = $state,
        event = "FUNC_CLOSE_PROGRESS_FOLLOW_OBJ"
    )

    CallTrigger(
        object = $obj1,
        event = "FUNC_STOP_TIMER",
        timerStr = Concat(p1 = $stateBase, p2 = "_TIMER")
    )

    $sTime = GetObjectVar(obj = $obj1, key = Concat(p1 = $stateBase, p2 = "STime"))
    $usedTime = GetObjectVar(obj = $obj1, key = Concat(p1 = $stateBase, p2 = "UsedTime"))
    If($sTime && $usedTime)
    {
        SetObjectVar(
            obj = $obj1,
            key = Concat(p1 = $stateBase, p2 = "UsedTime"),
            value = GetTime() - $sTime + $usedTime
        )
    }
}

FUNC_STATE_START_PROGRESS --params: state
{
    $skill = Concat(p1 = @skillPath, p2 = $state)
    $stateBase = GetSkillVar(fullName = $skill, key = "stateBase") or $state
    $duration = GetSkillVar(fullName = $skill, key = "duration")

    If(not $duration || $duration <= 0 || not GetObjectVar(obj = $obj1, key = Concat(p1 = "had", p2 = $stateBase)))
    {
        Return()
    }

    $usedTime = GetObjectVar(obj = $obj1, key = Concat(p1 = $stateBase, p2 = "UsedTime")) or 0

    SetObjectVar(obj = $obj1, value = GetTime(), key = Concat(p1 = $stateBase, p2 = "STime"))
    SetObjectVar(obj = $obj1, value = $usedTime, key = Concat(p1 = $stateBase, p2 = "UsedTime"))

    ShowProgressFollowObj(
        isOpen = true,
        pgName = $state,
        entity = $obj1,
        totalTime = $duration * 20,
        usedTime = $usedTime * 20,
    )

    SetObjectVar(
        obj = $obj1,
        key = "progress",
        value = $state
    )

    SetObjectVar(
        obj = $obj1,
        key = Concat(p1 = $stateBase, p2 = "_TIMER"),
        value = StartTimer(
            rep = false,
            object =$obj1,
            state = $state,
            time = (($duration - $usedTime) * 20) // 1,
            event = "FUNC_STATE_RELEASE_AND_REWARD"
        )
    )
}

FUNC_STATE_RELEASE_AND_REWARD --params: state
{
    $skill = Concat(p1 = @skillPath, p2 = $state)
    $stateBase = GetSkillVar(fullName = $skill, key = "stateBase") or $state
    $hadState = Concat(p1 = "had", p2 = $stateBase)
    If(not GetObjectVar(obj = $obj1, key = $hadState))
    {
        Return()
    }
    $interactList = GetObjectVar(
        obj = $obj1,
        key = Concat(p1 = $stateBase, p2 = "InteractList")
    )

    RemoveSkill(entity = $obj1, name = $skill)
    SetObjectVar(obj = $obj1, key = $hadState, value = false)
    CallTrigger(object = $obj1, event = "FUNC_STATEBASE_RESET_DATA", stateBase = $stateBase)
    CallTrigger(object = $obj1, event = "FUNC_STATE_RESET_DATA", state = $state)

    If(not GetSkillVar(fullName = $skill, key = "hadReward"))
    {
        Return()
    }

    $rewardSelf = GetSkillVar(fullName = $skill, key = "rewardSelf")
    $rewardOther = GetSkillVar(fullName = $skill, key = "rewardOther")
    $rewardFamily = GetSkillVar(fullName = $skill, key = "rewardFamily")
    $rewardDis = GetSkillVar(fullName = $skill, key = "rewardDis")
    $rewardCount = GetSkillVar(fullName = $skill, key = "rewardCount")
    $rewardType = GetSkillVar(fullName = $skill, key = "rewardType")
    
    $teamId = GetEntityTeam(entity = $obj1)
    $rewardSum = 0
    $textKey = ""
    Foreach(array = $interactList or [], key = "objID")
    {
        $entity = GetObject(objID = $objID)
        If(not IsPlayer(entity = $entity))
        {
            Continue()
        }
        
        $countKey = Concat(p1 = $stateBase, p2 = "RewardCount")
        $count = GetObjectVar(obj = $entity, key = $countKey)
        $dis = GetObjectDistance(obj1 = $obj1, obj2 = $entity)
        $myTeamId =  GetEntityTeam(entity = $entity)
    
        If($count < $rewardCount && $dis < $rewardDis)
        {
            SetObjectVar(obj = $entity, key = $countKey, value = $count + 1)
            $rewardSum = $myTeamId == $teamId and $rewardFamily or $rewardOther
            $textKey = $myTeamId == $teamId and "reward_family" or "reward_takeCare"
            CallTrigger(
                object = $obj1,
                event = "FUNC_STATE_REWARD_AND_TIP",
                rewardSum = $rewardSum,
                textKey = $textKey,
                rewardType = $rewardType
            )
        }
    }
    CallTrigger(
        object = $obj1,
        event = "FUNC_STATE_REWARD_AND_TIP",
        rewardSum = $rewardSelf,
        textKey = "reward_takeCare",
        rewardType = $rewardType
    )
}

FUNC_STATE_REWARD_AND_TIP --params: rewardSum, textKey, rewardType
{
    AddCurrency(coinName = $rewardType or "green_currency", entity = $obj1, count = $rewardSum)
    
    ShowRewardRollTip(
        entity = $obj1,
        image = "set:jail_break.json image:jail_break_currency",
        text = Concat(p1 = "+", p2 = $rewardSum),
    )

    ShowTip(
        entity = $obj1,
        tipType = 3,
        textKey = $textKey
    )
}

FUNC_STATE_SHOW_DETAILS_UI -- params: skill(fullName)
{
    $state = GetSkillVar(fullName = $skill, key = "state")
    $stateBase = GetSkillVar(fullName = $skill, key = "stateBase") or $state
    $duration = GetSkillVar(fullName = $skill, key = "duration")

    $usedTime = GetObjectVar(obj = $obj1, key = Concat(p1 = $stateBase, p2 = "UsedTime")) or 0
    $percent = (not $duration or $duration <= 0) and 0 or NumberFloor(p1 = 100 * $usedTime / $duration)
    
    ShowDetails(
        entity = $obj1,
        fullName = Concat(p1 = "myplugin/", p2 = $state, p3 = "Detail"),
        isOpen = true,
        contents = {
            isNeedUpdate = $state == GetObjectVar(obj = $obj1, key = "progress"),
            subtitleVal = Concat(p1 = $percent, p2 = "%"),
            commentsVal = GetSkillVar(fullName = $skill, key = "rewardSelf"),
            commentsCurrencyIcon = GetSkillVar(fullName = $skill, key = "rewardType")
        }
    )
    
    SetObjectVar(obj = $obj1, key = "detailsUI", value = $state)
}

FUNC_STATE_OPEN_GPS --params: rtVal
{
    If(not $rtVal)
    {
        Return()
    }

    $map = GetEntityMap(entity = $obj1)
    $mapName = GetEntityName(entity = $map)
    $type = GetConfigValue(type = "region", fullName = Concat(p1 = "myplugin/region_state_", p2 = $rtVal), key = "siteType")

    $house = GetObjectVar(obj = $obj1, key = "house")
    $gps = { x = 0, y = 0, z = 0 }
    If($mapName == "map001")
    {
        If($type == "publicArea")
        {
            $region = GetRegionByName(map = $map, name = $rtVal)
            If(not $region)
            {
                Return()
            }
            $tmpReg = {
                min = GetRegionMin(region = $region),
                max = GetRegionMax(region = $region) + V3(1, 1, 1)
            }
            If(IfEntityInArea(entity = $obj1, region = $tmpReg))
            {
                ShowTip(entity = $obj1, tipType = 3, textKey = "you_came")
                CallTrigger(object = $obj1, event = "FUNC_CLOSE_GPS")
                Return()
            }
            $gps = GetRegionCfgVar(region = $region, key = "gps")
        }
        ElseIf($type == "selfHouse")
        {
            $gps = ComputeV3(p1 = GetEntityPosition(entity = $house), p2 = GetConfigVar(obj = $house, key = "doorPos"), op = "add")
        }
    }
    ElseIf($mapName == "house_default_inside_map")
    {
        $houseInsideMap = GetObjectVar(obj = $house, key = "houseInsideMap")
        $gps = GetConfigVar(obj = $house, key = "insideDoorPos")
        If($map == $houseInsideMap && $type == "selfHouse")
        {
            ShowTip(entity = $obj1, tipType = 3, textKey = "you_came")
            CallTrigger(object = $obj1, event = "FUNC_CLOSE_GPS")
            Return()
        }
    }

    CallTrigger(
        object = $obj1,
        event = "FUNC_OPEN_GPS",
        destination = $rtVal,
        pos = $gps
    )
}

FUNC_STATE_ADD_INTERACTLIST
{
    Foreach(array = @Generate_State_List, key = "stateBase")
    {
        If(not GetObjectVar(obj = $obj1, key = Concat(p1 = "had", p2 = $stateBase)))
        {
            Continue()
        }
        $listName = Concat(p1 = $stateBase, p2 = "InteractList")
        $interactList = GetObjectVar(obj = $obj1, key = $listName)
        $targetID = GetObjectVar(obj = $obj1, key = "interactionObjId")
        If(not IsPlayer(entity = GetObject(objID = $targetID)))
        {
            Return()
        }
        If(not $interactList)
        {
            $interactList = []
        }
        If(not ArrayFind(array = $interactList, value = $targetID))
        {
            ArrayAppend(array = $interactList, value = $targetID)
        }
        SetObjectVar(obj = $obj1, key = $listName, value = $interactList)
    }
}

FUNC_UPDATE_STATE_SKILL_JACK_AREA --params: up
{
    If($up == nil)
    {
        $map = GetEntityMap(entity = $obj1)
        $houseInsideMap = GetObjectVar(
            obj = GetObjectVar(
                obj = $obj1,
                key = "house"
            ),
            key = "houseInsideMap"
        )
        $up = $map ~= $houseInsideMap and true or false
    }
    UpdateSkillJackArea(
        entity = $obj1,
        info = {
            pos = "top",
            yOff = $up and @skillJackUp or @skillJackDown
        }
    )
}

FUNC_STATE_RESET_DATA --params: state
{
    CallTrigger(object = $obj1, event = "FUNC_CLOSE_GPS", destination = $state)
    CallTrigger(object = $obj1, event = "FUNC_CLOSE_DETAILS_UI", uiName = $state)
    CallTrigger(object = $obj1, event = "FUNC_CLOSE_PROGRESS_FOLLOW_OBJ", pgName = $state)
    CallTrigger(object = $obj1, event = "FUNC_REMOVE_BUFF", buffStr = Concat(p1 = $state, p2 = "Effect"))
    CallTrigger(object = $obj1, event = "FUNC_STOP_TIMER", timerStr = Concat(p1 = $state, p2 = "AFFECT_TIMER"))
}

FUNC_STATEBASE_RESET_DATA -- params: stateBase
{
    SetObjectVar(obj = $obj1, key = Concat(p1 = "pre", p2 = $stateBase), value = nil)
    SetObjectVar(obj = $obj1, key = Concat(p1 = $stateBase, p2 = "STime"), value = nil)
    SetObjectVar(obj = $obj1, key = Concat(p1 = $stateBase, p2 = "UsedTime"), value = nil)
    SetObjectVar(obj = $obj1, key = Concat(p1 = $stateBase, p2 = "InteractList"), value = nil)
}

FUNC_STATE_ACTION --params: state
{
    CallTrigger(object = $obj1, event = "FUNC_STATE_ADD_EFFECT", state = $state)
    CallTrigger(object = $obj1, event = "FUNC_STATE_START_AFFECT", state = $state)
    CallTrigger(object = $obj1, event = "FUNC_STATE_IS_IN_REGION_BEGIN", state = $state)
}

INTERACTION_CLAP { --拍手 小孩和小孩
    If($obj2.role == @child && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_clap", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_HUG { --拥抱 小孩和小孩 or 大人和大人
    If($obj2.role == @child && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_hug", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }

    If($obj2.role == @adult && $obj1.role == @adult) {
        CastSkill(skill = "myplugin/action_hug", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_HANDSHAKE { --握手 大人和大人
    If($obj2.role == @adult && $obj1.role == @adult) {
        CastSkill(skill = "myplugin/action_handshake", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_RIDE { --骑乘 小孩和大人
    If($obj2.role == @child && $obj1.role == @adult) {
        CastSkill(skill = "myplugin/action_ride", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_HAND_IN_HAND { --手拉手 小孩和大人
    If($obj2.role == @child && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_handinhand", from = $obj1, packet = {targetID = GetObjectID(object = $obj2)})
    }
}

INTERACTION_FOLLOW { --跟随
    CastSkill(skill = "myplugin/action_follow", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
}


INTERACTION_PICK {
    If($obj2.role == @adult && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_pickup", from = $obj1, packet = {targetID = GetObjectID(object = $obj2)})
    }
}

INTERACTION_BABY_TROLLEY {

}

ENTITY_JUMP {
    CallTrigger(obj1 = $obj1, event = "ENTITY_REMOVE_INTERACTION")
    $ride = GetRideOn(entity = $obj1)
    If ($ride){
        ClearRide(entity = $ride)
    }
}

ENTITY_DIE {
	CallTrigger(obj1 = $obj1, event = "ENTITY_REMOVE_INTERACTION")
}

ENTITY_REMOVE_INTERACTION {
    If($obj1.interactionObjId){
        $target = GetObject(objID = $obj1.interactionObjId)
        If($target && $target.interactionBuff) {
            RemoveEntityBuff(buff = $target.interactionBuff, entity = $target)
        }
    }

    If($obj1.interactionBuff){
        RemoveEntityBuff(buff = $obj1.interactionBuff, entity = $obj1)
    }
}

CREATE_FAMILY
{
    If(IsPlayer(entity = $obj1))
    {
        $familyId = GetEntityTeam(entity = $obj1)
        If($familyId and $familyId ~= 0)
        {
            Return()
        }
        SetEntityTeam(entity = $obj1, teamId = @familyIndex)
        @familyIndex = @familyIndex + 1
        ShowTip(entity = $obj1, tipType = 2,textKey = "Create Family Success", time = 40)
    }
}

QUIT_FAMILY
{
    If(IsPlayer(entity = $obj1))
    {
        SetEntityTeam(entity = $obj1, teamId = 0)
        ShowTip(entity = $obj1, tipType = 2,textKey = "Quit Family Success", time = 40)
        CallTrigger(event = "INIT_TEAM_UI", obj1 = $obj1, show = false)
    }
}

REQUEST_JOIN_FAMILY
{
    $targetFamilyID = GetEntityTeam(entity = $obj1)
    If(not $targetFamilyID or $targetFamilyID == 0)
    {
        Return()
    }
    $obj1.requestFamilyPlayer = $obj2
    ShowNotice(
            buttonType = 2,
            content = "I Want Join Family",
            eventYes = "REQUEST_JOIN_FAMILY_YES",
            eventNo = "REQUEST_JOIN_FAMILY_NO",
            entity = $obj1,
            textP1 = "Hahahaha",
            tittleKey = "I Want Join Family"
    )

    ShowBubbleMsg(entity = $obj2, textKey = "I Want Join Family")
}

INVITE_JOIN_FAMILY
{
    $myFamilyID = GetEntityTeam(entity = $obj2)
    If(not $myFamilyID or $myFamilyID == 0)
    {
        Return()
    }

    $playerCount = GetTeamInfo(teamId = $myFamilyID, key = "playerCount")
    If(not $playerCount or $playerCount >= 4)
    {
        Return()
    }

    $obj1.inviteFamilyPlayer = $obj2

    ShowNotice(
            buttonType = 2,
            content = "Do you want Join My Family",
            eventYes = "INVITE_JOIN_FAMILY_YES",
            eventNo = "INVITE_JOIN_FAMILY_NO",
            entity = $obj1,
            textP1 = "Hahahaha",
            tittleKey = "Do you want Join My Family"
    )

    ShowBubbleMsg(entity = $obj2, textKey = "Do you want Join My Family")
}

INIT_TEAM_UI
{
    $title = {
        name = "My Family Hahaha"
    }

    $content = {
        showHeadPic = true,
        showGender = true,
        showScale = true,
        showNickName = true
    }
    
    $buttons = [
        {
            event = "QUIT_FAMILY",
            normalImage = "set:new_gui_task.json image:yellow_btn.png",
            pushedImage = "set:new_gui_task.json image:yellow_btn.png",
            name = "Quit Family"
        }
    ]

    $closeBtn = {
        disableClose = false
    }


    $info = {
        title = $title,
        content = $content,
        buttons = $buttons,
        closeBtn = $closeBtn
    }

    ShowTeam(entity = $obj1, show = $show, info = $info)
}

STORE_ITEM_STATUS_CHANGE
{
    $dictItem = NewDictionary($item)
    $storeId = DictionaryGet(dict = $dictItem, key = "storeId")
    $itemIndex = DictionaryGet(dict = $dictItem, key = "index")
    $danceStoreId = GetWorldVar(key = "danceStoreId")
    If($storeId == $danceStoreId && $targetIndex > 0)
    {
        $newDance = {}
        $danceIndex = 1
        $oldUseIndex = 0
        $oldItemIndex = 0
        Foreach(array = $obj1.danceUseItem, key = "value")
        {
            If($value == $itemIndex)
            {
                $oldUseIndex = $danceIndex
            }

            If ($danceIndex == $targetIndex)
            {
                $oldItemIndex = $value
                ArraySet(array = $newDance, index = $danceIndex , value = $itemIndex)
            }
            Else
            {
                ArraySet(array = $newDance, index = $danceIndex , value = $value)
            }

            $danceIndex = $danceIndex + 1
        }

        If ($oldUseIndex > 0)
        {
            ArraySet(array = $newDance, index = $oldUseIndex , value = $oldItemIndex)
        }

        $newData = {}
        $dataIndex = 1
        $hasOldItemIndex = false
        Foreach(array = $data, key = "value")
        {
            $dictValue = NewDictionary($value)
            $dictStoreId = DictionaryGet(dict = $dictValue, key = "storeId")
            $dictStoreItemIndex = DictionaryGet(dict = $dictValue, key = "itemIndex")
            If ($dictStoreId == $danceStoreId)
            {
                DictionarySet(dict = $dictValue, key = "status", value = 1)
            }

            If($dictStoreItemIndex == $oldItemIndex)
            {
                $hasOldItemIndex = true
            }

            ArraySet(array = $newData, index = $dataIndex , value = $dictValue)
            $dataIndex = $dataIndex + 1
        }

        If($hasOldItemIndex == false)
        {
            $dictValue = NewDictionary({})
            DictionarySet(dict = $dictValue, key = "status", value = 1)
            DictionarySet(dict = $dictValue, key = "itemIndex", value = $oldItemIndex)
            DictionarySet(dict = $dictValue, key = "storeId", value = $danceStoreId)
            ArrayAppend(array = $newData, value = $dictValue)
        }
        
        Foreach(array = $newDance, key = "value")
        {
            $isChange = false
            Foreach(array = $newData, key = "dictValue")
            {
                $dictStoreId = DictionaryGet(dict = $dictValue, key = "storeId")
                $dictItemIndex = DictionaryGet(dict = $dictValue, key = "itemIndex")
                If($dictItemIndex == $value && $dictStoreId == $danceStoreId)
                {
                    $isChange = true
                    DictionarySet(dict = $dictValue, key = "status", value = 2)
                    Break()
                }
            }
            If ($isChange == false)
            {
                $dictValue = NewDictionary({})
                DictionarySet(dict = $dictValue, key = "status", value = 2)
                DictionarySet(dict = $dictValue, key = "itemIndex", value = $value)
                DictionarySet(dict = $dictValue, key = "storeId", value = $danceStoreId)
                ArrayAppend(array = $newData, value = $dictValue)
            }
        }

        $dataIndex = 1
        $dataRestore = {}
        Foreach(array = $newData, key = "dictValue")
        {
            ArraySet(array = $dataRestore, index = $dataIndex , value = DictionaryToTable(dict = $dictValue))
            $dataIndex = $dataIndex + 1
        }

        CallTrigger(event = "CHANGE_DANCE_SKILL", obj1 = $obj1, oldSkill = $obj1.danceUseItem , newSkill = $newDance)
        $obj1.danceUseItem = $newDance
        $data = $dataRestore
        $def = false
    }
}

CHANGE_DANCE_SKILL
{
    $danceStoreId = GetWorldVar(key = "danceStoreId")
    If($oldSkill)
    {
        Foreach(array = $oldSkill, key = "value")
        {
            $skillName = GetStoreItemName(storeId= $danceStoreId , index = $value)
            ForgetSkill(entity = $obj1, name = $skillName)
        }
    }

    If($newSkill)
    {
        UpdateUIData(player = $obj1, ui = "win_dance", data = $newSkill)

        Foreach(array = $newSkill, key = "value")
        {
            $skillName = GetStoreItemName(storeId= $danceStoreId , index = $value)
            LearnSkill(entity = $obj1, name = $skillName)
            EquipSkill(entity = $obj1, name = $skillName)
        }
    }
}

SET_DRESS_ARCHIVE
{
    $dressArchive = GetObjectVar(obj = $obj1, key = "dressArchive")
    If(not $dressArchive)
    {
        Return()
    }

    $bmDressData = {
        vars = {
            custom_face = GetSkin(entity = $obj1, skinName = "custom_face"),
            custom_hair = GetSkin(entity = $obj1, skinName = "custom_hair"),
            clothes_tops = GetSkin(entity = $obj1, skinName = "clothes_tops"),
            clothes_pants = GetSkin(entity = $obj1, skinName = "clothes_pants"),
            custom_shoes = GetSkin(entity = $obj1, skinName = "custom_shoes"),
            custom_glasses = GetSkin(entity = $obj1, skinName = "custom_glasses"),
            custom_scarf = GetSkin(entity = $obj1, skinName = "custom_scarf"),
            custom_wing = GetSkin(entity = $obj1, skinName = "custom_wing"),
            custom_hat = GetSkin(entity = $obj1, skinName = "custom_hat"),
            custom_tail = GetSkin(entity = $obj1, skinName = "custom_tail")
        }
    }

    $bmDressInfo = {
        vars = {
            name = "ui_dress_archive_app_dress",
            data = $bmDressData
        }
    }

    ArrayAppend(array = $dressArchive, value = $bmDressInfo)

    UpdateUIData(player = $obj1, ui = "win_dressArchive", data = $dressArchive)

}


SHOW_OPERATE_DRESS_ARCHIVE_INPUT_DIALOG
{
    $title = {
        name = "ui_dress_archive_change_name"
    }

    $inputTitle = {
        name = "ui_dress_archive_input_name"
    }

    $buttons = [
        {
            event = "cancel",
            normalImage = "set:tip_dialog.json image:btn_big_blue",
            pushedImage = "set:tip_dialog.json image:btn_big_blue",
            name = "ui_cancel"
        },
        {
            event = "SHOW_DELETE_DRESS_ARCHIVE_DIALOG",
            normalImage = "set:tip_dialog.json image:btn_big_yellow",
            pushedImage = "set:tip_dialog.json image:btn_big_yellow",
            name = "ui_delete",
            clickAndShow = true
        },
        {
            event = "RENAME_DRESS_ARCHIVE",
            normalImage = "set:tip_dialog.json image:btn_big_green",
            pushedImage = "set:tip_dialog.json image:btn_big_green",
            name = "ui_sure"
        }
    ]

    $options = {
        index = $index
    }

    $contents = {
        title = $title,
        inputTitle = $inputTitle,
        buttons = $buttons,
        text = $name
    }

    ShowInputDialog(entity = $obj1, contents = $contents, options = $options)
}

ADD_DRESS_ARCHIVE
{
    $dressArchive = GetObjectVar(obj = $obj1, key = "dressArchive")
    If(not $dressArchive)
    {
        Return()
    }

    If((ArraySize(array = $dressArchive) - 1) < GetWorldVar(key = "dressArchiveNum"))
    {
        $addDressData = {
            vars = {
                custom_face = GetSkin(entity = $obj1, skinName = "custom_face"),
                custom_hair = GetSkin(entity = $obj1, skinName = "custom_hair"),
                clothes_tops = GetSkin(entity = $obj1, skinName = "clothes_tops"),
                clothes_pants = GetSkin(entity = $obj1, skinName = "clothes_pants"),
                custom_shoes = GetSkin(entity = $obj1, skinName = "custom_shoes"),
                custom_glasses = GetSkin(entity = $obj1, skinName = "custom_glasses"),
                custom_scarf = GetSkin(entity = $obj1, skinName = "custom_scarf"),
                custom_wing = GetSkin(entity = $obj1, skinName = "custom_wing"),
                custom_hat = GetSkin(entity = $obj1, skinName = "custom_hat"),
                custom_tail = GetSkin(entity = $obj1, skinName = "custom_tail")
            }
        }

        $addDressInfo = {
            vars = {
                name = $name,
                data = $addDressData,
                isSelect = false
            }
        }

        ArrayInsert(array = $dressArchive, index = 1, value = $addDressInfo)

        UpdateUIData(player = $obj1, ui = "win_dressArchive", data = $dressArchive)
    }
}

SHOW_DELETE_DRESS_ARCHIVE_DIALOG
{
    ShowDialogTip(entity = $obj1, 
        p1 = "ui_dress_archive_delete_dialog_context",
        event = "DELETE_DRESS_ARCHIVE",
        tipType = 2,
        context = { index = $index })
}

DELETE_DRESS_ARCHIVE
{
    If(not $result)
    {
        Return()
    }
    
    ShowInputDialog(entity = $obj1, contents = { isClose = true })
    $dressArchive = GetObjectVar(obj = $obj1, key = "dressArchive")

    If(not $dressArchive)
    {
        Return()
    }

    If(not $index)
    {
        Return()
    }

    If($index <= ArraySize(array = $dressArchive) and $index > 0)
    {
        ArrayRemove(array = $dressArchive, index = $index)
    }
    
    UpdateUIData(player = $obj1, ui = "win_dressArchive", data = $dressArchive)
}

RENAME_DRESS_ARCHIVE
{
    $dressArchive = GetObjectVar(obj = $obj1, key = "dressArchive")
    If(not $dressArchive)
    {
        Return()
    }

    If(not $index)
    {
        Return()
    }

    If($index <= ArraySize(array = $dressArchive) and $index > 0)
    {
        $archive = ArrayGet(array = $dressArchive, index = $index)
        If($archive)
        {
            SetObjectVar(obj = $archive, key = "name", value = $name)
        }
    }
    
    UpdateUIData(player = $obj1, ui = "win_dressArchive", data = $dressArchive) 
}

REMOVE_BM_DRESS
{
    $dressArchive = GetObjectVar(obj = $obj1, key = "dressArchive")
    If(not $dressArchive)
    {
        Return()
    }

    ArrayRemove(array = $dressArchive, index = ArraySize(array = $dressArchive))
}

INIT_PLAYER_DRESS
{
    $gameDress = GetObjectVar(obj = $obj1, key = "gameDress")
    If(not $gameDress)
    {
        Return()
    }

    If($gameDress ~= "")
    {
        $dressDict = NewDictionary($gameDress)
        ForeachDictionary(dict = $dressDict, keyName = "skinName", valueName = "skinValue")
        {
            SetSkin(entity = $obj1, skinName = $skinName, skinValue = $skinValue)
        }
    }
}

SAVE_PLAYER_DRESS
{
    $gameDress = GetObjectVar(obj = $obj1, key = "gameDress")
    If(not $gameDress)
    {
        Return()
    }

    $gameDress = {
        custom_face = GetSkin(entity = $obj1, skinName = "custom_face"),
        custom_hair = GetSkin(entity = $obj1, skinName = "custom_hair"),
        clothes_tops = GetSkin(entity = $obj1, skinName = "clothes_tops"),
        clothes_pants = GetSkin(entity = $obj1, skinName = "clothes_pants"),
        custom_shoes = GetSkin(entity = $obj1, skinName = "custom_shoes"),
        custom_glasses = GetSkin(entity = $obj1, skinName = "custom_glasses"),
        custom_scarf = GetSkin(entity = $obj1, skinName = "custom_scarf"),
        custom_wing = GetSkin(entity = $obj1, skinName = "custom_wing"),
        custom_hat = GetSkin(entity = $obj1, skinName = "custom_hat"),
        custom_tail = GetSkin(entity = $obj1, skinName = "custom_tail")
    }
}

SHOW_CHANGE_NAME_INPUT_DIALOG
{
    $title = {
        name = "ui_dress_change_name"
    }

    $inputTitle = {
        name = "ui_dress_input_name"
    }

    $buttons = [
        {
            event = "cancel",
            normalImage = "set:tip_dialog.json image:btn_big_blue",
            pushedImage = "set:tip_dialog.json image:btn_big_blue",
            name = "ui_cancel"
        },
        {
            event = "CHANGE_PLAYER_NAME",
            normalImage = "set:tip_dialog.json image:btn_big_green",
            pushedImage = "set:tip_dialog.json image:btn_big_green",
            name = "ui_sure"
        }
    ]

    $contents = {
        title = $title,
        inputTitle = $inputTitle,
        buttons = $buttons,
        text = $obj1.nickName
    }

    ShowInputDialog(entity = $obj1, contents = $contents)
}

CHANGE_PLAYER_NAME
{
    SetEntityName(entity = $obj1, name = $name)
    $obj1.nickName = $name
    UpdateUIData(player = $obj1, ui = "win_dressArchiveName", data = $name)
}

SHOW_OPERATE_DRESS_STORE_ITEM
{   
    If(not $storeId or not $itemIndex or not $targetIndex)
    {
        Return()
    }

    $item = GetStoreItem(storeId = $storeId, index = $itemIndex)
    If(not $item)
    {
        Return()
    }


    $itemDic = NewDictionary($item)

    $coinId = DictionaryGet(dict = $itemDic, key = "coinId")
    $price = DictionaryGet(dict = $itemDic, key = "price")

    If (not $coinId or not $price)
    {
        Return()
    }

    $btnInfo = {
        leftCoinId = nil,
        leftContent = "ui_cancel",
        rightCoinId = $coinId,
        rightContent = $price
    }
    $context = {
        storeId = $storeId,
        itemIndex = $itemIndex,
        targetIndex = $targetIndex
    }
    ShowDialogTip(entity = $obj1,tipType = 5, event = "DRESS_STORE_ITEM_BUY", p1 = "ui_tip", p2 = "ui_sure_to_pay", p3 = $btnInfo, context = $context)
}

DRESS_STORE_ITEM_BUY
{
    If($result)
    {
        StoreOperation(entity = $obj1, storeId = $storeId, itemIndex = $itemIndex, targetIndex = $targetIndex)
    }
}

COMMENT_WORKS
{
    Test($msg)
    CommentWorks(player = $obj1, id = $id, msg = $msg, event = "HTTP_TEST")
}

GET_WORKS_COMMENT
{
    GetWorksComments(player = $obj1, id = $id, event = "HTTP_GET_WORKS_COMMENT_CALL_BACK")
}

GET_WORKS_COMMENT_CALL_BACK
{
    $dictValue = NewDictionary($response)
    $code = DictionaryGet(dict = $dictValue, key = "code")
    If($code == 1)
    {
        $data = DictionaryGet(dict = $dictValue, key = "data")
        UpdateUIData(player = $obj1, ui = "win_msgBoard", data = $data)
    }
    Else
    {
        UpdateUIData(player = $obj1, ui = "win_msgBoard", data = {})
    }
}

HTTP_TEST
{
    Test($response)
}

HTTP_PURCHASED_DRESS_CALL_BACK
{
    $responseDict = NewDictionary($response)
    $dressStoreIds = GetWorldVar(key = "dressStoreIds")
    Foreach(array = $dressStoreIds, key = "storeId")
    {
        $storeItems = GetStoreById(storeId = $storeId)
        Foreach(array = $storeItems, key = "item")
        {
            $itemDict = NewDictionary($item)
            $itemType = DictionaryGet(dict = $itemDict, key = "itemType")
            $itemName = DictionaryGet(dict = $itemDict, key = "itemName")
            $itemId = GetConfigValue(type = "dress", fullName = $itemName, key = "itemId")
            $itemIndex = DictionaryGet(dict = $itemDict, key = "index")
            ForeachDictionary(dict = $responseDict, keyName = "type", valueName = "responseItems")
            {
                If($itemType == $type)
                {
                    Foreach(array = $responseItems, key = "responseItem")
                    {
                        If($itemId == $responseItem)
                        {
                            ChangeItemStatus(storeId = $storeId, index = $itemIndex, status = 1, player = $obj1)
                        }
                    }
                }
            }
        }
    }
    SyncStore(player = $obj1)
}

PLAYER_ON_VISIT
{
    If ($obj1 and $obj2)
    {
        SetEntityPosition(entity = $obj1, map = GetEntityMap(entity = $obj2),pos = GetEntityPosition(entity = $obj2))
    }
}

--打工
GET_TASK_UI_DATA(){
    $count = $obj1.worktaskCount % 10
    $str = "/"
    If($obj1.taskKey){
        $str = "/rd"
    }
    $text = Concat(p1 = $count, p2 = $str, p3 = "40")
    $rate = $count / 10
    $taskData = Table(
        operations = {
            setProgress = {
                rate = $rate
            },
            setBtnText = $text,
            setArea = {
                x = [0, 80],
                y = [0, 50],
                w = [0, 180],
                h = [0, 100]
            }
        },
        regData = {
            regId = $obj1.taskRegId,
            modName = "TASK_WORK",
            key = "click"
        }
    )
    UpdateUIData(player = $obj1, ui = "circleProgress", data = $taskData)
}
GET_TASK_GPS(debug = false) --得到打工的GPS位置
{
    $mapOutPos = {
        house_default_inside_map = {x = 1643, y = 13, z = -574},
        map001 = {x = 1639,y = 13, z = -574}
    }
    $pos = $obj1.taskPos or {x =  1663, y = 13, z = -557} --任务点，或者领任务点
    $mapName = GetPlayerMap(player = $obj1, name = true)
    $dict = NewDictionary($mapOutPos)
    If( ($obj1.npcMap and $mapName ~= $obj1.npcMap) or (not $obj1.npcMap and $mapName ~= "map001") ){
        $pos = DictionaryGet(dict = $dict, key = $mapName)
    }
    $obj1.gpsPos = $pos
    If($obj1.showtaskGps){
        SetGuidePostion(entity = $obj1, pos = $obj1.gpsPos)
    }
}
INIT_WORK_TASK(){ --初始打工
    $mapOutPos = {
        house_default_inside_map = {x = 1643, y = 12, z = -574},
        map001 = {x = 1639,y = 13, z = -574}
    }
    $index =  $obj1.taskIndex
    If($index && $index > 0){
        $taskDict = NewDictionary( ArrayGet(array = @TASK_TABLE, index = $index) )
        $obj1.taskKey = DictionaryGet(dict = $taskDict, key = "taskKey") -- 随机到的任务
        $obj1.taskPos = DictionaryGet(dict = $taskDict, key = "pos") -- 随机到的任务NPC ,GPS位置
        $obj1.taskNpc = DictionaryGet(dict = $taskDict, key = "npcName") --npc的 fullName
        $obj1.npcMap = DictionaryGet(dict = $taskDict, key = "npcMap")
    }
    CallTrigger(event = "GET_TASK_GPS", object = $obj1)
    CallTrigger(event = "GET_TASK_UI_DATA", object = $obj1)
}
FINISH_TASK(debug = false){
    If($obj1.taskKey ~= $name){
       Return()
    }
    $rewardTable = [
        "myplugin/blueprint_wand",
        "myplugin/Boots_01",
        "myplugin/Chestplate_01",
        "myplugin/exp_potion_1"
    ]
    OpenConversation(
        entity = $obj1,
        optionList = [],
        optionNpc = "myplugin/player1",
        talkList = [
            {
                msg = "tr.37965",
                npc = $obj1.taskNpc
            }
        ]
    )
    $taskItem = SearchBagItem(entity = $obj1, key = "fullName", val = "myplugin/taskItem")
    ConsumeItem(item = $taskItem, num = 1)
    $proessLeve = NumberFloor(p1 = $obj1.worktaskCount / 10)
    $proessCount = $obj1.worktaskCount % 10
    $obj1.lastNpc = $obj1.taskNpc
    $obj1.taskNpc = nil
    $obj1.taskKey = nil
    $obj1.taskPos = nil
    $obj1.npcMap = nil
    If($proessLeve > 0 and $proessCount == 0){
        $recfg = ArrayGet(array = $rewardTable, index = $proessLeve)
        AddItem(entity = $obj1, cfg = $recfg, count = 1)
        ShowRewardNotice(
            entity = $obj1,
            tiptext = "",
            tittletext = "final.summary.reward",
            cfg = $recfg
        )
    }
    If($obj1.worktaskCount >= 40){
        $obj1.worktaskCount = 0
    }
    CallTrigger(event = "GET_TASK_GPS", object = $obj1)
    CallTrigger(event = "TASK_NPC_ADD_BUFF", object = $obj1, from = "task_____ffffffff")
    CallTrigger(event = "GET_TASK_UI_DATA", object = $obj1)
}
TASK_NPC_ADD_BUFF(debug = false)
{
    $map = GetPlayerMap(player = $obj1)
    $mapNpc = GetMapNpc(map = $map)
    Foreach(array = $mapNpc, key = "npc"){
        $name = GetConfigVar(obj = $npc, key = "fullName")
        If($name == $obj1.lastNpc){
            UnMarkEntityForPlayer(player = $obj1, entity = $npc, buffName = "myplugin/hand_point_effect")
        }
        If($name == $obj1.taskNpc){
            MarkEntityForPlayer(player = $obj1, entity = $npc, buffName = "myplugin/hand_point_effect")
        }
    }
}
TASK_UPDATE_DATA(){
    CallTrigger(event = "TASK_NPC_ADD_BUFF", object = $obj1, from = "MMMMMMMaaaaaapppp")
	CallTrigger(event = "GET_TASK_GPS", object = $obj1)
    CallTrigger(event = "GET_TASK_UI_DATA", object = $obj1)
}
SHOW_WORK_PROGRESS(){ --button控制显示进度条，
    If($obj1.showProgress){
        $obj1.showProgress = false
        $obj1.showtaskGps = false
    }Else{
        $obj1.showProgress = true
        $obj1.showtaskGps = true
    }
    If($obj1.showtaskGps){
        SetGuidePostion(entity = $obj1, pos = $obj1.gpsPos)
    }Else{
        SetGuidePostion(entity = $obj1, pos = nil)
    }
    ShowUI(player = $obj1, uiName = "circleProgress", show = $obj1.showProgress)
}
SHOW_WORK_GPS(){ --进度条控制显示GPS
    If($obj1.showtaskGps){
        $obj1.showtaskGps = false
        SetGuidePostion(entity = $obj1, pos = nil)
    }Else{
        $obj1.showtaskGps = true
        SetGuidePostion(entity = $obj1, pos = $obj1.gpsPos)
    }
}
CLOSE_GPS(){ --按钮关闭进度条
    $obj1.showtaskGps = false
    SetGuidePostion(entity = $obj1, pos = nil)
}
--场景商店的购买逻辑
SCENE_SHOP_BUY(){
   ShowNotice(
        buttonType = 2,
        content = "你确定要买鱼？",
        eventYes = "SURE_BUY_ITEM",
        eventNo = "",
        entity = $obj1,
        textP1 = "Hahahaha",
        tittleKey = "Do you want Join My Family"
    )
}
SURE_BUY_ITEM(){
    $result = CommodityBuyItem(itemIndex = $itemIndex, player = $obj1)
    --result: ack_of_money, gui_str_app_shop_inventory_is_full, gui_buy_goods_successful, ..
    ShowNotice(
        buttonType = 1,
        content = $result,
        eventYes = "SURE_BUY_ITEM",
        eventNo = "",
        entity = $obj1,
        textP1 = "Hahahaha",
        tittleKey = "Do you want Join My Family"
    )
}
--打开特权商店
OPEN_PRISHOP(){
    ShowUI(player = $obj1, uiName = "priShop", show = true)
}