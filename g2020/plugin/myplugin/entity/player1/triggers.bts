ENTITY_ENTER
{
    If(IsPlayer(entity = $obj1))
    {
        $obj1.isReadyReward = false
        $obj1.role = @adult
        $obj1.scaleBuff = nil

        $obj1.requestFamilyPlayer = nil
        $obj1.inviteFamilyPlayer = nil

        CallTrigger(event = "ADD_MONEY", object = $obj1)
        CallTrigger(event = "SHOW_SELECT_ROLE", object = $obj1)    


        -- test data
        --SetSkin(entity = $obj1, skinName = "custom_wing", skinValue = 25)
        --SetSkin(entity = $obj1, skinName = "custom_scarf", skinValue = 3)
        --SetSkin(entity = $obj1, skinName = "clothes_tops", skinValue = 20)
        --SetSkin(entity = $obj1, skinName = "custom_shoes", skinValue = 40)
        --SetSkin(entity = $obj1, skinName = "clothes_pants", skinValue = 35)
        --SetSkin(entity = $obj1, skinName = "custom_hair", skinValue = 5)
        --SetSkin(entity = $obj1, skinName = "custom_face", skinValue = 5)
        --SetSkin(entity = $obj1, skinName = "custom_glasses", skinValue = 3)
        --SetSkin(entity = $obj1, skinName = "custom_hat", skinValue = 5)
    }
------------------------------------------------------------------------------------------------------------------------------ 分割线
    ------------------------------------------ 当前选择存档 $curSelectHouse
    $curSelectHouse = {}
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    If(not $houseVars or ArraySize(array = $houseVars) == 0){ -- 第一次进入游戏的玩家
        Test("----------------------- first in")
        $houseVars = Table([
                "myplugin/house_default",
                "myplugin/house_color_buff_1",
                [],
                [],
                "enable",
                "Sakura NeNe",
                "houseType",
                "1s"
            ],[
                "myplugin/house_default",
                "myplugin/house_color_buff_1",
                [],
                [],
                "disable",
                "Sakura NeNe2",
                "houseType",
                "2s"
            ])
        SetObjectVar(obj = $obj1, key = "houseVars", value = $houseVars)
    }
    Foreach(array = $houseVars, key = "house"){
        If(ArrayGet(array = $house, index = 5) == "enable"){
            $curSelectHouse = $house
            Break()
        }
    }
    ------------------------------------------ 获得当前地图上的空出的区域，创建房子 * 
    -- 区域 <region------owner> 房子 <house-------owner> 玩家，可通过区域获取区域上的房子，通过房子获得所属玩家。 反向同理
    $regions = GetAllRegion(map = GetEntityMap(entity = $obj1))
    Foreach(array = $regions, key = "region"){
        If(not GetRegionOwner(region = $region) and GetRegionConfig(region = $region, key = "isHouseRegion")){
            CallTrigger(object = $obj1, event = "CREATE_HOUSE_OUTSIDE", region = $region, 
                houseCfg = ArrayGet(array = $curSelectHouse, index = 1),
                houseColor = ArrayGet(array = $curSelectHouse, index = 2))
            Break()
        }
    }
    ------------------------------------------ 玩家进入游戏就进入自己房间
    $house = GetObjectVar(obj = $obj1, key = "house")
    $houseInsideMap = GetObjectVar(obj = $house, key = "houseInsideMap")
    SetObjectVar(obj = $obj1, key = "returnDoor", value = GetObjectVar(obj = $house, key = "door"))
    SetEntityPosition(map = $houseInsideMap, entity = $obj1, 
        pos = GetMapInitPos(map = $houseInsideMap) or GetEntityPosition(entity = $obj1))
------------------------------------------------------------------------------------------------------------------------------ 分割线
}

------------------------------------------------------------------------------------------------------------------------------ 分割线
TEST_DATA{ -- 保存进数据库的数据伪代码
    Table(
        houseVars = [ -- all house 当前entity的所有房子
            [ --   arr[1] = houseCfg, arr[2] = houseSelectColor, 
                -- arr[3] = houseInsideFurnishing, arr[4] = houseInsideRegionColors, arr[5] = enable 当前选中房子标识/ disable 未选中
                -- arr[6] = curHouseName, arr[7] = curHouseType, arr[8] = ID
                "myplugin/xxx...", -- houseCfg 
                "myplugin/xxx...", -- houseSelectColor，是buff来着 -- 外部颜色不影响内部
                [ -- houseInsideFurnishing , 房子内部物品摆放
                    -- pos是相对坐标，每个map都有一个initPos，坐标都是这个initPos+pos
                    -- 绝对坐标也行
                    [{x = "xx", y = "xx", z = "xx"},180,"myplugin/xxx...","id","true/false"],
                    [{x = "xx", y = "xx", z = "xx"},180,"myplugin/xxx...","id","true/false"]
                    -- {pos,yaw,cfg,全局唯一id:furnishingId,是否是旧家具，下线后则会将当前玩家全部房子的全部家具设置成true，即是旧家具}
                ],
                [ -- houseInsideRegionColors 房子内部区域颜色
                    ["regionkey", "myplugin/xxx..."], -- regionkey, color 此处的颜色是替换方块
                    ["regionkey2", "myplugin/xxx..."]
                ],
                "enable", -- cur select house 有这个标志就是 当前选择/出生的房子
                "houseName", -- 当前房子的名字
                "houseType", -- 当前房子的类型
                "houseKey" -- 房子唯一ID，当玩家获得该房子时通过时间计算或者其他的生成的唯一ID
            ],
            [
                -- ... 同上，不是当前选择则第五个参数为disable
            ]
        ]
    )
    Table(Demo = [[[],[]],[[],[]]])
}

CREATE_HOUSE_OUTSIDE{
    $house = CreateNpc(pos = GetRegionCenter(region = $region), map = GetEntityMap(entity = $obj1), cfgName = $houseCfg)
    AddEntityBuff(entity = $house, cfg = GetConfigVar(obj = $house, key = "houseCreateBuff"), buffTime = 200)
    -- 改变房子外部颜色，通过加buff
    AddEntityBuff(entity = $house, cfg = $houseColor)
    ------------------------------------------ TestCode
    -- SetObjectVar(obj = $house, key = "isLock", value = true) -- 给房门上锁

    SetRegionOwner(region = $region, owner = $house)
    SetObjectVar(obj = $house, key = "owner", value = $obj1)

    SetObjectVar(obj = $obj1, key = "house", value = $house)
    SetObjectVar(obj = $house, key = "region", value = $region)
}

REMOVE_HOUSE_OUTSIDE{
    $house = GetObjectVar(obj = $obj1, key = "house")
    $region = GetObjectVar(obj = $house, key = "region")
    SetRegionOwner(region = $region, owner = nil)
    KillEntity(entity = $house)
}

ENTITY_LEAVE{ 
    ------------------------------------------ 玩家退出，清掉房子 邮箱 门，重置区域owner为nil
    CallTrigger(object = $obj1, event = "REMOVE_HOUSE_OUTSIDE")
}

UPDATE_HOUSE{
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    ForLoop(from = 1, to = ArraySize(array = $houseVars), key = "index"){
        $houseVar = ArrayGet(array = $houseVars, index = $index)
        If(ArrayGet(array = $houseVar, index = 5) ~= "enable" and $houseKey == ArrayGet(array = $houseVar, index = 8)){
            $newHouseVar = $houseVar   
        }
        If(ArrayGet(array = $houseVar, index = 5) == "enable"){
            $curHouseVar = $houseVar
        }
    }
    If(not $newHouseVar){
        ArraySet(array = $curHouseVar, index = 2, value = $curSelectKey)
        CallTrigger(object = $obj1, event = "CHANGE_HOUSE_COLOR", oldHouseColor = $oldSelectKey, houseColor = $curSelectKey)
    }Else{
        ArraySet(array = $curHouseVar, index = 5, value = "disable")
        ArraySet(array = $newHouseVar, index = 5, value = "enable")
        ArraySet(array = $newHouseVar, index = 2, value = $curSelectKey)
        CallTrigger(object = $obj1, event = "CHANGE_HOUSE", 
            newHouse = ArrayGet(array = $newHouseVar, index = 1), houseColor = $curSelectKey)
    }
    ShowGenericListDisplayBox(entity = $obj1, closeWin = true)
}

CHANGE_HOUSE_COLOR{ -- 换色
    $curHouse = GetObjectVar(obj = $obj1, key = "house")
    $oldBuff = GetEntityTypeBuff(entity = $curHouse, key = "fullName", value = $oldHouseColor)
    If($oldBuff){
        RemoveEntityBuff(entity = $curHouse, buff = $oldBuff)
    }
    AddEntityBuff(entity = $curHouse, cfg = $houseColor) -- 通过buff换skin
}

CHANGE_HOUSE{ -- 换房子/存档
    $region = GetObjectVar(obj = GetObjectVar(obj = $obj1, key = "house"), key = "region")
    ------------------------------------------ 改变房子(actor)，直接杀掉原来的，新建新的
    CallTrigger(object = $obj1, event = "REMOVE_HOUSE_OUTSIDE")
    ShowTip(entity = $obj1, tipType = 1, textKey = "house_change")

    CallTrigger(object = $obj1, event = "CREATE_HOUSE_OUTSIDE", region = $region, houseCfg = $newHouse, houseColor = $houseColor)
}



-------------------------------------- ui/btn/event
HOUSE_TAB_EVENT{
    Test("---------HOUSE_TAB_EVENT")
    If(not $key or "0" == $key){
        Test("--------- u need buy")
        $listInfoTb = [
            {image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_1.png", text = "xxxxx", 
                btnShowText = 100, context = {money = 100, houseCfg = "myplugin/house_default"}},
            {image = "plugin/myplugin/entity/house_default/HOUSE_COLOR_2.png", text = "yyyyy", 
                btnShowText = 200, context = {money = 200, houseCfg = "myplugin/house_default"}},
        ]
        $childInfo = {
            uiWin = "genericListDisplayBox3",
            infoTb = {
                listInfo = {
                    infoTb = $listInfoTb
                },
                btnInfo = {
                    btnText = "ui_house_buy_house",
                    btnTrigger = "SURE_BUY_HOUSE"
                }
            }
        }
        ShowGenericListDisplayBox(entity = $obj1, infoTb = $childInfo, isOpenChild = true)
        Return()
    }
    Test("--------- u need show")
    $curSelectHouse = nil
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    Foreach(array = $houseVars, key = "houseVar"){
        If(ArrayGet(array = $houseVar, index = 8) == $key){
            $curSelectHouse = $houseVar
            Break()
        }
    }
    If(not $curSelectHouse){
        Return()
    }
    -- color
    $selectGvInfo = {}
    $worldAllColor = GetWorldVar(key = "allColor")
    $curHouseColor = GetEntityCfg(fullName = ArrayGet(array = $curSelectHouse, index = 1), key = "allColor")
    Foreach(array = $curHouseColor, key = "entity_color"){
        Foreach(array = $worldAllColor, key = "world_color"){
            If(ArrayGet(array = $entity_color, index = 1) == ArrayGet(array = $world_color, index = 1)){
                ArrayAppend(array = $selectGvInfo, value = {
                    rightImg = ArrayGet(array = $world_color, index = 3),
                    leftImg = ArrayGet(array = $entity_color, index = 2),
                    key = ArrayGet(array = $world_color, index = 2),
                    curSelect = ArrayGet(array = $world_color, index = 2) == ArrayGet(array = $curSelectHouse, index = 2)
                        and true or false
                })
            }
        }
    }
    -- btn
    $btnList = [
        {text = "ui_house_sell_house", trigger = "SELL_HOUSE", context = { houseKey = $key} },
        {text = "ui_house_use_house", trigger = "UPDATE_HOUSE", context = { houseKey = $key} }
    ]
    $infoTb = {
        uiWin = "genericListDisplayBox2",
        infoTb = {
            upperLayerKey = $key,
            titleTb = {text = ArrayGet(array = $houseVar, index = 6), trigger = "EDIT_HOUSE_NAME"},
            selectInfo = {
                selectTitleText = "ui_house_choice_color",
                selectButtomText = ArrayGet(array = $houseVar, index = 7),
                selectGvInfo = $selectGvInfo
            },
            btnInfo = {
                btnType = 2,
                btnList = $btnList
            }
        }
    }
    ShowGenericListDisplayBox(entity = $obj1, infoTb = $infoTb, isOpenChild = true)
}

EDIT_HOUSE_NAME{
    Test("EDIT_HOUSE_NAME")
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    Foreach(array = $houseVars, key = "houseVar"){
        If(ArrayGet(array = $houseVar, index = 8) == $upperLayerKey){
            $curSelectHouse = $houseVar
            Break()
        }
    }
}

SURE_BUY_HOUSE{
    Test("SURE_BUY_HOUSE",$houseCfg, $money)
    If(not $houseCfg){
        --此处判断是否购买失败，失败直接返回
        ShowTip(entity = $obj1, tipType = 1, textKey = "ui_buy_failure")
        Return()
    }

    -------------
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    $houseVar = Table([ -- 购买成功后拼接一个新的房子数据放进entity的houseVars中
        $houseCfg,
        GetEntityCfg(fullName = $houseCfg, key = "defaultColor") or "",
        [],
        [],
        "disable",
        "",
        "",
        ""
    ])
    -------------

    ShowTip(entity = $obj1, tipType = 1, textKey = "ui_buy_success")
    -- ShowGenericListDisplayBox(entity = $obj1, closeWin = true)
}

SELL_HOUSE{
    Test("SELL_HOUSE",$houseKey)
    $curSelectHouse = nil
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    Foreach(array = $houseVars, key = "houseVar"){
        If(ArrayGet(array = $houseVar, index = 8) == $houseKey){
            $curSelectHouse = $houseVar
            Break()
        }
    }
    If(not $curSelectHouse){
        Return()
    }
    -- showImage
    $worldAllColor = GetWorldVar(key = "allColor")
    $curHouseColor = GetEntityCfg(fullName = ArrayGet(array = $curSelectHouse, index = 1), key = "allColor")
    Foreach(array = $curHouseColor, key = "entity_color"){
        Foreach(array = $worldAllColor, key = "world_color"){
            If(ArrayGet(array = $world_color, index = 2) == ArrayGet(array = $curSelectHouse, index = 2) and 
                ArrayGet(array = $world_color, index = 1) == ArrayGet(array = $entity_color, index = 1)){
                Test(ArrayGet(array = $world_color, index = 2),ArrayGet(array = $curSelectHouse, index = 2))
                $showImage = ArrayGet(array = $entity_color, index = 2)
                Break()
            }
        }
    }
    -- showTextTb
    $showTextTb = {textWeightList = [
        {keyText = "ui_house_sell_house_money", valueText = "123456678"},
        {keyText = "ui_house_sell_house_type", valueText = "yesssssssssssss"}
    ]}
    -- btn
    $btnList = [
        {text = "ui_sure", trigger = "SELL_HOUSE_SURE", context = { houseKey = $houseKey} },
        {text = "ui_cancle", trigger = "HOUSE_TAB_EVENT", context = { key = $houseKey} }
    ]
    $infoTb = {
        uiWin = "genericShowPage",
        infoTb = {
            upperLayerKey = $houseKey,
            titleTb = {text = ArrayGet(array = $curSelectHouse, index = 6)},
            showImage = $showImage,
            showTextTb = $showTextTb,
            btnInfo = {
                btnType = 2,
                btnList = $btnList
            }
        }
    }
    ShowGenericListDisplayBox(entity = $obj1, infoTb = $infoTb, isOpenChild = true)
}

SELL_HOUSE_SURE{
    $curSelectHouse = nil
    $houseVars = GetObjectVar(obj = $obj1, key = "houseVars")
    Test($houseVars ,ArraySize(array = $houseVars))
    If(ArraySize(array = $houseVars) <= 1){ -- 最后一套房不能出售
        ShowTip(entity = $obj1, tipType = 1, textKey = "ui_house_sell_cant_sell")
        Return()
    }
    ForLoop(from = 1, to = ArraySize(array = $houseVars), key = "index"){
        If(ArrayGet(array = ArrayGet(array = $houseVars, index = $index), index = 8) == $houseKey){
            $curSelectHouse = $houseVar
            ArrayRemove(array = $houseVars, index = $index)
            Break()
        }
    }
    $newHouseVar = ArrayGet(array = $houseVars, index = 1)
    ArraySet(array = $newHouseVar, index = 5, value = "enable")
    CallTrigger(object = $obj1, event = "CHANGE_HOUSE", 
            newHouse = ArrayGet(array = $newHouseVar, index = 1), houseColor = ArrayGet(array = $newHouseVar, index = 2))
    --- 出售成功，给玩家钱
    ShowGenericListDisplayBox(entity = $obj1, closeWin = true)
}

BUY_STORE{ -- TODO UPDATE
    Test("BUY_STORE",$storeKey,$cfg,"---------购买后直接出现在场景里的逻辑 createNpc..xxx")
    $map = GetObjectVar(obj = GetObjectVar(obj = $obj1, key = "house"), key = "houseInsideMap")
    CreateNpc(pos = GetEntityPosition(entity = $obj1), map = $map, cfgName = $cfg)
}










------------------------------------------------------------------------------------------------------------------------------ 分割线

ADD_MONEY
{  
    $today = GetYearDayStr(time = GetTime())

    If($today ~= $obj1.rewardDay)
    {
        $obj1.rewardCounts = 1
        $obj1.rewardDay = $today
    }

    $count = $obj1.rewardCounts
    $arraySize = ArraySize(array = @CDReward)
    If($count > $arraySize)
    {
        $count = $arraySize
    }
    $rewardArray = ArrayGet(array = @CDReward, index = $count)
    $cdTime = ArrayGet(array = $rewardArray, index = 1)
    $money = ArrayGet(array = $rewardArray, index = 2)

    If($obj1.isReadyReward)
    {
        AddCurrency(count = $money, coinName = "green_currency", entity = $obj1)
        ShowRewardRollTip(image = "set:jail_break.json image:jail_break_currency", text = Concat(p1 = "+", p2 = $money), entity = $obj1)
        $obj1.rewardCounts = $obj1.rewardCounts + 1
    }
    StartTimer(rep = false, time = $cdTime, object = $obj1, event = "ADD_MONEY")
    ShowRewardCD(player = $obj1, time = $cdTime)
    $obj1.isReadyReward = true
}


FUNC_GENERATE_STATE
{
    $keyStr = Concat(p1 = "is", p2 = $stateName)
    If(GetObjectVar(obj = $obj1, key = $keyStr) && ($stateName ~= "region" || $obj1.regionRTime > 0))
    {
        Return()
    }
    SetGuidePostion(entity = $obj1)
    SetObjectVar(obj = $obj1, key = $keyStr, value = true)
    RemoveSkill(entity = $obj1, name = "myplugin/close_gps")
    AddSkill(entity = $obj1, name = Concat(p1 = "myplugin/skill_state_", p2 = $stateName))
}

INTERACTION_CLAP { --拍手 小孩和小孩
    If($obj2.role == @child && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_clap", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_HUG { --拥抱 小孩和小孩 or 大人和大人
    If($obj2.role == @child && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_hug", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }

    If($obj2.role == @adult && $obj1.role == @adult) {
        CastSkill(skill = "myplugin/action_hug", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_HANDSHAKE { --握手 大人和大人
    If($obj2.role == @adult && $obj1.role == @adult) {
        CastSkill(skill = "myplugin/action_handshake", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_RIDE { --骑乘 小孩和大人
    If($obj2.role == @child && $obj1.role == @adult) {
        CastSkill(skill = "myplugin/action_ride", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
    }
}

INTERACTION_HAND_IN_HAND { --手拉手 小孩和大人
    If($obj2.role == @child && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_handinhand", from = $obj1, packet = {targetID = GetObjectID(object = $obj2)})
    }
}

INTERACTION_FOLLOW { --跟随
    CastSkill(skill = "myplugin/action_follow", from = $obj2, packet = {targetID = GetObjectID(object = $obj1)})
}


INTERACTION_PICK {
    If($obj2.role == @adult && $obj1.role == @child) {
        CastSkill(skill = "myplugin/action_pickup", from = $obj1, packet = {targetID = GetObjectID(object = $obj2)})
    }
}

INTERACTION_BABY_TROLLEY {

}

ENTITY_JUMP {
    CallTrigger(obj1 = $obj1, event = "ENTITY_REMOVE_INTERACTION")
}

ENTITY_DIE {
	CallTrigger(obj1 = $obj1, event = "ENTITY_REMOVE_INTERACTION")
}

ENTITY_REMOVE_INTERACTION {
    If($obj1.interactionObjId){
        $target = GetObject(objID = $obj1.interactionObjId)
        If($target && $target.interactionBuff) {
            RemoveEntityBuff(buff = $target.interactionBuff, entity = $target)
        }
    }

    If($obj1.interactionBuff){
        RemoveEntityBuff(buff = $obj1.interactionBuff, entity = $obj1)
    }
}

FUNC_GENERATE_A_STATE
{
    $keyStr = Concat(p1 = "is", p2 = $stateName)
    If(GetObjectVar(obj = $obj1, key = $keyStr))
    {
        Return()
    }
    SetObjectVar(obj = $obj1, key = $keyStr, value = true)
    SetObjectVar(
        obj = $obj1,
        value = nil,
        key = Concat(p1 = $stateName, p2 = "InteractList")
    )
    AddSkill(entity = $obj1, name = Concat(p1 = "myplugin/skill_state_", p2 = $stateName))
}

FUNC_GENERATE_B_STATE
{
    $obj1.isregion = true
    $skillName = "myplugin/skill_state_region"
    $locations = GetSkillVar(fullName = $skillName, key = "locations")
    $locStr = ArrayGet(array = $locations, index = $obj1.regionIdx)

    SetGuidePostion(entity = $obj1)
    AddSkill(entity = $obj1, name = $skillName)
    RemoveSkill(entity = $obj1, name = "myplugin/close_gps")
    SetObjectVar(obj = $obj1, key = "regionInteractList", value = nil)

    $reg = GetRegionByName(
        map = GetEntityMap(entity = $obj1),
        name = $locStr 
    )

    If($reg && IfEntityInArea(
        region = {
            min = GetRegionMin(region = $reg),
            max = GetRegionMax(region = $reg)
        }, entity = $obj1)
    )
    {
        CallTrigger(
            opt = "INNER",
            object = $obj1,
            key = GetRegionKey(region = $reg),
            event = "FUNC_REGION_STATE_OPERATION",
            type = GetRegionCfgVar(region = $reg, key = "stateType"),
            duration = GetRegionCfgVar(region = $reg, key = "duration")
        )
    }
}

FUNC_REGION_STATE_OPERATION 
{
    If($type == "B" && $obj1.isregion)
    {
        If($opt ~= "INNER")
        {
            $location = ArrayGet(
                array = GetSkillVar(
                    fullName = "myplugin/skill_state_region",
                    key = "locations"
                ),
                index = $obj1.regionIdx
            )
            If($location ~= $key)
            {
                Return()
            }
        }

        If($opt == "LEAVE")
        {
            StopTimer(timer = $obj1.REGION_TIMER)
            ShowProgressFollowObj(entity = $obj1, isOpen = false)
            $obj1.regionRTime = $obj1.regionRTime - GetTime() + $obj1.regionSTime
            Return()
        }

        If($obj1.regionRTime == 0)
        {
            $obj1.regionRTime = $duration
        }
        $obj1.regionSTime = GetTime()

        ShowProgressFollowObj(
            isOpen = true,
            pgName = $key,
            entity = $obj1,
            totalTime = $duration * 20,
            rTime = $obj1.regionRTime * 20,
        )

        $obj1.REGION_TIMER = StartTimer(
            rep = false,
            object = $obj1,
            stateName = "region",
            time = ($obj1.regionRTime * 20) // 1,
            event = "FUNC_STATE_RELEASE_AND_REWARD",
        )
    }
}

FUNC_STATE_ADD_INTERACTLIST
{
    Foreach(array = @Generate_State_List, key = "stateName")
    {
        If(not GetObjectVar(obj = $obj1, key = Concat(p1 = "is", p2 = $stateName)))
        {
            Continue()
        }
        $listName = Concat(p1 = $stateName, p2 = "InteractList")
        $interactList = GetObjectVar(obj = $obj1, key = $listName)
        $targetID = GetObjectVar(obj = $obj1, key = "interactionObjId")
        If(not IsPlayer(entity = GetObject(objID = $targetID)))
        {
            Return()
        }
        If(not $interactList)
        {
            $interactList = []
        }
        If(not ArrayFind(array = $interactList, value = $targetID))
        {
            ArrayAppend(array = $interactList, value = $targetID)
        }
        SetObjectVar(obj = $obj1, key = $listName, value = $interactList)
    }
}

FUNC_STATE_RELEASE_AND_REWARD
{
    $hadState = Concat(p1 = "is", p2 = $stateName)
    If(not GetObjectVar(obj = $obj1, key = $hadState))
    {
        Return()
    }
    SetObjectVar(obj = $obj1, key = $hadState, value = false)

    If($stateName == "region")
    {
        $obj1.regionRTime = 0
    }

    $skillName = Concat(p1 = "myplugin/skill_state_", p2 = $stateName)
    RemoveSkill(entity = $obj1, name = "myplugin/close_gps")
    ShowProgressFollowObj(entity = $obj1, isOpen = false)
    RemoveSkill(entity = $obj1, name = $skillName)
    SetGuidePostion(entity = $obj1)

    $rewardSelf = GetSkillVar(fullName = $skillName, key = "rewardSelf")
    $rewardOther = GetSkillVar(fullName = $skillName, key = "rewardOther")
    $rewardDis = GetSkillVar(fullName = $skillName, key = "rewardDis")

    $listName = Concat(p1 = $stateName, p2 = "InteractList")
    If(not GetObjectVar(obj = $obj1, key = $listName))
    {
        CallTrigger(object = $obj1, event = "FUNC_STATE_REWARD_AND_TIP", rewardCount = $rewardSelf)
        Return()
    }
    Foreach(array = GetObjectVar(obj = $obj1, key = $listName), key = "objID")
    {
        $player = GetObject(objID = $objID)
        If(not IsPlayer(entity = $player) || GetObjectDistance(obj1 = $obj1, obj2 = $player) > $rewardDis)
        {
            Continue()
        }
        CallTrigger(object = $player, event = "FUNC_STATE_REWARD_AND_TIP", rewardCount = $rewardOther)
    }
    CallTrigger(object = $obj1, event = "FUNC_STATE_REWARD_AND_TIP", rewardCount = $rewardOther)
    SetObjectVar(obj = $obj1, key = $listName, value = nil)
}

FUNC_STATE_REWARD_AND_TIP
{
    AddCurrency(coinName = "green_currency", entity = $obj1, count = $rewardCount)
    ShowRewardRollTip(
        entity = $obj1,
        image = "set:jail_break.json image:jail_break_currency",
        text = Concat(p1 = "+", p2 = $rewardCount, p3 = "(照顾加成)"),
    )
}

CREATE_FAMILY
{
    If(IsPlayer(entity = $obj1))
    {
        $familyId = GetEntityTeam(entity = $obj1)
        If($familyId and $familyId ~= 0)
        {
            Return()
        }
        SetEntityTeam(entity = $obj1, teamId = @familyIndex)
        @familyIndex = @familyIndex + 1
        ShowTip(entity = $obj1, tipType = 2,textKey = "Create Family Success", time = 40)
    }
}

QUIT_FAMILY
{
    If(IsPlayer(entity = $obj1))
    {
        SetEntityTeam(entity = $obj1, teamId = 0)
        ShowTip(entity = $obj1, tipType = 2,textKey = "Quit Family Success", time = 40)
        CallTrigger(event = "INIT_TEAM_UI", obj1 = $obj1, show = false)
    }
}

REQUEST_JOIN_FAMILY
{
    $targetFamilyID = GetEntityTeam(entity = $obj1)
    If(not $targetFamilyID or $targetFamilyID == 0)
    {
        Return()
    }
    $obj1.requestFamilyPlayer = $obj2
    ShowNotice(
            buttonType = 2,
            content = "I Want Join Family",
            eventYes = "REQUEST_JOIN_FAMILY_YES",
            eventNo = "REQUEST_JOIN_FAMILY_NO",
            entity = $obj1,
            textP1 = "Hahahaha",
            tittleKey = "I Want Join Family"
    )

    ShowBubbleMsg(entity = $obj2, textKey = "I Want Join Family")
}

INVITE_JOIN_FAMILY
{
    $myFamilyID = GetEntityTeam(entity = $obj2)
    If(not $myFamilyID or $myFamilyID == 0)
    {
        Return()
    }

    $playerCount = GetTeamInfo(teamId = $myFamilyID, key = "playerCount")
    If(not $playerCount or $playerCount >= 4)
    {
        Return()
    }

    $obj1.inviteFamilyPlayer = $obj2

    ShowNotice(
            buttonType = 2,
            content = "Do you want Join My Family",
            eventYes = "INVITE_JOIN_FAMILY_YES",
            eventNo = "INVITE_JOIN_FAMILY_NO",
            entity = $obj1,
            textP1 = "Hahahaha",
            tittleKey = "Do you want Join My Family"
    )

    ShowBubbleMsg(entity = $obj2, textKey = "Do you want Join My Family")
}

INIT_TEAM_UI
{
    $title = {
        name = "My Family Hahaha"
    }

    $content = {
        showHeadPic = true,
        showGender = true,
        showScale = true,
        showNickName = true
    }
    
    $buttons = [
        {
            event = "QUIT_FAMILY",
            normalImage = "set:new_gui_task.json image:yellow_btn.png",
            pushedImage = "set:new_gui_task.json image:yellow_btn.png",
            name = "Quit Family"
        }
    ]

    $closeBtn = {
        disableClose = false
    }


    $info = {
        title = $title,
        content = $content,
        buttons = $buttons,
        closeBtn = $closeBtn
    }

    ShowTeam(entity = $obj1, show = $show, info = $info)   
}