---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by luo.
--- DateTime: 2019/11/8 17:01
---

local ViewId = {
    BACK = 1,
    EDIT = 2,
    MSG_BOARD = 3,
    SHARE = 4,
}

function M:init()
    WinBase.init(self, "WorksPreview.json", true)
    self:initMain()
end

function M:onOpen(works, textureName)
    self.works = works
    UI:closeWnd("toolbar")
    self:child("WorksPreview-Image"):SetImage(textureName)
    UI:setViewTexture(works.picUrl, self:child("WorksPreview-Image"))
    self:child("WorksPreview-Edit"):SetVisible(works.userId == Me.platformUserId and works.isPublish ~= 1)
end

function M:onClose()
    UI:openWnd("toolbar")
end

function M:initMain()

    self:subscribe(self:child("WorksPreview-Back"), UIEvent.EventButtonClick, function()
        self:onClick(ViewId.BACK)
    end)

    self:subscribe(self:child("WorksPreview-Edit"), UIEvent.EventButtonClick, function()
        self:onClick(ViewId.EDIT)
    end)

    self:subscribe(self:child("WorksPreview-MsgBoard"), UIEvent.EventButtonClick, function()
        self:onClick(ViewId.MSG_BOARD)
    end)

    self:subscribe(self:child("WorksPreview-Share"), UIEvent.EventButtonClick, function()
        self:onClick(ViewId.SHARE)
    end)

    local config = Lib.readGameJson("palette_config.json").Sketchpad
    local rows =  config.rows
    local columns =  config.columns
    local view = self:child("WorksPreview-Canvas")
    local x = view:GetPixelSize().x - 30
    local y = view:GetPixelSize().y - 30
    local blockWidth = math.floor(x / rows)
    local blockHeight = math.floor(y / columns)
    local minWidth =  math.min(blockWidth, blockHeight)
    view:SetArea( { 0, 0 }, { 0, 0 }, { 0, minWidth * rows + 30 }, { 0, minWidth * columns + 30})

end

function M:onClick(viewId)
    if viewId == ViewId.BACK then
        UI:closeWnd(self)
    end

    if viewId == ViewId.MSG_BOARD and self.works.graffitiId ~= nil then
        UI:openWnd("msgBoard", self.works.graffitiId or 1)
    end

    if viewId == ViewId.EDIT and self.works.graffitiId ~= nil then
        UI:closeWnd(self)
        UI:openWnd("palette", self.works)
    end

    if viewId == ViewId.SHARE then
        local texture = UI:getViewTexture(self.works.picUrl)
        if not texture then
            return
        end

        GUISystem.instance:GetRootWindow():SetVisible(false)
        Me:timer(3 * 20, function ()
            GUISystem.instance:GetRootWindow():SetVisible(true)
            return false
        end)

        local fileName = "works_" .. tostring(Me.platformUserId) .. "_" .. tostring(os.time()) .. ".png"
        local savePath = Root.Instance():getWriteablePath() .. fileName
        if texture:toPng(savePath) then
            CGame.instance:onAppActionTrigger(8, savePath)
        end
    end
end

return M