---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/4/7 15:56
---
local TeamRewardConfig = T(Config, "TeamRewardConfig")
local class = require"common.class"
local ProcessTeam = class("ProcessTeam", require"script_server.process.process_base")
local teamCountList = {}
local playerInfoList = {}
local worldCfg = World.cfg
local winner = Define.Team.Neutrality

function ProcessTeam:ctor(config)
    if config then
        for k, v in pairs(config) do
            self[k] = v
        end
    end
    return self
end

function ProcessTeam:initProcess()
    if not worldCfg.team then
        self:processOver()
        return
    end
    for _, info in pairs(worldCfg.team) do
        if info.id ~= Define.Team.Neutrality and not teamCountList[info.id] then
            teamCountList[info.id] = {
                playerCount = 0,
                kills = 0
            }
        end
    end
    --发送邀请提示
    WorldServer.BroadcastPacket({
        pid = "ShowGauntlet",
        isShow = true,
        key = self.key
    })
end

function ProcessTeam:onWaitingEnd()
    WorldServer.BroadcastPacket({
        pid = "ShowGauntlet",
        isShow = false
    })
end

function ProcessTeam:processOver()
    self:countTeamKills()
    if self:doFinalJudge() then
        self.processOverTick = self.curTick
        self:setState(Define.ProcessState.ProcessOver)
        self:onProcessOver()
    end
end

function ProcessTeam:doFinalJudge()
    local maxKill = 0
    for id, info in pairs(teamCountList) do
        if info.kills > maxKill then
            winner = id
        end
    end
    return true
end

function ProcessTeam:countTeamKills()
    for objID, info in pairs(playerInfoList) do
        if not info.isDead then
            local player = World.CurWorld:getEntity(objID)
            if not player then
                return
            end
            info.kills = player:getTeamKills() - info.oldKills
        end
        teamCountList[info.team].kills = teamCountList[info.team].kills + info.kills
    end
end

function ProcessTeam:onProcessOver()
    self:doReward()
    Game.onActivityFinish(self.id)
end

function ProcessTeam:doReward()
    for objID, v in pairs(playerInfoList) do
        local player = World.CurWorld:getEntity(objID)
        if player and not v.isDead then
            if v.team == winner then
                ---胜利动画
            end
            local reward = TeamRewardConfig:getRewardByKills(v.kills)
            player:doReward(reward)
        end
    end
end

function ProcessTeam:needKeepWaiting()
    return self.playerCount == Game.GetAllPlayersCount()
end

function ProcessTeam:doJudge()
    local surviveTeam = 0
    for id, info in pairs(teamCountList) do
        if info.playerCount > 0 then
            surviveTeam = surviveTeam + 1
            winner = id
        end
    end
    if surviveTeam == 1 then
        self:processOver()
    end
end

function ProcessTeam:onEntityJoin(objID)
    local player = self.entityList[objID]
    if not player then
        return
    end
    local teamId = player:getTeamId()
    if not teamCountList[teamId] then
        return
    end
    teamCountList[teamId].playerCount = teamCountList[teamId].playerCount + 1
    self:transferIn(objID)
end

function ProcessTeam:transferIn(objID)
    local player = self.entityList[objID]
    if not player then
        return
    end
    --传送，记录坐标
    if not playerInfoList[objID] then
        playerInfoList[objID] =
        {
            map = worldCfg.defaultMap,
            pos = worldCfg.initPos,
            kills = 0,
            isDead = false,
            oldKills = 0,
            team = 0
        }
    end
    playerInfoList[objID].map = player.map
    playerInfoList[objID].pos = player:getPosition()
    playerInfoList[objID].oldKills = player:getTeamKills()
    playerInfoList[objID].team = player:getTeamId()
    ---传送
end

function ProcessTeam:onEntityOut(objID)
    if not playerInfoList[objID] then
        return
    end
    local teamId = playerInfoList[objID].team
    teamCountList[teamId].playerCount = teamCountList[teamId].playerCount - 1
    self:transferOut(objID)
end

function ProcessTeam:transferOut(objID)
    local player = World.CurWorld:getEntity(objID)
    local map = playerInfoList[objID].map
    local pos = playerInfoList[objID].pos
    playerInfoList[objID].isDead =  true
    if not player then
        return
    end
    if self:isProcessRunning() then
        playerInfoList[objID].kills = player:getTeamKills() - playerInfoList[objID].oldKills
        --doPlayerReward
    end
    player:setMapPos(map, pos, 0, 0, true)
end

return ProcessTeam
