---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by JY-032.
--- DateTime: 2020/3/29 18:40
---
local teamShopConfig = T(Config, "teamShopConfig")
---initTab类型
local TabTeamKind = {
    TeamSkill = 1, --技能
    TeamSkin = 2, --阵营皮肤
}
---物品的状态
local ItemStatus = {
    Buy = 1, --购买
    Used = 2, --已购买   装备
    Using = 3, --使用中   卸载
}

function M:init()
    print("!!!init ---- CampStore")
    WinBase.init(self, "CampStore.json", false)
    local toolBar = UI:getWnd("toolbar")
    toolBar:root():SetAlwaysOnTop(true)
    toolBar:root():SetLevel(2)

    self:initTabsConfig()
    self:initItemConfig()
    self.tabList = {}--tab列表
    self.allItems = {}
    self.selectTab = TabTeamKind.TeamSkill--选中的tab类型
    self.btnClose = self:child("CampStore-Close-Button")
    self.tvTitleName = self:child("CampStore-Title")

    self.lvContentTabList = self:child("CampStore-tab-list")
    self.ivContentBg = self:child("CampStore-Content-Bg")

    self.ivCampStoreBg = self:child("CampStore-Store-Bg")
    self.ivTagIcon = self:child("CampStore-tag")
    self.ivPlatformIcon = self:child("CampStore-Platform")
    self.ivPersonIcon = self:child("CampStore-person")
    self.ivUnderframe = self:child("CampStore-Underframe")
    self.ivUnderframe1 = self:child("CampStore-underframe2")
    self.ivContentBg = self:child("CampStore-Content-Bg")

    self.llSkillGrid = self:child("CampStore-Content-Skill")
    self.llContentGrid = self:child("CampStore-Content")

    self.llContentGrid:InitConfig(16, 20, 4)
    self.tvTitleName:SetText(Lang:toText("camp_store_white_title"))

    self:initTabList()
    self:subscribe(self.btnClose, UIEvent.EventButtonClick, function()
        self:hide()
    end)

end

function M:upDateItem(packet)
    local Data
    if packet == nil then

        local TeamSkin = Me:getOwnTeamSkin()
        print("---TeamSkin---" .. Lib.v2s(TeamSkin))
        if TeamSkin ~= nil then
            for _, value in pairs(TeamSkin) do
                self.Skins[value.id].status = ItemStatus.Used
            end
        end

        local EquipTeamSkin = Me:getTeamSkinId()
        print("---EquipTeamSkin---" .. Lib.v2s(EquipTeamSkin))
        if EquipTeamSkin ~= nil then
            for _, value in pairs(EquipTeamSkin) do
                self.Skins[value.id].status = ItemStatus.Using
            end
        end
    else
        Data = packet.Data
        for i, Value in pairs(Data) do
            self.Skins[Value.id].status = Value.status
        end
    end

    self:addItemsSkinPanel()
end

function M:initBlackUI()
    self.ivCampStoreBg:SetImage("set:camp_store.json image:blue_bg")
    self.ivTagIcon:SetImage("set:camp_store.json image:tag_left")
    self.ivPlatformIcon:SetArea({ -0.814273, 0 }, { -0.0414079, 0 }, { 0.21226, 0 }, { 0.267081, 0 })
    self.ivPersonIcon:SetArea({ -0.25, 0 }, { -0.953488, 0 }, { 0.818965, 0 }, { 2.7907, 0 })
    self.ivUnderframe:SetArea({ 0.0365965, 0 }, { 0, 0 }, { 1, 0 }, { 1, 0 })
    self.ivUnderframe1:SetArea({ -0.084172, 0 }, { 0, 0 }, { 1, 0 }, { 0.0455487, 0 })
    self.ivTagIcon:SetArea({ 0.846295, 0 }, { 0.0455487, 0 }, { 0.129918, 0 }, { 0.915114, 0 })
    self.lvContentTabList:SetArea({ 0.352113, 0 }, { 0.0791855, 0 }, { 0.612676, 0 }, { 0.617647, 0 })
    self.ivContentBg:SetArea({ 0.178408, 0 }, { 0.0455487, 0 }, { 0.668801, 0 }, { 0.908903, 0 })

    self.ivPersonIcon:SetImage("set:camp_store.json image:person_white")
    --self.ivPlatformIcon:SetImage("set:camp_store.json image:tag_left")

end

function M:onClickTab(id, type)
    print("-----onClickTab------" .. id)
    for _, shopTab in pairs(self.tabList) do
        shopTab:invoke("onCheckClick", id, type)
    end
    if self.selectTab ~= type then
        self.selectTab = type
        self:addItemsGridView(type)
    end
end

function M:onClickItem(id)
    print("---self.itemId----" .. id)
    for _, Item in pairs(self.allItems) do
        Item:invoke("onClickItem", id)
    end
end

function M:addItemsGridView(type)
    if type == TabTeamKind.TeamSkill then
        self:addItemsSkillPanel()
    elseif type == TabTeamKind.TeamSkin then
        self:addItemsSkinPanel()
    end
end

function M:addItemsSkinPanel()
    self.llContentGrid:SetMoveAble(true)
    self.llContentGrid:InitConfig(16, 20, 4)
    self.llContentGrid:RemoveAllItems()
    self.llSkillGrid:RemoveAllItems()
    self.ivContentBg:SetImage("set:camp_store.json image:color_lump1")
    local i = 1
    for _, config in pairs(self.Skins) do
        local SkinPanel = UIMgr:new_widget("teamShopItems")
        local contentWidth = self.llContentGrid:GetPixelSize().x
        local contentHeight = self.llContentGrid:GetPixelSize().y
        local itemWidth = (contentWidth - 172) / 4
        local itemHeight = (contentHeight - 44) / 2.2

        self.allItems[i] = SkinPanel
        SkinPanel:invoke("setItemData", config.id, config.icon, config.price, config.status)
        SkinPanel:SetArea({ 0, 0 }, { 0, 0 }, { 0, itemWidth }, { 0, 181 })
        self:subscribe(SkinPanel, UIEvent.EventWindowClick, function()
            self:onClickItem(config.id)
        end)
        self.llContentGrid:AddItem(SkinPanel)
        i = i + 1
    end
end

function M:addItemsSkillPanel()
    print("--- ---addItemsSkillPanel-----")

    self.llSkillGrid:SetMoveAble(false)
    self.llContentGrid:RemoveAllItems()
    self.llSkillGrid:RemoveAllItems()
    local SkillPanel = UIMgr:new_widget("teamShopSkillPanel")

    --todo 后端拿数据 显示技能界面的
    local skillIcon = "set:LiftingSimulatorShop1.json image:tabBg1"
    local skillName = ""
    local Attack = 10
    local Blood = 20
    local RightLv = 3
    local LeftLv = 4
    local CurProgress = 20
    local MaxProgress = 100
    SkillPanel:invoke("initSkillInfo", skillIcon, skillName, Attack, Blood, RightLv, LeftLv, CurProgress, MaxProgress)
    self.llSkillGrid:AddItem(SkillPanel)
end

function M:initItemConfig()
    self.Skins = teamShopConfig:getItems()
end

function M:initTabsConfig()
    print("--------initTabsConfig------")
    self.Tabs = {}
    --local temp = Lib.readGameCsv("CampShopTab.csv") or {}
    local temp = Lib.read_csv_file(Root.Instance():getGamePath() .. "config/teamShopTab.csv", 3)
    for _, config in pairs(temp) do
        local data = {
            id = tonumber(config.n_id),
            type = tonumber(config.n_type),
            icon = config.s_icon,
            name = config.s_name,
        }
        self.Tabs[data.id] = data
    end
end

function M:initTabList()
    local i = 1
    for _, Value in pairs(self.Tabs) do
        --local shopTab = GUIWindowManager.instance:LoadWindowFromJSON("CampStoreTab.json")
        local shopTab = UIMgr:new_widget("teamShopTab")
        self.tabList[i] = shopTab
        local strBg = "set:LiftingSimulatorShop1.json image:tabBg1"
        local strIcon = Value.icon
        shopTab:invoke("initTab", Value.id, Value.type, strBg, strIcon, Value.name)
        shopTab:SetArea({ 0, 0 }, { 0, 0 }, { 0, 87 }, { 0, 87 })
        self:subscribe(shopTab, UIEvent.EventWindowClick, function()
            self:onClickTab(Value.id, Value.type)
        end)
        self.lvContentTabList:AddItem(shopTab)
        i = i + 1
    end
    --将第一个Tab设置为选中状态
    if #self.tabList >= 1 then
        --加图集
        local strBg = "set:camp_store.json image:tag_skill_selected"
        self.tabList[1]:invoke("changeSelectStatus", strBg, 1)
        self:addItemsGridView(1)
        self.selectTab = TabTeamKind.TeamSkill
    end
end

function M:onShow(show)
    if show then
        UI:openWnd("teamShop",true)
        self:show(true)
    else
        self:hide()
        UI:closeWnd("teamShop")
    end
end

function M:onOpen()
    --self:addItemsGridView(TabTeamKind.CampSkill)
end

function M:onClose()

end

return M