---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by KH5C.
--- DateTime: 2020/4/14 11:01
---
local petType = T(Define, "petType");

local curPetPageTable = {}
local curPlusPetPageTable = {}
local curPage = 1       --1 PetPage 2 PlusPetPage

local curPlusPetItemTable = {}
local curPlusPetSelItemIndex = -1
local curPetItemTable = {}
local plusPetFoldTable = {}
local plusPetHadID = {} --记录当前玩家打开背包时所拥有的式神（主式神ID）

local curPlusPetFold = 0--1 All 2 Atk 3 Def 4 Gain
local plusPetFoldOpen = false
local foldArea = {};

local player = nil

function M:init()
    WinBase.init(self, "NinjaPetPackage.json", false)
    self:initWnd()
end

function M:showPlusPetFoldSel(show)
    if show then
        self:child("NinjaPetPackage-PlusPetFoldBtnDown"):SetVisible(false)
        self:child("NinjaPetPackage-PlusPetFoldBtnUp"):SetVisible(true)
        self.plusPetLayout.plusPetFoldBg:SetVisible(true)
        self:child("NinjaPetPackage-PlusPetItemLayout"):SetBackgroundColor({0,0,0,0.3})

    else
        self:child("NinjaPetPackage-PlusPetFoldBtnDown"):SetVisible(true)
        self:child("NinjaPetPackage-PlusPetFoldBtnUp"):SetVisible(false)
        self.plusPetLayout.plusPetFoldBg:SetVisible(false)
        self:child("NinjaPetPackage-PlusPetItemLayout"):SetBackgroundColor({0,0,0,0})
    end
    plusPetFoldOpen = show
end

function M:showPetInterface()
    self.selSwitchImage.petSel:SetVisible(true)
    self.selSwitchImage.petUnSel:SetVisible(false)
    self.selSwitchImage.pPetUnSel:SetVisible(true)
    self.selSwitchImage.pPetSel:SetVisible(false)

    self.mainLayout.petLayout:SetVisible(true)
    self.mainLayout.plusPetLayout:SetVisible(false)
    curPage = 1
    self:setPetItem()
end

function M:showPlusPetInterface()
    self.selSwitchImage.petSel:SetVisible(false)
    self.selSwitchImage.petUnSel:SetVisible(true)
    self.selSwitchImage.pPetUnSel:SetVisible(false)
    self.selSwitchImage.pPetSel:SetVisible(true)
    self:setPlusPetItem()
    self:setPlusPetItemSel(1)
    self.mainLayout.petLayout:SetVisible(false)
    self.mainLayout.plusPetLayout:SetVisible(true)

    self:setPlusPetFoldCurFold(1)
    curPage = 2
end

function M:setPlusPetFoldCurFold(index)
    self:showPlusPetFoldSel(false)
    if index == curPlusPetFold then
        return
    end
    self.plusPetLayoutText.plusPetFoldCur:SetText(plusPetFoldTable[index].text:GetText())
    if curPlusPetFold ~= 0 then
        plusPetFoldTable[curPlusPetFold].bg.sel:SetVisible(false)
        plusPetFoldTable[curPlusPetFold].bg.unsel:SetVisible(true)
    end
    plusPetFoldTable[index].bg.sel:SetVisible(true)
    plusPetFoldTable[index].bg.unsel:SetVisible(false)
    curPlusPetFold = index
end

function M:setPlusPetDetail(index)
    local tempData = curPlusPetItemTable[index]
    local plusPetData;
    if tempData.had == false then
        plusPetData = Player.getPetCfg(petType.plusPet, tempData.index)
        if not plusPetData then
            print("================get plus pet data wrong!!! =================")
            return
        end
        self.plusPetLayoutText.plusPetLevelNu:SetText("Lv.???")
        self.plusPetLayoutText.plusPetDefNu:SetText("???")
    else
        if not plusPetData then
            print("================get plus pet data wrong!!! =================")
            return
        end
        plusPetData = Player:getPetAttr(tempData.index)
        self.plusPetLayoutText.plusPetLevelNu:SetText("Lv." .. tostring(plusPetData.level))
        self.plusPetLayoutText.plusPetDefNu:SetText(tostring(plusPetData * 100) .. "%")
    end

    self.plusPetLayout.plusPetActor:SetActor1(plusPetData.actorName)
    self.plusPetLayoutText.plusPetName:SetText(plusPetData.multiLang)
    self.plusPetLayout.plusPetQuality:SetImage("set:ninja_pet.json image:quality-" .. tostring(plusPetData.rank))
    self.plusPetLayout.plusPetSkillTypeIcon:SetImage("set:ninja_pluspet.json image:skilltype-" .. tostring(plusPetData.skillType))
    self.plusPetLayoutText.plusPetSkillInfo:SetText(plusPetData.skillInfo)
end

function M:setPlusPetItemSel(index)
    if index == curPlusPetSelItemIndex then
        return
    end
    if curPlusPetSelItemIndex ~= -1 then
        print("===============Unsel Call ===================")
        curPlusPetItemTable[curPlusPetSelItemIndex].item:invoke("unsel")
    end
    curPlusPetItemTable[index].item:invoke("sel")
    curPlusPetSelItemIndex = index
    self:setPlusPetDetail(index)
end

-- Todo 显示PlusPetPage时，在设置完item后检测装备情况

function M:setPlusPetItemEquip(index)

end

function M:_setPlusPetItem(had, v)
    local itemBroadInfo = {
        width = (self.plusPetLayout.plusPetItem:GetPixelSize().x - 10) / 2
    }
    itemBroadInfo.height = itemBroadInfo.width
    local plusPetIcon = UIMgr:new_widget("petPackagePlusPetItem")
    plusPetIcon:SetArea({ 0, 0 }, { 0, 0 }, { 0, itemBroadInfo.width }, { 0, itemBroadInfo.height })
    plusPetIcon:invoke("initShow", v.ID, v.rank, had, v.level)
    table.insert(curPlusPetItemTable,{index = v.k, had = had, item = plusPetIcon})      -- index为式神index，和式神主id（当had为false时）
    self.plusPetLayout.plusPetItem:AddItem(plusPetIcon)
end

function M:setUnlockPlusPetItem()
    for k, v in pairs(curPlusPetPageTable) do
        self:_setPlusPetItem(true, {ID = v.ID, rank = v.rank, level = v.level, k = k})
    end
end

function M:setLockPlusPetItem()
    for i = 1,Define.plusPetNu do
        if plusPetHadID[i].had == false then
            local cfg = Entity.GetCfg(Player.turnID2Plugin(Define.petType.plusPet, plusPetHadID[i].ID, 0))
            self:_setPlusPetItem(false, {ID = plusPetHadID[i].ID, rank = cfg.rank, k = plusPetHadID[i].ID, })
        end
    end
end

function M:setPlusPetItem()
    self.plusPetLayout.plusPetItem:SetMoveAble(true)
    self.plusPetLayout.plusPetItem:RemoveAllItems()
    self:setUnlockPlusPetItem()
    self:setLockPlusPetItem()
    for k, v in pairs(curPlusPetItemTable) do
        self:subscribe(v.item, UIEvent.EventWindowClick, function()
            self:setPlusPetItemSel(k)
        end)
    end
end

function M:setPetItem()

end

function M:setPetDetail(index)              --通过index拿到所有配置信息

end

function M:refreshPageInfo()

end

local function petListSort(itemA, itemB)
    if itemA.rank > itemB.rank then             --品质越高的越靠前
        return true
    end
    if itemA.rank < itemB.rank then
        return false
    end
    if itemA.level > itemB.level then           --等级越高的越靠前
        return true
    end
    if itemA.level < itemB.level then
        return false
    end
    if itemA.orderWeight > itemB.orderWeight then --顺序值越高的越靠前
        return true
    end
    return false
end

local function plusPetLockSort(itemA, itemB)
    local cfgA = Player.getPetCfg(petType.plusPet, itemA.ID)
    local cfgB = Player.getPetCfg(petType.plusPet, itemB.ID)
    if cfgA.rank > cfgB.rank then             --品质越高的越靠前
        return true
    end
    if cfgA.rank < cfgB.rank then
        return false
    end
    if cfgA.orderWeight > cfgB.orderWeight then --顺序值越高的越靠前
        return true
    end
    return false
end

local function getPlayerInfo()
    curPlusPetPageTable = {}
    curPetPageTable = {}
    plusPetHadID = {}
    for i = 1, Define.plusPetNu do
        table.insert(plusPetHadID, {ID = i, had = false})
    end

    if player == nil then
        player = Player.CurPlayer
    end
    for k, v in pairs(player:getValue("allPetAttr")) do
        local tempData = player:getPetAttr(k)
        if v.petType == petType.pet then
            table.insert(curPetPageTable, tempData)
        else
            table.insert(curPlusPetPageTable, tempData)
            if plusPetHadID[tempData.ID].had == false then
                print("====================",tempData.ID, type(tempData.ID))
                plusPetHadID[tempData.ID].had = true
            end
        end
    end
    table.sort(curPetPageTable, petListSort)
    table.sort(curPlusPetPageTable, petListSort)
    table.sort(plusPetHadID, plusPetLockSort)
end

function M:_openPetPackage()
    getPlayerInfo()
    self:showPetInterface()
end

function M:openPetPackage()
    UI:openWnd("petPackage")
    self:_openPetPackage()
end


function M:setPetAllText()
    self.selSwitchText.petSel:SetText(Lang:toText("PetPackage-Pet"))
    self.selSwitchText.petUnSel:SetText(Lang:toText("PetPackage-Pet"))
    self.selSwitchText.plusPetSel:SetText(Lang:toText("PetPackage-PlusPet"))
    self.selSwitchText.plusPetUnSel:SetText(Lang:toText("PetPackage-PlusPet"))

    self.petLayoutText.slotsText:SetText(Lang:toText("PetPackage-Slots"))
    self.petLayoutText.addChiText:SetText(Lang:toText("PetPackage-Total"))
    self.petLayoutText.addCoinText:SetText(Lang:toText("PetPackage-Total"))
    self.petLayoutText.addFuText:SetText(Lang:toText("PetPackage-Total"))

    self.petLayoutText.petTittleText:SetText(Lang:toText("PetPackage-PetPageTittle"))
    self.petLayoutText.petPageText:SetText(Lang:toText("PetPackage-PetPageInfo"))

    self.petLayoutText.petInfo.petEvolutionText:SetText(Lang:toText("PetPackage-Evolution"))
    self.petLayoutText.petInfo.petSellText:SetText(Lang:toText("PetPackage-Sell"))

    self.petLayoutText.petInfo.petAddChiText:SetText(Lang:toText("PetPackage-Chi"))
    self.petLayoutText.petInfo.petAddCoinText:SetText(Lang:toText("PetPackage-Coin"))
    self.petLayoutText.petInfo.petAddFuText:SetText(Lang:toText("PetPackage-Fu"))

    self.petLayoutText.petInfo.petEquipText:SetText(Lang:toText("PetPackage-Equip"))

    self.plusPetLayoutText.plusPetFoldSelAll:SetText(Lang:toText("PetPackage-All"))
    self.plusPetLayoutText.plusPetFoldSelGain:SetText(Lang:toText("PetPackage-Gain"))
    self.plusPetLayoutText.plusPetFoldSelAtk:SetText(Lang:toText("PetPackage-Atk"))
    self.plusPetLayoutText.plusPetFoldSelDef:SetText(Lang:toText("PetPackage-Def"))

    self.plusPetLayoutText.plusPetAccess:SetText(Lang:toText("PetPackage-Access"))
    self.plusPetLayoutText.plusPetQuality:SetText(Lang:toText("PetPackage-PetQuality"))
    self.plusPetLayoutText.plusPetAtk:SetText(Lang:toText("PetPackage-PetAtk"))
    self.plusPetLayoutText.plusPetDef:SetText(Lang:toText("PetPackage-PetDef"))
    self.plusPetLayoutText.plusPetLevel:SetText(Lang:toText("PetPackage-PetLevel"))
    self.plusPetLayoutText.plusPetEquipBtn:SetText(Lang:toText("PetPackage-Equip"))
    self.plusPetLayoutText.plusPetStrBtn:SetText(Lang:toText("PetPackage-PlusStr"))
    self.plusPetLayoutText.plusPetStrBtn:SetText(Lang:toText("PetPackage-PlusStr"))

end

function M:initPetAllEvent()
    self:subscribe(self.closeBtn, UIEvent.EventButtonClick, function()
        UI:closeWnd("petPackage")
    end)
    self:subscribe(self.selSwitchBtn.petBtn, UIEvent.EventButtonClick, function()
        if curPage ~= 1 then
            self:showPetInterface()
        end
    end)
    self:subscribe(self.selSwitchBtn.pPetBtn, UIEvent.EventButtonClick, function()
        if curPage ~= 2 then
            self:showPlusPetInterface()
        end
    end)
    self:subscribe(self.plusPetBtn.plusPetFoldBtn, UIEvent.EventButtonClick, function()
        self:showPlusPetFoldSel(not plusPetFoldOpen)
    end)
    self:subscribe(self.plusPetBtn.plusPetFoldSelAll, UIEvent.EventButtonClick, function()
        self:setPlusPetFoldCurFold(1)
    end)
    ---[[
    self:subscribe(self.plusPetBtn.plusPetFoldSelAtk, UIEvent.EventButtonClick, function()
        self:setPlusPetFoldCurFold(2)
    end)
    self:subscribe(self.plusPetBtn.plusPetFoldSelDef, UIEvent.EventButtonClick, function()
        self:setPlusPetFoldCurFold(3)
    end)
    self:subscribe(self.plusPetBtn.plusPetFoldSelGain, UIEvent.EventButtonClick, function()
        self:setPlusPetFoldCurFold(4)
    end)--]]
end

function M:initWnd()
    self.closeBtn = self:child("NinjaPetPackage-CloseBtnBt")
    self.selSwitchText = {
        petUnSel = self:child("NinjaPetPackage-PetUSelText"),
        petSel = self:child("NinjaPetPackage-PetSelText"),
        plusPetUnSel = self:child("NinjaPetPackage-PPetUSelText"),
        plusPetSel = self:child("NinjaPetPackage-PPetSelText")
    }
    self.selSwitchBtn = {
        petBtn = self:child("NinjaPetPackage-PetSelBtn"),
        pPetBtn = self:child("NinjaPetPackage-PPetSelBtn")
    }
    self.selSwitchImage = {
        petUnSel = self:child("NinjaPetPackage-PUSel"),
        petSel = self:child("NinjaPetPackage-PSel"),
        pPetUnSel = self:child("NinjaPetPackage-PPUSel"),
        pPetSel = self:child("NinjaPetPackage-PPSel")
    }
    self.mainLayout = {
        petLayout = self:child("NinjaPetPackage-NinjaPetInfoLayout"),
        plusPetLayout = self:child("NinjaPetPackage-NinjaPlusPetInfoLayout")
    }


    self.petLayoutText = {
        slotsText = self:child("NinjaPetPackage-PetSlotsInfo"),
        addCoinText = self:child("NinjaPetPackage-PetAddInfoCoinText"),
        addFuText = self:child("NinjaPetPackage-PetAddInfoFuText"),
        addChiText = self:child("NinjaPetPackage-PetAddInfoChiText"),
        petTittleText = self:child("NinjaPetPackage-PetPageTittleText"),
        petPageText = self:child("NinjaPetPackage-PetPageBottomText"),
        petInfo = {
            petLevel = self:child("NinjaPetPackage-PetDetailLevel"),
            petName = self:child("NinjaPetPackage-PetDetailName"),
            petEvolutionText = self:child("NinjaPetPackage-PetUpGradeText"),
            petSellText = self:child("NinjaPetPackage-PetSellText"),
            petAddCoinText = self:child("NinjaPetPackage-PetDetailCoinText"),
            petAddFuText = self:child("NinjaPetPackage-PetDetailFuText"),
            petAddChiText = self:child("NinjaPetPackage-PetDetailChiText"),
            petEquipText = self:child("NinjaPetPackage-PetDetailEquipText")
        }
    }
    self.plusPetLayoutText = {
        plusPetFoldCur = self:child("NinjaPetPackage-PlusPetFoldAllText"),
        plusPetFoldSelAll = self:child("NinjaPetPackage-PlusPetFoldSelAllText"),
        plusPetFoldSelAtk = self:child("NinjaPetPackage-PlusPetFoldSelAtkText"),
        plusPetFoldSelDef = self:child("NinjaPetPackage-PlusPetFoldSelDefText"),
        plusPetFoldSelGain = self:child("NinjaPetPackage-PlusPetFoldSelGainText"),
        plusPetAccess = self:child("NinjaPetPackage-PlusPetAccessText"),
        plusPetName = self:child("NinjaPetPackage-PlusPetName"),
        plusPetQuality = self:child("NinjaPetPackage-PlusPetQuaText"),
        plusPetLevel = self:child("NinjaPetPackage-PlusPetInfoLevelTextTimes"),
        plusPetLevelNu = self:child("NinjaPetPackage-PlusPetInfoLevelTextTimesNu"),
        plusPetAtk = self:child("NinjaPetPackage-PlusPetInfoLevelTextAtk"),
        plusPetAtkNu = self:child("NinjaPetPackage-PlusPetInfoLevelTextAtkNu"),
        plusPetDef = self:child("NinjaPetPackage-PlusPetInfoLevelTextDef"),
        plusPetDefNu = self:child("NinjaPetPackage-PlusPetInfoLevelTextDefNu"),
        plusPetSkillInfo = self:child("NinjaPetPackage-PlusPetSkillInfo"),
        plusPetEquipBtn = self:child("NinjaPetPackage-PlusPetInfoEquipBtnText"),
        plusPetStrBtn = self:child("NinjaPetPackage-PlusPetInfoStrBtnText")
    }

    self.petBtn = {
        petPagePrev = self:child("NinjaPetPackage-PetPagePrev"),
        petPageNext = self:child("NinjaPetPackage-PetPageNext"),
        petPageAdd = self:child("NinjaPetPackage-PetPageAddPage"),
        petEvolution = self:child("NinjaPetPackage-PetUpGradeBtnIns"),
        petSell = self:child("NinjaPetPackage-PetSellBtnIns"),
        petEquip = self:child("NinjaPetPackage-PetDetailEquipBtn")
    }
    self.plusPetBtn = {
        plusPetFoldBtn = self:child("NinjaPetPackage-PlusPetFoldBtn"),
        plusPetFoldSelAll = self:child("NinjaPetPackage-PlusPetFoldSelAllBtn"),
        plusPetFoldSelAtk = self:child("NinjaPetPackage-PlusPetFoldSelAtkBtn"),
        plusPetFoldSelDef = self:child("NinjaPetPackage-PlusPetFoldSelDefBtn"),
        plusPetFoldSelGain = self:child("NinjaPetPackage-PlusPetFoldSelGainBtn"),
        plusPetAccess = self:child("NinjaPetPackage-PlusPetAccessBtn"),
        plusPetEquip = self:child("NinjaPetPackage-PlusPetInfoEquipBtnBt"),
        plusPetStr = self:child("NinjaPetPackage-PlusPetInfoStrBtnBt")
    }

    self.petLayout = {
        petItems = self:child("NinjaPetPackage-PetPageMainView"),
        petImage = self:child("NinjaPetPackage-PetDetailImg"),
        petQuality = self:child("NinjaPetPackage-PetDetailQuality")
    }
    self.petLayout.petItems:InitConfig(20, 20, 4)       --item 110 * 110
    self.plusPetLayout = {
        plusPetFoldBg = self:child("NinjaPetPackage-PlusPetFoldSelBg"),
        plusPetItem = self:child("NinjaPetPackage-PlusPetItemGrid"),
        plusPetActor = self:child("NinjaPetPackage-PlusPetExhibition"),
        plusPetSkillTypeIcon = self:child("NinjaPetPackage-PlusPetSkillTypeImg"),
        plusPetQuality = self:child("NinjaPetPackage-PlusPetQuaImage")
    }
    self.plusPetLayout.plusPetItem:InitConfig(10, 10, 2) --item 77 * 77
    plusPetFoldTable[1] = {
        text = self.plusPetLayoutText.plusPetFoldSelAll,
        bg = {
            sel = self:child("NinjaPetPackage-PlusPetFoldAllSel"),
            unsel = self:child("NinjaPetPackage-PlusPetFoldAllUnSel")
        }
    }
    plusPetFoldTable[3] = {
        text = self.plusPetLayoutText.plusPetFoldSelDef,
        bg = {
            sel = self:child("NinjaPetPackage-PlusPetFoldDefSel"),
            unsel = self:child("NinjaPetPackage-PlusPetFoldDefUnSel")
        }
    }
    plusPetFoldTable[2] = {
        text = self.plusPetLayoutText.plusPetFoldSelAtk,
        bg = {
            sel = self:child("NinjaPetPackage-PlusPetFoldAtkSel"),
            unsel = self:child("NinjaPetPackage-PlusPetFoldAtkUnSel")
        }
    }
    plusPetFoldTable[4] = {
        text = self.plusPetLayoutText.plusPetFoldSelGain,
        bg = {
            sel = self:child("NinjaPetPackage-PlusPetFoldGainSel"),
            unsel = self:child("NinjaPetPackage-PlusPetFoldGainUnSel")
        }
    }
    self:setPetAllText()
    self:initPetAllEvent()
end

return M;