---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by KH5C.
--- DateTime: 2020/4/21 10:00
---

local curItemTable = {}
local curPlusPetPageTable = {}
local curEvolutionIconStatus = {}
local plusPetFoldTable = {}
local curPlusPetFold = -1
local plusPetFoldOpen = false

local widthPadding = 15
local heightPadding = 15
local columnNu = 2

local petType = T(Define, "petType");


function M:init()
    WinBase.init(self, "NinjaPlusPetEvolution.json",false)
    self:initWnd()
    self:initAllText()
    self:initAllEvent()
end

function M:initWnd()
    self.texts = {
        strBtnText = self:child("PetEvolution-StrongText"),
        coinInterval = self:child("PetEvolution-AddName"),
        fuInterval = self:child("PetEvolution-AddNu")
    }
    self.mainView = self:child("PetEvolution-PetList")
    self.strBtn = self:child("PetEvolution-Strong")
    self.evolutionTargetImg = self:child("PetEvolution-TargetImg")         -- 强化目标不会被移去
    self.evolutionImg = {
        [1] = self:child("PetEvolution-Material1Img"),
        [2] = self:child("PetEvolution-Material2Img"),
        [3] = self:child("PetEvolution-Material3Img"),
        [4] = self:child("PetEvolution-Material4Img"),
        [5] = self:child("PetEvolution-Material5Img")
    }
    self.mainView:InitConfig(widthPadding, heightPadding, columnNu)
    self.closeBtn = self:child("PetEvolution-close")
    self.foldBtn =  self:child("NinjaPetPackage-PlusPetFoldBtn")
    self.foldSelAllBtn = self:child("NinjaPetPackage-PlusPetFoldSelAllBtn")
    self.foldSelAtkBtn = self:child("NinjaPetPackage-PlusPetFoldSelAtkBtn")
    self.foldSelDefBtn = self:child("NinjaPetPackage-PlusPetFoldSelDefBtn")
    self.foldSelGainBtn = self:child("NinjaPetPackage-PlusPetFoldSelGainBtn")
    self.foldCurText = self:child("NinjaPetPackage-PlusPetFoldAllText")
    self.foldSelAll = self:child("NinjaPetPackage-PlusPetFoldSelAllText")
    self.foldSelAtk = self:child("NinjaPetPackage-PlusPetFoldSelAtkText")
    self.foldSelDef = self:child("NinjaPetPackage-PlusPetFoldSelDefText")
    self.foldSelGain = self:child("NinjaPetPackage-PlusPetFoldSelGainText")

    plusPetFoldTable[0] = {
        text = self.plusPetLayoutText.plusPetFoldSelAll,
        bg = {
            sel = self:child("NinjaPetPackage-PlusPetFoldAllSel"),
            unsel = self:child("NinjaPetPackage-PlusPetFoldAllUnSel")
        }
    }
    plusPetFoldTable[Define.plusPetSkillType.def] = {
        text = self.plusPetLayoutText.plusPetFoldSelDef,
        bg = {
            sel = self:child("NinjaPetPackage-PlusPetFoldDefSel"),
            unsel = self:child("NinjaPetPackage-PlusPetFoldDefUnSel")
        }
    }
    plusPetFoldTable[Define.plusPetSkillType.atk] = {
        text = self.plusPetLayoutText.plusPetFoldSelAtk,
        bg = {
            sel = self:child("NinjaPetPackage-PlusPetFoldAtkSel"),
            unsel = self:child("NinjaPetPackage-PlusPetFoldAtkUnSel")
        }
    }
    plusPetFoldTable[Define.plusPetSkillType.gain] = {
        text = self.plusPetLayoutText.plusPetFoldSelGain,
        bg = {
            sel = self:child("NinjaPetPackage-PlusPetFoldGainSel"),
            unsel = self:child("NinjaPetPackage-PlusPetFoldGainUnSel")
        }
    }
end

function M:showPetEvolution(_curPetPageTable, _targetIndex)             --Todo
    UI:openWnd("plusPetEvolution")
    curPetPageTable = _curPetPageTable
    targetIndex = _targetIndex
    self:child("PetEvolution-StrButton"):SetVisible(false)
    local tempData = Player.CurPlayer:getPetAttr(targetIndex)
    if tempData.petType == petType.plusPet then
        print("ERROR!!!!! WRONG PET TYPE!!!! Evolution terminate!!!!!!")        --Todo 改为弹出提示框
        self:closePetEvolution()
        return
    end
    self.evolutionTargetImg:SetImage("set:ninja_pet.json image:" .. tostring(tempData.ID))
    self:setAllItems()
    self:refreshInfo()
end
local function turnItemIndex2PetIndex(index)
    if not curItemTable[index] then
        print("Error when get \"Pet Index\" : Can not find item!!  petEvolution@gui", debug.getinfo(1).currentline)
    end
    return curPetPageTable[curItemTable[index].index].index
end

function M:doEvolute()
    local packet = {
        pid = "petEvolution",
        target = targetIndex,
        materials = {}
    }
    for _, v in pairs(curEvolutionIconStatus) do
        table.insert(packet.materials, turnItemIndex2PetIndex(v.itemIndex))
    end
    Player.CurPlayer:sendPacket(packet)
end

function M:evoluteSuccess(oldIndex, newIndex)                                   --oldIndex用于数据校验
    if oldIndex ~= targetIndex then
        -- Todo 提示强化异常，并强行关闭当前窗口
        UI:closeWnd("petEvolution")
    end
    local petTable = UI:getWnd("petPackage").refreshPlayerInfo().petTable
    self:showPetEvolution(petTable, newIndex)        --调用refresh之后由于curPetPageTable为一个引用所以该表的值实际上也会变化
end

function M:closePetEvolution()
    UI:closeWnd("petEvolution")
    UI:getWnd("petPackage"):openPetPackage(targetIndex)
end

function M:showPlusPetFoldSel(show)
    if show then
        self:child("NinjaPetPackage-PlusPetFoldBtnDown"):SetVisible(false)
        self:child("NinjaPetPackage-PlusPetFoldBtnUp"):SetVisible(true)
        self.plusPetLayout.plusPetFoldBg:SetVisible(true)
        self:child("PetEvolution-BlackView"):SetBackgroundColor({0,0,0,0.3})

    else
        self:child("NinjaPetPackage-PlusPetFoldBtnDown"):SetVisible(true)
        self:child("NinjaPetPackage-PlusPetFoldBtnUp"):SetVisible(false)
        self.plusPetLayout.plusPetFoldBg:SetVisible(false)
        self:child("PetEvolution-BlackView"):SetBackgroundColor({0,0,0,0})
    end
    plusPetFoldOpen = show
end

function M:setPlusPetFoldCurFold(index)
    self:showPlusPetFoldSel(false)
    if index == curPlusPetFold then
        return
    end
    self.plusPetLayoutText.plusPetFoldCur:SetText(plusPetFoldTable[index].text:GetText())
    if curPlusPetFold ~= -1 then
        plusPetFoldTable[curPlusPetFold].bg.sel:SetVisible(false)
        plusPetFoldTable[curPlusPetFold].bg.unsel:SetVisible(true)
    end
    plusPetFoldTable[index].bg.sel:SetVisible(true)
    plusPetFoldTable[index].bg.unsel:SetVisible(false)
    curPlusPetFold = index
    self:setPlusPetItem()
    self:setPlusPetItemSel(1)
end

function M:initAllEvent()
    self:subscribe(self.closeBtn, UIEvent.EventButtonClick, function()
        self:closePetEvolution()
    end)
    self:subscribe(self.strBtn, UIEvent.EventButtonClick, function()
        self:doEvolute()
    end)
    self:subscribe(self.plusPetBtn.plusPetFoldBtn, UIEvent.EventButtonClick, function()
        self:showPlusPetFoldSel(not plusPetFoldOpen)
    end)
    self:subscribe(self.plusPetBtn.plusPetFoldSelAll, UIEvent.EventButtonClick, function()
        self:setPlusPetFoldCurFold(0)
    end)
    self:subscribe(self.plusPetBtn.plusPetFoldSelAtk, UIEvent.EventButtonClick, function()
        self:setPlusPetFoldCurFold(Define.plusPetSkillType.atk)
    end)
    self:subscribe(self.plusPetBtn.plusPetFoldSelDef, UIEvent.EventButtonClick, function()
        self:setPlusPetFoldCurFold(Define.plusPetSkillType.def)
    end)
    self:subscribe(self.plusPetBtn.plusPetFoldSelGain, UIEvent.EventButtonClick, function()
        self:setPlusPetFoldCurFold(Define.plusPetSkillType.gain)
    end)
end

function M:initAllText()
    self.texts.strBtnText:SetText(Lang:toText("PetEvolution-BeginStr"))
    self.texts.coinInterval:SetText("")
    self.texts.fuInterval:SetText("")
end

function M:refreshInfo()
    local minCoin = 0
    local maxCoin = 0
    local minFu = 0
    local maxFu = 0
    local materialNu = 0
    for _, v in pairs(curEvolutionIconStatus) do
        if v.isSet then
            local tempData = Player.CurPlayer:getPetAttr(turnItemIndex2PetIndex(v.itemIndex))
            if tempData.petType == petType.plusPet then
                print("ERROR!!!!! WRONG PET TYPE!!!! Evolution terminate!!!!!!")        --Todo 改为弹出提示框
                self:closePetEvolution()
                return
            end
            local coinIntensifyRange = Lib.split(tempData.coinIntensifyRange, "#")
            local chiIntensifyRange = Lib.split(tempData.chiIntensifyRange, "#")
            minCoin = minCoin + tonumber(coinIntensifyRange[1])
            maxCoin = maxCoin + tonumber(coinIntensifyRange[2])
            minFu = minFu + tonumber(chiIntensifyRange[1])
            maxFu = maxFu + tonumber(chiIntensifyRange[2])
            materialNu = materialNu + 1
        end
    end
    self.texts.coinInterval:SetText(tostring(minCoin) .. "%-" .. tostring(maxCoin) .. "%")
    self.texts.fuInterval:SetText(tostring(minFu) .. "%-" .. tostring(maxFu) .. "%")

    if materialNu == 3 then
        self:child("PetEvolution-StrButton"):SetVisible(true)
    else
        self:child("PetEvolution-StrButton"):SetVisible(false)
    end
end

--[[
pos:
1:强化素材1号位
2:强化素材2号位
3:强化素材3号位
--]]
function M:setPetIcon(index, pos)
    local tempData = Player.CurPlayer:getPetAttr(index)
    self.evolutionImg[pos]:SetImage("set:ninja_pet.json image:" .. tostring(tempData.ID))
end

function M:itemOnSel(index)
    local _index = turnItemIndex2PetIndex(index)
    for k, v in pairs(curEvolutionIconStatus) do
        if not v.isSet then
            curItemTable[index].item:invoke("evoSel")
            curItemTable[index].isSet = true
            curEvolutionIconStatus[k].isSet = true
            curEvolutionIconStatus[k].itemIndex = index
            self:setPetIcon(_index, k)
            self:refreshInfo()
            return
        end
    end
    -- Todo 弹出强化栏已满的提示
end

function M:itemUnSel(index)
    for k, v in pairs(curEvolutionIconStatus) do
        if v.isSet and v.itemIndex == index then
            curEvolutionIconStatus[k].isSet = false
            curEvolutionIconStatus[k].itemIndex = -1
            curItemTable[index].item:invoke("evoUnSel")
            curItemTable[index].isSet = false
            self.evolutionImg[k]:SetImage("")
            self:refreshInfo()
            return
        end
    end
    print("Can not find itemIndex to UnSel Check Plz ....")
end

function M:setAllItems()
    curItemTable = {}
    curEvolutionIconStatus = {
        [1] = {isSet = false, itemIndex = -1},
        [2] = {isSet = false, itemIndex = -1},
        [3] = {isSet = false, itemIndex = -1}
    }
    self.mainView:RemoveAllItems()
    for _, v in pairs(self.evolutionImg) do
        v:SetImage("")
    end
    local itemWith = (self.mainView:GetPixelSize().x - widthPadding) / columnNu
    for k, v in pairs(curPetPageTable) do
        if v.index ~= targetIndex then
            local item = UIMgr:new_widget("petPackagePetItem")
            item:SetArea({ 0, 0 }, { 0, 0 }, { 0, itemWith }, { 0, itemWith })
            item:invoke("initShow", v.data.ID, v.data.petType, v.data.rank, v.data.level)
            table.insert(curItemTable, {item = item, index = k, isSet = false})
            self.mainView:AddItem(item)
        end
    end
    for k, v in pairs(curItemTable) do
        self:subscribe(v.item, UIEvent.EventWindowClick, function ()
            if v.isSet then
                self:itemUnSel(k)
            else
                self:itemOnSel(k)
            end
        end)
    end
end


return M