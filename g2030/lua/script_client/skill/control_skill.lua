---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by qjc.
--- DateTime: 2020/4/14 20:56
---

local SkillBase = Skill.GetType("Base")
local ControlSkill = Skill.GetType("ControlSkill")
local control = Blockman.Instance():control()
ControlSkill.timer = nil

local function getNearbyEntities(from, range)
    if not from then
        return
    end

    local player = Player.CurPlayer
    if not player then
        return
    end

    local nearbyEntities = from:getNearbyEntities(range)
    local ret = {}
    local iscontainSelf = false
    for _, entity in pairs(nearbyEntities) do
        if entity.objID ~= from.objID  and entity.isPlayer then
            --todo delete teammate
            ret[#ret + 1] = entity

            entity:data("main").beAttackByRoundupSkill = true
            if entity.objID == player.objID then
                iscontainSelf = true
            end
        end
    end

    return ret, iscontainSelf
end

local function roundUp(from)
    if not from then
        return
    end

    local player = Player.CurPlayer
    if not player then return end

    local RoundUpData = player:data("main").RoundUpData
    local entityIndex = RoundUpData.entityIndex
    local nearbyEntities = RoundUpData.nearbyEntities

    if entityIndex > 0 then
        local pTarget = nearbyEntities[entityIndex]
        if pTarget then
            local d = Lib.tov3(pTarget:getPosition()) - Lib.tov3(from:getPosition())
            local yaw = math.atan(d.z, d.x)
            player:setBodyYaw(math.deg(yaw) - 90)
            pTarget:setRotationYaw(math.deg(yaw) - 90)
            local pos = from:getPosition()
            pTarget.forceTargetPos = Lib.tov3({x = pos.x + 0.5, y = pos.y, z = pos.z - 0.5})
            pTarget.forceTime = 5

            local RoundUpData = {
                nearbyEntities = nearbyEntities,
                entityIndex = entityIndex - 1,
            }

            pTarget:data("main").beAttackByRoundupSkill = nil
            player:data("main").RoundUpData = RoundUpData
        end
    else
        player:data("main").RoundUpData = nil
        ControlSkill.timer = nil
        control.enable = true
        return false
    end

    return true
end

function ControlSkill:cast(packet, from)
    if not from then
        return
    end

    local player = Player.CurPlayer
    if not player then
        return
    end

    if self.RoundUpRange ~= nil then
        local nearbyEntities, iscontainSelf = getNearbyEntities(from, self.RoundUpRange)
        if iscontainSelf then
            control.enable = false
        end

        local RoundUpData = {
            nearbyEntities = nearbyEntities,
            entityIndex = #nearbyEntities,
        }
        player:data("main").RoundUpData = RoundUpData
        ControlSkill.timer = player:timer(1, roundUp, from)
    end
end